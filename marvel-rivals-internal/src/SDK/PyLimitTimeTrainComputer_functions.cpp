#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PyLimitTimeTrainComputer

#include "Basic.hpp"

#include "PyLimitTimeTrainComputer_classes.hpp"


namespace SDK
{

// PythonFunction PyLimitTimeTrainComputer.PyLimitTimeTrainComputer.ReceiveInit
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent)

void APyLimitTimeTrainComputer::ReceiveInit()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyLimitTimeTrainComputer", "ReceiveInit");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyLimitTimeTrainComputer.PyLimitTimeTrainComputer.ReceiveBeginPlay
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent)

void APyLimitTimeTrainComputer::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyLimitTimeTrainComputer", "ReceiveBeginPlay");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyLimitTimeTrainComputer.PyLimitTimeTrainComputer.S_Interactive_CD_End
// (Native, Public, BlueprintCallable)

void APyLimitTimeTrainComputer::S_Interactive_CD_End()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyLimitTimeTrainComputer", "S_Interactive_CD_End");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyLimitTimeTrainComputer.PyLimitTimeTrainComputer.S_Config_CD_End
// (Native, Public, BlueprintCallable)

void APyLimitTimeTrainComputer::S_Config_CD_End()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyLimitTimeTrainComputer", "S_Config_CD_End");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyLimitTimeTrainComputer.PyLimitTimeTrainComputer.S_train_prepare_end
// (Native, Public, BlueprintCallable)

void APyLimitTimeTrainComputer::S_train_prepare_end()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyLimitTimeTrainComputer", "S_train_prepare_end");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyLimitTimeTrainComputer.PyLimitTimeTrainComputer.S_train_end
// (Native, Public, BlueprintCallable)

void APyLimitTimeTrainComputer::S_train_end()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyLimitTimeTrainComputer", "S_train_end");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyLimitTimeTrainComputer.PyLimitTimeTrainComputer.OnRep_TrainingConfig
// (Native, Public, BlueprintCallable)

void APyLimitTimeTrainComputer::OnRep_TrainingConfig()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyLimitTimeTrainComputer", "OnRep_TrainingConfig");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyLimitTimeTrainComputer.PyLimitTimeTrainComputer.OnRep_TrainingState
// (Native, Public, BlueprintCallable)

void APyLimitTimeTrainComputer::OnRep_TrainingState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyLimitTimeTrainComputer", "OnRep_TrainingState");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyLimitTimeTrainComputer.PyLimitTimeTrainComputer.OnRep_TrainingScore
// (Native, Public, BlueprintCallable)

void APyLimitTimeTrainComputer::OnRep_TrainingScore()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyLimitTimeTrainComputer", "OnRep_TrainingScore");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyLimitTimeTrainComputer.PyLimitTimeTrainConfigComputer.ReceiveBeginPlay
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent)

void APyLimitTimeTrainConfigComputer::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyLimitTimeTrainConfigComputer", "ReceiveBeginPlay");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}

}

