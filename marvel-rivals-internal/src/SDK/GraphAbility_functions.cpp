#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GraphAbility

#include "Basic.hpp"

#include "GraphAbility_classes.hpp"
#include "GraphAbility_parameters.hpp"


namespace SDK
{

// Function GraphAbility.GATaskBase.EndTask_Aborted
// (Final, Native, Protected)

void UGATaskBase::EndTask_Aborted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GATaskBase", "EndTask_Aborted");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GraphAbility.GATaskBase.EndTask_Finished
// (Final, Native, Protected, BlueprintCallable)

void UGATaskBase::EndTask_Finished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GATaskBase", "EndTask_Finished");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GraphAbility.GATaskBase.RegisterSubTask
// (Final, Native, Protected)
// Parameters:
// class UGameplayTask*                    InTask                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bSubTaskWithAbility                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGATaskBase::RegisterSubTask(class UGameplayTask* InTask, bool bSubTaskWithAbility)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GATaskBase", "RegisterSubTask");

	Params::GATaskBase_RegisterSubTask Parms{};

	Parms.InTask = InTask;
	Parms.bSubTaskWithAbility = bSubTaskWithAbility;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GraphAbility.GATaskBase.GetOwnerNetRole
// (Final, Native, Protected, Const)
// Parameters:
// ENetRole                                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ENetRole UGATaskBase::GetOwnerNetRole() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GATaskBase", "GetOwnerNetRole");

	Params::GATaskBase_GetOwnerNetRole Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GraphAbility.GATaskBase.IsAbilityActivated
// (Final, Native, Protected, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UGATaskBase::IsAbilityActivated() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GATaskBase", "IsAbilityActivated");

	Params::GATaskBase_IsAbilityActivated Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GraphAbility.GASpecTaskBase.OnSpecBegin
// (Native, Event, Protected, BlueprintEvent)

void UGASpecTaskBase::OnSpecBegin()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GASpecTaskBase", "OnSpecBegin");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GraphAbility.GASpecTaskBase.OnSpecEnd
// (Native, Event, Protected, BlueprintEvent)

void UGASpecTaskBase::OnSpecEnd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GASpecTaskBase", "OnSpecEnd");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GraphAbility.GASpecTaskBase_Ability.CanActivateAbility
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UGASpecTaskBase_Ability::CanActivateAbility()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GASpecTaskBase_Ability", "CanActivateAbility");

	Params::GASpecTaskBase_Ability_CanActivateAbility Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GraphAbility.GASpecTaskBase_Ability.OnAbilityActivate
// (Native, Event, Protected, BlueprintEvent)

void UGASpecTaskBase_Ability::OnAbilityActivate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GASpecTaskBase_Ability", "OnAbilityActivate");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GraphAbility.GASpecTaskBase_Ability.OnAbilityEnd
// (Native, Event, Protected, BlueprintEvent)

void UGASpecTaskBase_Ability::OnAbilityEnd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GASpecTaskBase_Ability", "OnAbilityEnd");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GraphAbility.GASpecTask_SelectTarget.AsSelectTargetAbility
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UGameplayAbility*                 OwningAbility                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(struct FHitResult& HitInfo, bool* bResult)>FilterDelegate                                         (Parm, ZeroConstructor, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FSelectTaskParam                 SelectParam                                            (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
// bool                                    bAutoBeginSelect                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bShouldCheckActivate                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UGASpecTask_SelectTarget*         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UGASpecTask_SelectTarget* UGASpecTask_SelectTarget::AsSelectTargetAbility(class UGameplayAbility* OwningAbility, TDelegate<void(struct FHitResult& HitInfo, bool* bResult)> FilterDelegate, const struct FSelectTaskParam& SelectParam, bool bAutoBeginSelect, bool bShouldCheckActivate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GASpecTask_SelectTarget", "AsSelectTargetAbility");

	Params::GASpecTask_SelectTarget_AsSelectTargetAbility Parms{};

	Parms.OwningAbility = OwningAbility;
	Parms.FilterDelegate = FilterDelegate;
	Parms.SelectParam = std::move(SelectParam);
	Parms.bAutoBeginSelect = bAutoBeginSelect;
	Parms.bShouldCheckActivate = bShouldCheckActivate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GraphAbility.GASpecTask_SelectTarget.BeginSelect
// (Final, Native, Public)

void UGASpecTask_SelectTarget::BeginSelect()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GASpecTask_SelectTarget", "BeginSelect");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GraphAbility.GASpecTask_SelectTarget.EndSelect
// (Final, Native, Public)

void UGASpecTask_SelectTarget::EndSelect()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GASpecTask_SelectTarget", "EndSelect");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GraphAbility.GASpecTask_SelectTarget.FilterTargets
// (Final, Native, Public, HasOutParams, HasDefaults)
// Parameters:
// struct FVector                          TraceStart                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FHitResult>               InHitResults                                           (Parm, OutParm, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void UGASpecTask_SelectTarget::FilterTargets(const struct FVector& TraceStart, TArray<struct FHitResult>* InHitResults)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GASpecTask_SelectTarget", "FilterTargets");

	Params::GASpecTask_SelectTarget_FilterTargets Parms{};

	Parms.TraceStart = std::move(TraceStart);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (InHitResults != nullptr)
		*InHitResults = std::move(Parms.InHitResults);
}


// Function GraphAbility.GATask_ApplyDash.ApplyDash
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UGameplayAbility*                 OwningAbility                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FDashAbilityInfo                 DashInfo_0                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FVector                          ToLocation                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          ToDirection                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           ToTargetActor                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FPortalSegments                  PortalSegments_0                                       (Parm, AdvancedDisplay, NativeAccessSpecifierPublic)
// class UGATask_ApplyDash*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UGATask_ApplyDash* UGATask_ApplyDash::ApplyDash(class UGameplayAbility* OwningAbility, const struct FDashAbilityInfo& DashInfo_0, const struct FVector& ToLocation, const struct FVector& ToDirection, class AActor* ToTargetActor, const struct FPortalSegments& PortalSegments_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GATask_ApplyDash", "ApplyDash");

	Params::GATask_ApplyDash_ApplyDash Parms{};

	Parms.OwningAbility = OwningAbility;
	Parms.DashInfo_0 = std::move(DashInfo_0);
	Parms.ToLocation = std::move(ToLocation);
	Parms.ToDirection = std::move(ToDirection);
	Parms.ToTargetActor = ToTargetActor;
	Parms.PortalSegments_0 = std::move(PortalSegments_0);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GraphAbility.GATask_ApplyDash.EndDash
// (Final, Native, Public, BlueprintCallable)

void UGATask_ApplyDash::EndDash()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GATask_ApplyDash", "EndDash");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GraphAbility.GATask_ApplyDash.OnDashFinished
// (Final, Native, Protected)
// Parameters:
// EDashStopReason                         Reason                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGATask_ApplyDash::OnDashFinished(EDashStopReason Reason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GATask_ApplyDash", "OnDashFinished");

	Params::GATask_ApplyDash_OnDashFinished Parms{};

	Parms.Reason = Reason;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GraphAbility.GATask_ApplyDash.OnDashHit
// (Final, Native, Protected, HasOutParams, HasDefaults)
// Parameters:
// class AActor*                           SelfActor                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           OtherActor                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          NormalImpulse                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult                       Hit                                                    (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

void UGATask_ApplyDash::OnDashHit(class AActor* SelfActor, class AActor* OtherActor, const struct FVector& NormalImpulse, const struct FHitResult& Hit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GATask_ApplyDash", "OnDashHit");

	Params::GATask_ApplyDash_OnDashHit Parms{};

	Parms.SelfActor = SelfActor;
	Parms.OtherActor = OtherActor;
	Parms.NormalImpulse = std::move(NormalImpulse);
	Parms.Hit = std::move(Hit);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GraphAbility.GATask_Gather.GA_StartGather
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UGameplayAbility*                 OwningAbility                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bStopAtMax                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   CustomDuration                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UGATask_Gather*                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UGATask_Gather* UGATask_Gather::GA_StartGather(class UGameplayAbility* OwningAbility, bool bStopAtMax, float CustomDuration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GATask_Gather", "GA_StartGather");

	Params::GATask_Gather_GA_StartGather Parms{};

	Parms.OwningAbility = OwningAbility;
	Parms.bStopAtMax = bStopAtMax;
	Parms.CustomDuration = CustomDuration;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GraphAbility.GATask_Gather.StartGather
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UGameplayAbility*                 OwningAbility                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bStopAtMax                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   CustomDuration                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UGATask_Gather*                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UGATask_Gather* UGATask_Gather::StartGather(class UGameplayAbility* OwningAbility, bool bStopAtMax, float CustomDuration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GATask_Gather", "StartGather");

	Params::GATask_Gather_StartGather Parms{};

	Parms.OwningAbility = OwningAbility;
	Parms.bStopAtMax = bStopAtMax;
	Parms.CustomDuration = CustomDuration;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GraphAbility.GATask_Gather.OnGatherIndexChanged
// (Final, Native, Public)
// Parameters:
// int32                                   TriggeredIndex                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGATask_Gather::OnGatherIndexChanged(int32 TriggeredIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GATask_Gather", "OnGatherIndexChanged");

	Params::GATask_Gather_OnGatherIndexChanged Parms{};

	Parms.TriggeredIndex = TriggeredIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GraphAbility.GATask_Gather.OnGatherStateChanged
// (Final, Native, Public)
// Parameters:
// bool                                    bState                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGATask_Gather::OnGatherStateChanged(bool bState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GATask_Gather", "OnGatherStateChanged");

	Params::GATask_Gather_OnGatherStateChanged Parms{};

	Parms.bState = bState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GraphAbility.GATask_Gather.StopGather
// (Final, Native, Public, BlueprintCallable)

void UGATask_Gather::StopGather()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GATask_Gather", "StopGather");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GraphAbility.GATask_PlayTimeline.PlayTimeline
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UGameplayAbility*                 OwningAbility                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UAnimTimeline*>            Timelines_0                                            (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// TArray<int32>                           AnimIndexs_0                                           (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    bStopTimeline                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UGATask_PlayTimeline*             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UGATask_PlayTimeline* UGATask_PlayTimeline::PlayTimeline(class UGameplayAbility* OwningAbility, const TArray<class UAnimTimeline*>& Timelines_0, const TArray<int32>& AnimIndexs_0, bool bStopTimeline)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GATask_PlayTimeline", "PlayTimeline");

	Params::GATask_PlayTimeline_PlayTimeline Parms{};

	Parms.OwningAbility = OwningAbility;
	Parms.Timelines_0 = std::move(Timelines_0);
	Parms.AnimIndexs_0 = std::move(AnimIndexs_0);
	Parms.bStopTimeline = bStopTimeline;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GraphAbility.GATask_PlayTimeline.PlayTimelineByIndex
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UGameplayAbility*                 OwningAbility                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<int32>                           TimelineIndexs_0                                       (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    bStopTimeline                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UGATask_PlayTimeline*             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UGATask_PlayTimeline* UGATask_PlayTimeline::PlayTimelineByIndex(class UGameplayAbility* OwningAbility, const TArray<int32>& TimelineIndexs_0, bool bStopTimeline)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GATask_PlayTimeline", "PlayTimelineByIndex");

	Params::GATask_PlayTimeline_PlayTimelineByIndex Parms{};

	Parms.OwningAbility = OwningAbility;
	Parms.TimelineIndexs_0 = std::move(TimelineIndexs_0);
	Parms.bStopTimeline = bStopTimeline;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GraphAbility.GATask_PlayTimeline.EndPlayTimeline
// (Final, Native, Public, BlueprintCallable)

void UGATask_PlayTimeline::EndPlayTimeline()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GATask_PlayTimeline", "EndPlayTimeline");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GraphAbility.GATask_PlayTimeline.OnBlendOut
// (Final, Native, Private, HasOutParams)
// Parameters:
// struct FGameplayTag                     EventTag                                               (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayEventData               EventData                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UGATask_PlayTimeline::OnBlendOut(const struct FGameplayTag& EventTag, const struct FGameplayEventData& EventData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GATask_PlayTimeline", "OnBlendOut");

	Params::GATask_PlayTimeline_OnBlendOut Parms{};

	Parms.EventTag = std::move(EventTag);
	Parms.EventData = std::move(EventData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GraphAbility.GATask_PlayTimeline.OnCancelled
// (Final, Native, Private, HasOutParams)
// Parameters:
// struct FGameplayTag                     EventTag                                               (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayEventData               EventData                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UGATask_PlayTimeline::OnCancelled(const struct FGameplayTag& EventTag, const struct FGameplayEventData& EventData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GATask_PlayTimeline", "OnCancelled");

	Params::GATask_PlayTimeline_OnCancelled Parms{};

	Parms.EventTag = std::move(EventTag);
	Parms.EventData = std::move(EventData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GraphAbility.GATask_PlayTimeline.OnCompleted
// (Final, Native, Private, HasOutParams)
// Parameters:
// struct FGameplayTag                     EventTag                                               (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayEventData               EventData                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UGATask_PlayTimeline::OnCompleted(const struct FGameplayTag& EventTag, const struct FGameplayEventData& EventData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GATask_PlayTimeline", "OnCompleted");

	Params::GATask_PlayTimeline_OnCompleted Parms{};

	Parms.EventTag = std::move(EventTag);
	Parms.EventData = std::move(EventData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GraphAbility.GATask_PlayTimeline.OnInterrupted
// (Final, Native, Private, HasOutParams)
// Parameters:
// struct FGameplayTag                     EventTag                                               (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayEventData               EventData                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UGATask_PlayTimeline::OnInterrupted(const struct FGameplayTag& EventTag, const struct FGameplayEventData& EventData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GATask_PlayTimeline", "OnInterrupted");

	Params::GATask_PlayTimeline_OnInterrupted Parms{};

	Parms.EventTag = std::move(EventTag);
	Parms.EventData = std::move(EventData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GraphAbility.GATask_PlayTimeline.OnReceiveEvent
// (Final, Native, Private, HasOutParams)
// Parameters:
// struct FGameplayTag                     EventTag                                               (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayEventData               EventData                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UGATask_PlayTimeline::OnReceiveEvent(const struct FGameplayTag& EventTag, const struct FGameplayEventData& EventData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GATask_PlayTimeline", "OnReceiveEvent");

	Params::GATask_PlayTimeline_OnReceiveEvent Parms{};

	Parms.EventTag = std::move(EventTag);
	Parms.EventData = std::move(EventData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GraphAbility.GATask_ProjectileHoming.SetProjectileHoming
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UGameplayAbility*                 OwningAbility                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AMarvelAbilityTargetActor_Projectile*Projectile_0                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           HomingToTarget                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UGATask_ProjectileHoming*         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UGATask_ProjectileHoming* UGATask_ProjectileHoming::SetProjectileHoming(class UGameplayAbility* OwningAbility, class AMarvelAbilityTargetActor_Projectile* Projectile_0, class AActor* HomingToTarget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GATask_ProjectileHoming", "SetProjectileHoming");

	Params::GATask_ProjectileHoming_SetProjectileHoming Parms{};

	Parms.OwningAbility = OwningAbility;
	Parms.Projectile_0 = Projectile_0;
	Parms.HomingToTarget = HomingToTarget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GraphAbility.GATask_ProjectileHoming.SetProjectileHomingWithProjectile
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AMarvelAbilityTargetActor_Projectile*Projectile_0                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           HomingToTarget                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UGATask_ProjectileHoming*         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UGATask_ProjectileHoming* UGATask_ProjectileHoming::SetProjectileHomingWithProjectile(class AMarvelAbilityTargetActor_Projectile* Projectile_0, class AActor* HomingToTarget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GATask_ProjectileHoming", "SetProjectileHomingWithProjectile");

	Params::GATask_ProjectileHoming_SetProjectileHomingWithProjectile Parms{};

	Parms.Projectile_0 = Projectile_0;
	Parms.HomingToTarget = HomingToTarget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GraphAbility.GATask_ProjectileHoming.OnHomingEnd
// (Final, Native, Public)

void UGATask_ProjectileHoming::OnHomingEnd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GATask_ProjectileHoming", "OnHomingEnd");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GraphAbility.GATask_SpawnProjectile.SpawnProjectile
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UGameplayAbility*                 OwningAbility                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InProjectileID                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          CustomLocation_0                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                         CustomRotation_0                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, NativeAccessSpecifierPublic)
// bool                                    bRelative                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UGATask_SpawnProjectile*          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UGATask_SpawnProjectile* UGATask_SpawnProjectile::SpawnProjectile(class UGameplayAbility* OwningAbility, int32 InProjectileID, const struct FVector& CustomLocation_0, const struct FRotator& CustomRotation_0, bool bRelative)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GATask_SpawnProjectile", "SpawnProjectile");

	Params::GATask_SpawnProjectile_SpawnProjectile Parms{};

	Parms.OwningAbility = OwningAbility;
	Parms.InProjectileID = InProjectileID;
	Parms.CustomLocation_0 = std::move(CustomLocation_0);
	Parms.CustomRotation_0 = std::move(CustomRotation_0);
	Parms.bRelative = bRelative;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GraphAbility.GATask_SpawnProjectile.SpawnProjectileWithObject
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                          Source                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InProjectileID                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          CustomLocation_0                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                         CustomRotation_0                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, NativeAccessSpecifierPublic)
// class UGATask_SpawnProjectile*          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UGATask_SpawnProjectile* UGATask_SpawnProjectile::SpawnProjectileWithObject(class UObject* Source, int32 InProjectileID, const struct FVector& CustomLocation_0, const struct FRotator& CustomRotation_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GATask_SpawnProjectile", "SpawnProjectileWithObject");

	Params::GATask_SpawnProjectile_SpawnProjectileWithObject Parms{};

	Parms.Source = Source;
	Parms.InProjectileID = InProjectileID;
	Parms.CustomLocation_0 = std::move(CustomLocation_0);
	Parms.CustomRotation_0 = std::move(CustomRotation_0);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GraphAbility.GATask_SpawnProjectile.SpawnProjectileWithSource
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UGameplayAbility*                 OwningAbility                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InProjectileID                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           Source                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          CustomLocation_0                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                         CustomRotation_0                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, NativeAccessSpecifierPublic)
// class UGATask_SpawnProjectile*          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UGATask_SpawnProjectile* UGATask_SpawnProjectile::SpawnProjectileWithSource(class UGameplayAbility* OwningAbility, int32 InProjectileID, class AActor* Source, const struct FVector& CustomLocation_0, const struct FRotator& CustomRotation_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GATask_SpawnProjectile", "SpawnProjectileWithSource");

	Params::GATask_SpawnProjectile_SpawnProjectileWithSource Parms{};

	Parms.OwningAbility = OwningAbility;
	Parms.InProjectileID = InProjectileID;
	Parms.Source = Source;
	Parms.CustomLocation_0 = std::move(CustomLocation_0);
	Parms.CustomRotation_0 = std::move(CustomRotation_0);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GraphAbility.GATask_SpawnProjectile.OnApplyDamage
// (Final, Native, Protected)

void UGATask_SpawnProjectile::OnApplyDamage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GATask_SpawnProjectile", "OnApplyDamage");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GraphAbility.GATask_SpawnProjectile.OnBeginAgentTask
// (Final, Native, Protected)
// Parameters:
// class AActor*                           TargetActor                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGATask_SpawnProjectile::OnBeginAgentTask(class AActor* TargetActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GATask_SpawnProjectile", "OnBeginAgentTask");

	Params::GATask_SpawnProjectile_OnBeginAgentTask Parms{};

	Parms.TargetActor = TargetActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GraphAbility.GATask_SpawnProjectile.OnEndAgentTask
// (Final, Native, Protected)
// Parameters:
// class AActor*                           TargetActor                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGATask_SpawnProjectile::OnEndAgentTask(class AActor* TargetActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GATask_SpawnProjectile", "OnEndAgentTask");

	Params::GATask_SpawnProjectile_OnEndAgentTask Parms{};

	Parms.TargetActor = TargetActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GraphAbility.GATask_SpawnProjectile.OnHitOrTraceTarget
// (Final, Native, Protected, HasOutParams)
// Parameters:
// struct FHitResult                       HitTarget                                              (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

void UGATask_SpawnProjectile::OnHitOrTraceTarget(const struct FHitResult& HitTarget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GATask_SpawnProjectile", "OnHitOrTraceTarget");

	Params::GATask_SpawnProjectile_OnHitOrTraceTarget Parms{};

	Parms.HitTarget = std::move(HitTarget);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GraphAbility.GATask_SpawnProjectile.OnSpawnSuccess
// (Final, Native, Protected, HasOutParams)
// Parameters:
// class AActor*                           SpawnActor                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayAbilityTargetDataHandle Data                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UGATask_SpawnProjectile::OnSpawnSuccess(class AActor* SpawnActor, const struct FGameplayAbilityTargetDataHandle& Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GATask_SpawnProjectile", "OnSpawnSuccess");

	Params::GATask_SpawnProjectile_OnSpawnSuccess Parms{};

	Parms.SpawnActor = SpawnActor;
	Parms.Data = std::move(Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GraphAbility.GATask_SpawnScope.SpawnScope
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UGameplayAbility*                 OwningAbility                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InScopeID                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          CustomLocation_0                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                         CustomRotation_0                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, NativeAccessSpecifierPublic)
// class UGATask_SpawnScope*               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UGATask_SpawnScope* UGATask_SpawnScope::SpawnScope(class UGameplayAbility* OwningAbility, int32 InScopeID, const struct FVector& CustomLocation_0, const struct FRotator& CustomRotation_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GATask_SpawnScope", "SpawnScope");

	Params::GATask_SpawnScope_SpawnScope Parms{};

	Parms.OwningAbility = OwningAbility;
	Parms.InScopeID = InScopeID;
	Parms.CustomLocation_0 = std::move(CustomLocation_0);
	Parms.CustomRotation_0 = std::move(CustomRotation_0);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GraphAbility.GATask_SpawnScope.SpawnScopeWithObject
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                          Source                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InScopeID                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          CustomLocation_0                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                         CustomRotation_0                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, NativeAccessSpecifierPublic)
// class UGATask_SpawnScope*               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UGATask_SpawnScope* UGATask_SpawnScope::SpawnScopeWithObject(class UObject* Source, int32 InScopeID, const struct FVector& CustomLocation_0, const struct FRotator& CustomRotation_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GATask_SpawnScope", "SpawnScopeWithObject");

	Params::GATask_SpawnScope_SpawnScopeWithObject Parms{};

	Parms.Source = Source;
	Parms.InScopeID = InScopeID;
	Parms.CustomLocation_0 = std::move(CustomLocation_0);
	Parms.CustomRotation_0 = std::move(CustomRotation_0);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GraphAbility.GATask_SpawnScope.SpawnScopeWithSource
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UGameplayAbility*                 OwningAbility                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InScopeID                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           Source                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          CustomLocation_0                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                         CustomRotation_0                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, NativeAccessSpecifierPublic)
// class UGATask_SpawnScope*               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UGATask_SpawnScope* UGATask_SpawnScope::SpawnScopeWithSource(class UGameplayAbility* OwningAbility, int32 InScopeID, class AActor* Source, const struct FVector& CustomLocation_0, const struct FRotator& CustomRotation_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GATask_SpawnScope", "SpawnScopeWithSource");

	Params::GATask_SpawnScope_SpawnScopeWithSource Parms{};

	Parms.OwningAbility = OwningAbility;
	Parms.InScopeID = InScopeID;
	Parms.Source = Source;
	Parms.CustomLocation_0 = std::move(CustomLocation_0);
	Parms.CustomRotation_0 = std::move(CustomRotation_0);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GraphAbility.GATask_SpawnScope.OnActorBeginAgentTask
// (Final, Native, Protected)
// Parameters:
// class AActor*                           TargetActor                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGATask_SpawnScope::OnActorBeginAgentTask(class AActor* TargetActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GATask_SpawnScope", "OnActorBeginAgentTask");

	Params::GATask_SpawnScope_OnActorBeginAgentTask Parms{};

	Parms.TargetActor = TargetActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GraphAbility.GATask_SpawnScope.OnActorEndAgentTask
// (Final, Native, Protected)
// Parameters:
// class AActor*                           TargetActor                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGATask_SpawnScope::OnActorEndAgentTask(class AActor* TargetActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GATask_SpawnScope", "OnActorEndAgentTask");

	Params::GATask_SpawnScope_OnActorEndAgentTask Parms{};

	Parms.TargetActor = TargetActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GraphAbility.GATask_SpawnScope.OnApplyDamage
// (Final, Native, Protected)

void UGATask_SpawnScope::OnApplyDamage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GATask_SpawnScope", "OnApplyDamage");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GraphAbility.GATask_SpawnScope.OnNoActorScopeInited
// (Final, Native, Protected)
// Parameters:
// class UMarvelAgentTraceComponent*       TraceComp                                              (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UMarvelAgentEffectiveComponent*   EffectComp                                             (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGATask_SpawnScope::OnNoActorScopeInited(class UMarvelAgentTraceComponent* TraceComp, class UMarvelAgentEffectiveComponent* EffectComp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GATask_SpawnScope", "OnNoActorScopeInited");

	Params::GATask_SpawnScope_OnNoActorScopeInited Parms{};

	Parms.TraceComp = TraceComp;
	Parms.EffectComp = EffectComp;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GraphAbility.GATask_SpawnScope.OnSpawnActorSuccess
// (Final, Native, Protected, HasOutParams)
// Parameters:
// class AActor*                           SpawnActor                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayAbilityTargetDataHandle Data                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UGATask_SpawnScope::OnSpawnActorSuccess(class AActor* SpawnActor, const struct FGameplayAbilityTargetDataHandle& Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GATask_SpawnScope", "OnSpawnActorSuccess");

	Params::GATask_SpawnScope_OnSpawnActorSuccess Parms{};

	Parms.SpawnActor = SpawnActor;
	Parms.Data = std::move(Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GraphAbility.GATask_SpawnScope.OnTrace
// (Final, Native, Protected, HasOutParams)
// Parameters:
// class UObject*                          TraceSource                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FHitResult>               HitResults                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

void UGATask_SpawnScope::OnTrace(class UObject* TraceSource, const TArray<struct FHitResult>& HitResults)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GATask_SpawnScope", "OnTrace");

	Params::GATask_SpawnScope_OnTrace Parms{};

	Parms.TraceSource = TraceSource;
	Parms.HitResults = std::move(HitResults);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GraphAbility.GATask_SpawnScope.OnTraceEnd
// (Final, Native, Protected)

void UGATask_SpawnScope::OnTraceEnd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GATask_SpawnScope", "OnTraceEnd");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GraphAbility.GATask_SpawnSummoned.SpawnProjectileWithObject
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                          Source                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InSummonedID                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          CustomLocation_0                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                         CustomRotation_0                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, NativeAccessSpecifierPublic)
// class UGATask_SpawnSummoned*            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UGATask_SpawnSummoned* UGATask_SpawnSummoned::SpawnProjectileWithObject(class UObject* Source, int32 InSummonedID, const struct FVector& CustomLocation_0, const struct FRotator& CustomRotation_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GATask_SpawnSummoned", "SpawnProjectileWithObject");

	Params::GATask_SpawnSummoned_SpawnProjectileWithObject Parms{};

	Parms.Source = Source;
	Parms.InSummonedID = InSummonedID;
	Parms.CustomLocation_0 = std::move(CustomLocation_0);
	Parms.CustomRotation_0 = std::move(CustomRotation_0);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GraphAbility.GATask_SpawnSummoned.SpawnSummoned
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UGameplayAbility*                 OwningAbility                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InSummonedID                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          CustomLocation_0                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                         CustomRotation_0                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, NativeAccessSpecifierPublic)
// class UGATask_SpawnSummoned*            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UGATask_SpawnSummoned* UGATask_SpawnSummoned::SpawnSummoned(class UGameplayAbility* OwningAbility, int32 InSummonedID, const struct FVector& CustomLocation_0, const struct FRotator& CustomRotation_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GATask_SpawnSummoned", "SpawnSummoned");

	Params::GATask_SpawnSummoned_SpawnSummoned Parms{};

	Parms.OwningAbility = OwningAbility;
	Parms.InSummonedID = InSummonedID;
	Parms.CustomLocation_0 = std::move(CustomLocation_0);
	Parms.CustomRotation_0 = std::move(CustomRotation_0);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GraphAbility.GATask_SpawnSummoned.SpawnSummonedWithSource
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UGameplayAbility*                 OwningAbility                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InSummonedID                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           Source                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          CustomLocation_0                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                         CustomRotation_0                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, NativeAccessSpecifierPublic)
// class UGATask_SpawnSummoned*            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UGATask_SpawnSummoned* UGATask_SpawnSummoned::SpawnSummonedWithSource(class UGameplayAbility* OwningAbility, int32 InSummonedID, class AActor* Source, const struct FVector& CustomLocation_0, const struct FRotator& CustomRotation_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GATask_SpawnSummoned", "SpawnSummonedWithSource");

	Params::GATask_SpawnSummoned_SpawnSummonedWithSource Parms{};

	Parms.OwningAbility = OwningAbility;
	Parms.InSummonedID = InSummonedID;
	Parms.Source = Source;
	Parms.CustomLocation_0 = std::move(CustomLocation_0);
	Parms.CustomRotation_0 = std::move(CustomRotation_0);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GraphAbility.GATask_SpawnSummoned.OnBeginAgentTask
// (Final, Native, Protected)
// Parameters:
// class AActor*                           TargetActor                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGATask_SpawnSummoned::OnBeginAgentTask(class AActor* TargetActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GATask_SpawnSummoned", "OnBeginAgentTask");

	Params::GATask_SpawnSummoned_OnBeginAgentTask Parms{};

	Parms.TargetActor = TargetActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GraphAbility.GATask_SpawnSummoned.OnEndAgentTask
// (Final, Native, Protected)
// Parameters:
// class AActor*                           TargetActor                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGATask_SpawnSummoned::OnEndAgentTask(class AActor* TargetActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GATask_SpawnSummoned", "OnEndAgentTask");

	Params::GATask_SpawnSummoned_OnEndAgentTask Parms{};

	Parms.TargetActor = TargetActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GraphAbility.GATask_SpawnSummoned.OnSpawnSummonedSuccess
// (Final, Native, Protected)
// Parameters:
// class AActor*                           SpawnActor                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGATask_SpawnSummoned::OnSpawnSummonedSuccess(class AActor* SpawnActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GATask_SpawnSummoned", "OnSpawnSummonedSuccess");

	Params::GATask_SpawnSummoned_OnSpawnSummonedSuccess Parms{};

	Parms.SpawnActor = SpawnActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GraphAbility.GATask_SpawnSummoned.OnSummonedDeath
// (Final, Native, Protected)
// Parameters:
// class AActor*                           TargetActor                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGATask_SpawnSummoned::OnSummonedDeath(class AActor* TargetActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GATask_SpawnSummoned", "OnSummonedDeath");

	Params::GATask_SpawnSummoned_OnSummonedDeath Parms{};

	Parms.TargetActor = TargetActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GraphAbility.GATask_WaitAttributeChange.WaitAttributeChange_Range
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UGameplayAbility*                 OwningAbility                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayAttribute               Attribute_0                                            (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   MinValue_0                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIncludeMin_0                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   MaxValue_0                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIncludeMax_0                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bTriggerOnce_0                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bBeginCheck_0                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UGATask_WaitAttributeChange*      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UGATask_WaitAttributeChange* UGATask_WaitAttributeChange::WaitAttributeChange_Range(class UGameplayAbility* OwningAbility, const struct FGameplayAttribute& Attribute_0, float MinValue_0, bool bIncludeMin_0, float MaxValue_0, bool bIncludeMax_0, bool bTriggerOnce_0, bool bBeginCheck_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GATask_WaitAttributeChange", "WaitAttributeChange_Range");

	Params::GATask_WaitAttributeChange_WaitAttributeChange_Range Parms{};

	Parms.OwningAbility = OwningAbility;
	Parms.Attribute_0 = std::move(Attribute_0);
	Parms.MinValue_0 = MinValue_0;
	Parms.bIncludeMin_0 = bIncludeMin_0;
	Parms.MaxValue_0 = MaxValue_0;
	Parms.bIncludeMax_0 = bIncludeMax_0;
	Parms.bTriggerOnce_0 = bTriggerOnce_0;
	Parms.bBeginCheck_0 = bBeginCheck_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GraphAbility.GATask_WaitAttributeChange.WaitAttributeChange_Single
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UGameplayAbility*                 OwningAbility                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayAttribute               Attribute_0                                            (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   CompareValue                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EAttrCompareType                        Comparison                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bTriggerOnce_0                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bBeginCheck_0                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UGATask_WaitAttributeChange*      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UGATask_WaitAttributeChange* UGATask_WaitAttributeChange::WaitAttributeChange_Single(class UGameplayAbility* OwningAbility, const struct FGameplayAttribute& Attribute_0, float CompareValue, EAttrCompareType Comparison, bool bTriggerOnce_0, bool bBeginCheck_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GATask_WaitAttributeChange", "WaitAttributeChange_Single");

	Params::GATask_WaitAttributeChange_WaitAttributeChange_Single Parms{};

	Parms.OwningAbility = OwningAbility;
	Parms.Attribute_0 = std::move(Attribute_0);
	Parms.CompareValue = CompareValue;
	Parms.Comparison = Comparison;
	Parms.bTriggerOnce_0 = bTriggerOnce_0;
	Parms.bBeginCheck_0 = bBeginCheck_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GraphAbility.GATask_WaitBuffEvent.WaitBuffEvent
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UGameplayAbility*                 OwningAbility                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   BuffID_0                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UGATask_WaitBuffEvent*            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UGATask_WaitBuffEvent* UGATask_WaitBuffEvent::WaitBuffEvent(class UGameplayAbility* OwningAbility, int32 BuffID_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GATask_WaitBuffEvent", "WaitBuffEvent");

	Params::GATask_WaitBuffEvent_WaitBuffEvent Parms{};

	Parms.OwningAbility = OwningAbility;
	Parms.BuffID_0 = BuffID_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GraphAbility.GATask_WaitBuffEvent.OnAppliedReplicatedCallback
// (Final, Native, Private, HasOutParams)
// Parameters:
// struct FGameplayAbilityTargetDataHandle Data                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UGATask_WaitBuffEvent::OnAppliedReplicatedCallback(const struct FGameplayAbilityTargetDataHandle& Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GATask_WaitBuffEvent", "OnAppliedReplicatedCallback");

	Params::GATask_WaitBuffEvent_OnAppliedReplicatedCallback Parms{};

	Parms.Data = std::move(Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GraphAbility.GATask_WaitBuffEvent.OnRemovedReplicatedCallback
// (Final, Native, Private, HasOutParams)
// Parameters:
// struct FGameplayAbilityTargetDataHandle Data                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UGATask_WaitBuffEvent::OnRemovedReplicatedCallback(const struct FGameplayAbilityTargetDataHandle& Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GATask_WaitBuffEvent", "OnRemovedReplicatedCallback");

	Params::GATask_WaitBuffEvent_OnRemovedReplicatedCallback Parms{};

	Parms.Data = std::move(Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GraphAbility.GATask_WaitConfirmCancel.WaitConfirmCancel
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UGameplayAbility*                 OwningAbility                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EAbilityInputBinds                      ConfirmInput                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EAbilityInputBinds                      CancelInput                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bSkipNowTrigger_0                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   MaxWaitTime                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UGATask_WaitConfirmCancel*        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UGATask_WaitConfirmCancel* UGATask_WaitConfirmCancel::WaitConfirmCancel(class UGameplayAbility* OwningAbility, EAbilityInputBinds ConfirmInput, EAbilityInputBinds CancelInput, bool bSkipNowTrigger_0, float MaxWaitTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GATask_WaitConfirmCancel", "WaitConfirmCancel");

	Params::GATask_WaitConfirmCancel_WaitConfirmCancel Parms{};

	Parms.OwningAbility = OwningAbility;
	Parms.ConfirmInput = ConfirmInput;
	Parms.CancelInput = CancelInput;
	Parms.bSkipNowTrigger_0 = bSkipNowTrigger_0;
	Parms.MaxWaitTime = MaxWaitTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GraphAbility.GATask_WaitConfirmCancel.WaitConfirmCancelDefault
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UGameplayAbility*                 OwningAbility                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bSkipNowTrigger_0                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   MaxWaitTime                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UGATask_WaitConfirmCancel*        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UGATask_WaitConfirmCancel* UGATask_WaitConfirmCancel::WaitConfirmCancelDefault(class UGameplayAbility* OwningAbility, bool bSkipNowTrigger_0, float MaxWaitTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GATask_WaitConfirmCancel", "WaitConfirmCancelDefault");

	Params::GATask_WaitConfirmCancel_WaitConfirmCancelDefault Parms{};

	Parms.OwningAbility = OwningAbility;
	Parms.bSkipNowTrigger_0 = bSkipNowTrigger_0;
	Parms.MaxWaitTime = MaxWaitTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GraphAbility.GATask_WaitConfirmCancel.EndWait
// (Final, Native, Public, BlueprintCallable)

void UGATask_WaitConfirmCancel::EndWait()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GATask_WaitConfirmCancel", "EndWait");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GraphAbility.GATask_WaitConfirmCancel.OnCancelPressedCallback
// (Final, Native, Private)
// Parameters:
// float                                   TimeWaited                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGATask_WaitConfirmCancel::OnCancelPressedCallback(float TimeWaited)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GATask_WaitConfirmCancel", "OnCancelPressedCallback");

	Params::GATask_WaitConfirmCancel_OnCancelPressedCallback Parms{};

	Parms.TimeWaited = TimeWaited;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GraphAbility.GATask_WaitConfirmCancel.OnCancelReleasedCallback
// (Final, Native, Private)
// Parameters:
// float                                   TimeWaited                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGATask_WaitConfirmCancel::OnCancelReleasedCallback(float TimeWaited)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GATask_WaitConfirmCancel", "OnCancelReleasedCallback");

	Params::GATask_WaitConfirmCancel_OnCancelReleasedCallback Parms{};

	Parms.TimeWaited = TimeWaited;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GraphAbility.GATask_WaitConfirmCancel.OnConfirmPressedCallback
// (Final, Native, Private)
// Parameters:
// float                                   TimeWaited                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGATask_WaitConfirmCancel::OnConfirmPressedCallback(float TimeWaited)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GATask_WaitConfirmCancel", "OnConfirmPressedCallback");

	Params::GATask_WaitConfirmCancel_OnConfirmPressedCallback Parms{};

	Parms.TimeWaited = TimeWaited;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GraphAbility.GATask_WaitConfirmCancel.OnConfirmReleasedCallback
// (Final, Native, Private)
// Parameters:
// float                                   TimeWaited                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGATask_WaitConfirmCancel::OnConfirmReleasedCallback(float TimeWaited)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GATask_WaitConfirmCancel", "OnConfirmReleasedCallback");

	Params::GATask_WaitConfirmCancel_OnConfirmReleasedCallback Parms{};

	Parms.TimeWaited = TimeWaited;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GraphAbility.GATask_WaitConfirmCancel.OnTimeoutCallback
// (Final, Native, Private)

void UGATask_WaitConfirmCancel::OnTimeoutCallback()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GATask_WaitConfirmCancel", "OnTimeoutCallback");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GraphAbility.GATask_WaitDamageEvent.WaitDamageEvent
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UGameplayAbility*                 OwningAbility                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EDamageEventType                        EventType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UGATask_WaitDamageEvent*          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UGATask_WaitDamageEvent* UGATask_WaitDamageEvent::WaitDamageEvent(class UGameplayAbility* OwningAbility, EDamageEventType EventType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GATask_WaitDamageEvent", "WaitDamageEvent");

	Params::GATask_WaitDamageEvent_WaitDamageEvent Parms{};

	Parms.OwningAbility = OwningAbility;
	Parms.EventType = EventType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GraphAbility.GATask_WaitDamageEvent.EndWaiting
// (Final, Native, Public, BlueprintCallable)

void UGATask_WaitDamageEvent::EndWaiting()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GATask_WaitDamageEvent", "EndWaiting");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GraphAbility.GATask_WaitDamageEvent.OnDamageCallback
// (Final, Native, Public, HasOutParams)
// Parameters:
// class AActor*                           InSourceAvatar                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           InTargetAvatar                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FAttributeModifierHandle         ModifierParameterHandle                                (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGATask_WaitDamageEvent::OnDamageCallback(class AActor* InSourceAvatar, class AActor* InTargetAvatar, const struct FAttributeModifierHandle& ModifierParameterHandle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GATask_WaitDamageEvent", "OnDamageCallback");

	Params::GATask_WaitDamageEvent_OnDamageCallback Parms{};

	Parms.InSourceAvatar = InSourceAvatar;
	Parms.InTargetAvatar = InTargetAvatar;
	Parms.ModifierParameterHandle = std::move(ModifierParameterHandle);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GraphAbility.GATask_WaitKillEvent.WaitKillEvent
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UGameplayAbility*                 OwningAbility                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           SourceCharacter                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           TargetCharacter                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UGATask_WaitKillEvent*            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UGATask_WaitKillEvent* UGATask_WaitKillEvent::WaitKillEvent(class UGameplayAbility* OwningAbility, class AActor* SourceCharacter, class AActor* TargetCharacter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GATask_WaitKillEvent", "WaitKillEvent");

	Params::GATask_WaitKillEvent_WaitKillEvent Parms{};

	Parms.OwningAbility = OwningAbility;
	Parms.SourceCharacter = SourceCharacter;
	Parms.TargetCharacter = TargetCharacter;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GraphAbility.GATask_WaitKillEvent.EndWaiting
// (Final, Native, Public, BlueprintCallable)

void UGATask_WaitKillEvent::EndWaiting()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GATask_WaitKillEvent", "EndWaiting");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GraphAbility.GATask_WaitKillEvent.OnKillCallback
// (Final, Native, Public, HasOutParams)
// Parameters:
// struct FUIKillInfo                      KillInfo                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UGATask_WaitKillEvent::OnKillCallback(const struct FUIKillInfo& KillInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GATask_WaitKillEvent", "OnKillCallback");

	Params::GATask_WaitKillEvent_OnKillCallback Parms{};

	Parms.KillInfo = std::move(KillInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GraphAbility.GATask_WaitInput.WaitCancel
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UGameplayAbility*                 OwningAbility                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bSkipNowTrigger_0                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   MaxWaitTime                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UGATask_WaitInput*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UGATask_WaitInput* UGATask_WaitInput::WaitCancel(class UGameplayAbility* OwningAbility, bool bSkipNowTrigger_0, float MaxWaitTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GATask_WaitInput", "WaitCancel");

	Params::GATask_WaitInput_WaitCancel Parms{};

	Parms.OwningAbility = OwningAbility;
	Parms.bSkipNowTrigger_0 = bSkipNowTrigger_0;
	Parms.MaxWaitTime = MaxWaitTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GraphAbility.GATask_WaitInput.WaitConfirm
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UGameplayAbility*                 OwningAbility                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bSkipNowTrigger_0                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   MaxWaitTime                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UGATask_WaitInput*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UGATask_WaitInput* UGATask_WaitInput::WaitConfirm(class UGameplayAbility* OwningAbility, bool bSkipNowTrigger_0, float MaxWaitTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GATask_WaitInput", "WaitConfirm");

	Params::GATask_WaitInput_WaitConfirm Parms{};

	Parms.OwningAbility = OwningAbility;
	Parms.bSkipNowTrigger_0 = bSkipNowTrigger_0;
	Parms.MaxWaitTime = MaxWaitTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GraphAbility.GATask_WaitInput.WaitInput
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UGameplayAbility*                 OwningAbility                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EAbilityInputBinds                      Input                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bSkipNowTrigger_0                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   MaxWaitTime                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bTriggerOnce_0                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FActionTipsParam                 ActionTipsParam_0                                      (Parm, NativeAccessSpecifierPublic)
// class UGATask_WaitInput*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UGATask_WaitInput* UGATask_WaitInput::WaitInput(class UGameplayAbility* OwningAbility, EAbilityInputBinds Input, bool bSkipNowTrigger_0, float MaxWaitTime, bool bTriggerOnce_0, const struct FActionTipsParam& ActionTipsParam_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GATask_WaitInput", "WaitInput");

	Params::GATask_WaitInput_WaitInput Parms{};

	Parms.OwningAbility = OwningAbility;
	Parms.Input = Input;
	Parms.bSkipNowTrigger_0 = bSkipNowTrigger_0;
	Parms.MaxWaitTime = MaxWaitTime;
	Parms.bTriggerOnce_0 = bTriggerOnce_0;
	Parms.ActionTipsParam_0 = std::move(ActionTipsParam_0);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GraphAbility.GATask_WaitInput.EndWait
// (Final, Native, Public, BlueprintCallable)

void UGATask_WaitInput::EndWait()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GATask_WaitInput", "EndWait");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GraphAbility.GATask_WaitInput.OnInputPressed
// (Final, Native, Private)
// Parameters:
// float                                   TimeWaited                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGATask_WaitInput::OnInputPressed(float TimeWaited)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GATask_WaitInput", "OnInputPressed");

	Params::GATask_WaitInput_OnInputPressed Parms{};

	Parms.TimeWaited = TimeWaited;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GraphAbility.GATask_WaitInput.OnInputReleased
// (Final, Native, Private)
// Parameters:
// float                                   TimeWaited                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGATask_WaitInput::OnInputReleased(float TimeWaited)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GATask_WaitInput", "OnInputReleased");

	Params::GATask_WaitInput_OnInputReleased Parms{};

	Parms.TimeWaited = TimeWaited;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GraphAbility.GATask_WaitInput.OnTimeoutCallback
// (Final, Native, Private)

void UGATask_WaitInput::OnTimeoutCallback()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GATask_WaitInput", "OnTimeoutCallback");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GraphAbility.GATask_WaitOwnerKillOther.WaitAbilityOwnerKillOther
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UGameplayAbility*                 OwningAbility                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UGATask_WaitOwnerKillOther*       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UGATask_WaitOwnerKillOther* UGATask_WaitOwnerKillOther::WaitAbilityOwnerKillOther(class UGameplayAbility* OwningAbility)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GATask_WaitOwnerKillOther", "WaitAbilityOwnerKillOther");

	Params::GATask_WaitOwnerKillOther_WaitAbilityOwnerKillOther Parms{};

	Parms.OwningAbility = OwningAbility;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GraphAbility.GATask_WaitOwnerKillOther.WaitCharacterKillOther
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UGameplayAbility*                 OwningAbility                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           InCharacter                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UGATask_WaitOwnerKillOther*       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UGATask_WaitOwnerKillOther* UGATask_WaitOwnerKillOther::WaitCharacterKillOther(class UGameplayAbility* OwningAbility, class AActor* InCharacter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GATask_WaitOwnerKillOther", "WaitCharacterKillOther");

	Params::GATask_WaitOwnerKillOther_WaitCharacterKillOther Parms{};

	Parms.OwningAbility = OwningAbility;
	Parms.InCharacter = InCharacter;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GraphAbility.GATask_WaitOwnerKillOther.InternalOnCharacterKillOther
// (Final, Native, Protected, HasOutParams)
// Parameters:
// class AActor*                           InSourceAvatar                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           InTargetAvatar                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FAttributeModifierHandle         ModifierParameterHandle                                (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGATask_WaitOwnerKillOther::InternalOnCharacterKillOther(class AActor* InSourceAvatar, class AActor* InTargetAvatar, const struct FAttributeModifierHandle& ModifierParameterHandle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GATask_WaitOwnerKillOther", "InternalOnCharacterKillOther");

	Params::GATask_WaitOwnerKillOther_InternalOnCharacterKillOther Parms{};

	Parms.InSourceAvatar = InSourceAvatar;
	Parms.InTargetAvatar = InTargetAvatar;
	Parms.ModifierParameterHandle = std::move(ModifierParameterHandle);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GraphAbility.GATask_WaitSignal.WaitSignalEvent
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UGameplayAbility*                 OwningAbility                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             SignalName_0                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ESignalLevel                            Level                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bOnce                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UGATask_WaitSignal*               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UGATask_WaitSignal* UGATask_WaitSignal::WaitSignalEvent(class UGameplayAbility* OwningAbility, class FName SignalName_0, ESignalLevel Level, bool bOnce)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GATask_WaitSignal", "WaitSignalEvent");

	Params::GATask_WaitSignal_WaitSignalEvent Parms{};

	Parms.OwningAbility = OwningAbility;
	Parms.SignalName_0 = SignalName_0;
	Parms.Level = Level;
	Parms.bOnce = bOnce;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GraphAbility.GATask_WaitSignal.EndWaitingSignal
// (Final, Native, Public, BlueprintCallable)

void UGATask_WaitSignal::EndWaitingSignal()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GATask_WaitSignal", "EndWaitingSignal");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GraphAbility.GATask_WaitTargetData.WaitTargetData_PawnPlacement
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UGameplayAbility*                 OwningAbility                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FFindGroundParam                 TraceParams_0                                          (Parm, ContainsInstancedReference, NativeAccessSpecifierPublic)
// struct FGameplayTag                     PlacementCueTag_0                                      (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UGATask_WaitTargetData*           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UGATask_WaitTargetData* UGATask_WaitTargetData::WaitTargetData_PawnPlacement(class UGameplayAbility* OwningAbility, const struct FFindGroundParam& TraceParams_0, const struct FGameplayTag& PlacementCueTag_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GATask_WaitTargetData", "WaitTargetData_PawnPlacement");

	Params::GATask_WaitTargetData_WaitTargetData_PawnPlacement Parms{};

	Parms.OwningAbility = OwningAbility;
	Parms.TraceParams_0 = std::move(TraceParams_0);
	Parms.PlacementCueTag_0 = std::move(PlacementCueTag_0);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GraphAbility.GATask_WaitTargetData.OnCancelledCallback
// (Final, Native, Protected, HasOutParams)
// Parameters:
// struct FGameplayAbilityTargetDataHandle Data                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UGATask_WaitTargetData::OnCancelledCallback(const struct FGameplayAbilityTargetDataHandle& Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GATask_WaitTargetData", "OnCancelledCallback");

	Params::GATask_WaitTargetData_OnCancelledCallback Parms{};

	Parms.Data = std::move(Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GraphAbility.GATask_WaitTargetData.OnValidDataCallback
// (Final, Native, Protected, HasOutParams)
// Parameters:
// struct FGameplayAbilityTargetDataHandle Data                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UGATask_WaitTargetData::OnValidDataCallback(const struct FGameplayAbilityTargetDataHandle& Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GATask_WaitTargetData", "OnValidDataCallback");

	Params::GATask_WaitTargetData_OnValidDataCallback Parms{};

	Parms.Data = std::move(Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GraphAbility.GATask_WaitTime.WaitTimeSeconds
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UGameplayAbility*                 OwningAbility                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Seconds                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UGATask_WaitTime*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UGATask_WaitTime* UGATask_WaitTime::WaitTimeSeconds(class UGameplayAbility* OwningAbility, float Seconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GATask_WaitTime", "WaitTimeSeconds");

	Params::GATask_WaitTime_WaitTimeSeconds Parms{};

	Parms.OwningAbility = OwningAbility;
	Parms.Seconds = Seconds;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GraphAbility.GATask_WaitTime.OnTimeFinish
// (Final, Native, Private)

void UGATask_WaitTime::OnTimeFinish()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GATask_WaitTime", "OnTimeFinish");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GraphAbility.GATask_WeaponFireOnce.WeaponFireOnce_MultiMode
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UGameplayAbility*                 OwningAbility                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   WeaponID_0                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<int32>                           ShootModes_0                                           (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// int32                                   ShootCount_0                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ShootDelay_0                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReloadAbilityID_0                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UGATask_WeaponFireOnce*           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UGATask_WeaponFireOnce* UGATask_WeaponFireOnce::WeaponFireOnce_MultiMode(class UGameplayAbility* OwningAbility, int32 WeaponID_0, const TArray<int32>& ShootModes_0, int32 ShootCount_0, float ShootDelay_0, int32 ReloadAbilityID_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GATask_WeaponFireOnce", "WeaponFireOnce_MultiMode");

	Params::GATask_WeaponFireOnce_WeaponFireOnce_MultiMode Parms{};

	Parms.OwningAbility = OwningAbility;
	Parms.WeaponID_0 = WeaponID_0;
	Parms.ShootModes_0 = std::move(ShootModes_0);
	Parms.ShootCount_0 = ShootCount_0;
	Parms.ShootDelay_0 = ShootDelay_0;
	Parms.ReloadAbilityID_0 = ReloadAbilityID_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GraphAbility.GATask_WeaponFireOnce.WeaponFireOnce_SingleMode
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UGameplayAbility*                 OwningAbility                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   WeaponID_0                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ShootMode                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ShootCount_0                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ShootDelay_0                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReloadAbilityID_0                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UGATask_WeaponFireOnce*           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UGATask_WeaponFireOnce* UGATask_WeaponFireOnce::WeaponFireOnce_SingleMode(class UGameplayAbility* OwningAbility, int32 WeaponID_0, int32 ShootMode, int32 ShootCount_0, float ShootDelay_0, int32 ReloadAbilityID_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GATask_WeaponFireOnce", "WeaponFireOnce_SingleMode");

	Params::GATask_WeaponFireOnce_WeaponFireOnce_SingleMode Parms{};

	Parms.OwningAbility = OwningAbility;
	Parms.WeaponID_0 = WeaponID_0;
	Parms.ShootMode = ShootMode;
	Parms.ShootCount_0 = ShootCount_0;
	Parms.ShootDelay_0 = ShootDelay_0;
	Parms.ReloadAbilityID_0 = ReloadAbilityID_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GraphAbility.GATask_WeaponFireOnce.Shoot
// (Final, Native, Protected)

void UGATask_WeaponFireOnce::Shoot()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GATask_WeaponFireOnce", "Shoot");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GraphAbility.GATask_WeaponFiring.WeaponFiring_MultiModes
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UGameplayAbility*                 OwningAbility                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   WeaponID_0                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<int32>                           ShootModes_0                                           (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    bIsRoundRobin_0                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReloadAbilityID_0                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   DelayEndTask_0                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EAbilityInputBinds                      Input                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UGATask_WeaponFiring*             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UGATask_WeaponFiring* UGATask_WeaponFiring::WeaponFiring_MultiModes(class UGameplayAbility* OwningAbility, int32 WeaponID_0, const TArray<int32>& ShootModes_0, bool bIsRoundRobin_0, int32 ReloadAbilityID_0, float DelayEndTask_0, EAbilityInputBinds Input)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GATask_WeaponFiring", "WeaponFiring_MultiModes");

	Params::GATask_WeaponFiring_WeaponFiring_MultiModes Parms{};

	Parms.OwningAbility = OwningAbility;
	Parms.WeaponID_0 = WeaponID_0;
	Parms.ShootModes_0 = std::move(ShootModes_0);
	Parms.bIsRoundRobin_0 = bIsRoundRobin_0;
	Parms.ReloadAbilityID_0 = ReloadAbilityID_0;
	Parms.DelayEndTask_0 = DelayEndTask_0;
	Parms.Input = Input;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GraphAbility.GATask_WeaponFiring.WeaponFiring_SingleMode
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UGameplayAbility*                 OwningAbility                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   WeaponID_0                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ShootMode                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReloadAbilityID_0                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   DelayEndTask_0                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EAbilityInputBinds                      Input                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UGATask_WeaponFiring*             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UGATask_WeaponFiring* UGATask_WeaponFiring::WeaponFiring_SingleMode(class UGameplayAbility* OwningAbility, int32 WeaponID_0, int32 ShootMode, int32 ReloadAbilityID_0, float DelayEndTask_0, EAbilityInputBinds Input)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GATask_WeaponFiring", "WeaponFiring_SingleMode");

	Params::GATask_WeaponFiring_WeaponFiring_SingleMode Parms{};

	Parms.OwningAbility = OwningAbility;
	Parms.WeaponID_0 = WeaponID_0;
	Parms.ShootMode = ShootMode;
	Parms.ReloadAbilityID_0 = ReloadAbilityID_0;
	Parms.DelayEndTask_0 = DelayEndTask_0;
	Parms.Input = Input;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GraphAbility.GATask_WeaponFiring.OnFireReplicatedCallback
// (Final, Native, Protected, HasOutParams)
// Parameters:
// struct FGameplayAbilityTargetDataHandle Data                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UGATask_WeaponFiring::OnFireReplicatedCallback(const struct FGameplayAbilityTargetDataHandle& Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GATask_WeaponFiring", "OnFireReplicatedCallback");

	Params::GATask_WeaponFiring_OnFireReplicatedCallback Parms{};

	Parms.Data = std::move(Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GraphAbility.GATask_WeaponFiring.OnWeaponFire
// (Final, Native, Protected)

void UGATask_WeaponFiring::OnWeaponFire()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GATask_WeaponFiring", "OnWeaponFire");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GraphAbility.GATask_WeaponFiring.OnWeaponFireTaskEnd
// (Final, Native, Protected)
// Parameters:
// bool                                    AbilityEnded                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGATask_WeaponFiring::OnWeaponFireTaskEnd(bool AbilityEnded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GATask_WeaponFiring", "OnWeaponFireTaskEnd");

	Params::GATask_WeaponFiring_OnWeaponFireTaskEnd Parms{};

	Parms.AbilityEnded = AbilityEnded;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GraphAbility.GraphAbilityFuncLibrary.GetAbilityActorFromObj
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          InObj                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AActor* UGraphAbilityFuncLibrary::GetAbilityActorFromObj(class UObject* InObj)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GraphAbilityFuncLibrary", "GetAbilityActorFromObj");

	Params::GraphAbilityFuncLibrary_GetAbilityActorFromObj Parms{};

	Parms.InObj = InObj;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GraphAbility.GraphAbilityFuncLibrary.GetAbilityConfigFromAbilityTarget
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          InObj                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UMarvelAbilityConfig*             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UMarvelAbilityConfig* UGraphAbilityFuncLibrary::GetAbilityConfigFromAbilityTarget(class UObject* InObj)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GraphAbilityFuncLibrary", "GetAbilityConfigFromAbilityTarget");

	Params::GraphAbilityFuncLibrary_GetAbilityConfigFromAbilityTarget Parms{};

	Parms.InObj = InObj;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GraphAbility.GraphAbilityFuncLibrary.GetAbilityTargetActorFromAbilityTarget
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          InObj                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AActor* UGraphAbilityFuncLibrary::GetAbilityTargetActorFromAbilityTarget(class UObject* InObj)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GraphAbilityFuncLibrary", "GetAbilityTargetActorFromAbilityTarget");

	Params::GraphAbilityFuncLibrary_GetAbilityTargetActorFromAbilityTarget Parms{};

	Parms.InObj = InObj;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GraphAbility.GraphAbilityFuncLibrary.GetCurrentAbilityFromAbilityTarget
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          InObj                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UGameplayAbility*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UGameplayAbility* UGraphAbilityFuncLibrary::GetCurrentAbilityFromAbilityTarget(class UObject* InObj)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GraphAbilityFuncLibrary", "GetCurrentAbilityFromAbilityTarget");

	Params::GraphAbilityFuncLibrary_GetCurrentAbilityFromAbilityTarget Parms{};

	Parms.InObj = InObj;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GraphAbility.GraphAbilityFuncLibrary.GetCurrentInstigatorFromAbilityTarget
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          InObj                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class APawn*                            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class APawn* UGraphAbilityFuncLibrary::GetCurrentInstigatorFromAbilityTarget(class UObject* InObj)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GraphAbilityFuncLibrary", "GetCurrentInstigatorFromAbilityTarget");

	Params::GraphAbilityFuncLibrary_GetCurrentInstigatorFromAbilityTarget Parms{};

	Parms.InObj = InObj;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GraphAbility.GraphAbilityFuncLibrary.GetOriginAbilityFromAbilityTarget
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          InObj                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UGameplayAbility*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UGameplayAbility* UGraphAbilityFuncLibrary::GetOriginAbilityFromAbilityTarget(class UObject* InObj)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GraphAbilityFuncLibrary", "GetOriginAbilityFromAbilityTarget");

	Params::GraphAbilityFuncLibrary_GetOriginAbilityFromAbilityTarget Parms{};

	Parms.InObj = InObj;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GraphAbility.GraphAbilityFuncLibrary.GetOriginInstigatorFromAbilityTarget
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          InObj                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class APawn*                            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class APawn* UGraphAbilityFuncLibrary::GetOriginInstigatorFromAbilityTarget(class UObject* InObj)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GraphAbilityFuncLibrary", "GetOriginInstigatorFromAbilityTarget");

	Params::GraphAbilityFuncLibrary_GetOriginInstigatorFromAbilityTarget Parms{};

	Parms.InObj = InObj;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GraphAbility.GraphAbilityFuncLibrary.GetTaskAbilityFromAbilityTarget
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          InObj                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UGameplayAbility*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UGameplayAbility* UGraphAbilityFuncLibrary::GetTaskAbilityFromAbilityTarget(class UObject* InObj)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GraphAbilityFuncLibrary", "GetTaskAbilityFromAbilityTarget");

	Params::GraphAbilityFuncLibrary_GetTaskAbilityFromAbilityTarget Parms{};

	Parms.InObj = InObj;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GraphAbility.GraphAbilityFuncLibrary.OnTargetActorCallAbilityTask
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          TaskCaller                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UGameplayTask*                    InTask                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGraphAbilityFuncLibrary::OnTargetActorCallAbilityTask(class UObject* TaskCaller, class UGameplayTask* InTask)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GraphAbilityFuncLibrary", "OnTargetActorCallAbilityTask");

	Params::GraphAbilityFuncLibrary_OnTargetActorCallAbilityTask Parms{};

	Parms.TaskCaller = TaskCaller;
	Parms.InTask = InTask;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GraphAbility.GraphAbilityFuncLibrary.SetAbilityTaskBeforeActivation
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          InObj                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAbilityTask*                     AbilityTask                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   IsWithAbility                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           GATaskName                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bCancelAbilityWhenFailed                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGraphAbilityFuncLibrary::SetAbilityTaskBeforeActivation(class UObject* InObj, class UAbilityTask* AbilityTask, int32 IsWithAbility, const class FString& GATaskName, bool bCancelAbilityWhenFailed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GraphAbilityFuncLibrary", "SetAbilityTaskBeforeActivation");

	Params::GraphAbilityFuncLibrary_SetAbilityTaskBeforeActivation Parms{};

	Parms.InObj = InObj;
	Parms.AbilityTask = AbilityTask;
	Parms.IsWithAbility = IsWithAbility;
	Parms.GATaskName = std::move(GATaskName);
	Parms.bCancelAbilityWhenFailed = bCancelAbilityWhenFailed;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GraphAbility.GraphAbilityFuncNodes.ApplyBuffToTarget
// (Final, BlueprintAuthorityOnly, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          SelfObj                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   BuffID                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           Target                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           Source                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGraphAbilityFuncNodes::ApplyBuffToTarget(class UObject* SelfObj, int32 BuffID, class AActor* Target, class AActor* Source)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GraphAbilityFuncNodes", "ApplyBuffToTarget");

	Params::GraphAbilityFuncNodes_ApplyBuffToTarget Parms{};

	Parms.SelfObj = SelfObj;
	Parms.BuffID = BuffID;
	Parms.Target = Target;
	Parms.Source = Source;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GraphAbility.GraphAbilityFuncNodes.GetAttributeValue
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class AActor*                           Actor                                                  (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayAttribute               Attribute                                              (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bSuccessfullyFoundAttribute                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UGraphAbilityFuncNodes::GetAttributeValue(const class AActor* Actor, const struct FGameplayAttribute& Attribute, bool* bSuccessfullyFoundAttribute)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GraphAbilityFuncNodes", "GetAttributeValue");

	Params::GraphAbilityFuncNodes_GetAttributeValue Parms{};

	Parms.Actor = Actor;
	Parms.Attribute = std::move(Attribute);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bSuccessfullyFoundAttribute != nullptr)
		*bSuccessfullyFoundAttribute = Parms.bSuccessfullyFoundAttribute;

	return Parms.ReturnValue;
}


// Function GraphAbility.GraphAbilityFuncNodes.GetDirectionByConfig
// (Final, Native, Static, Public, HasDefaults)
// Parameters:
// class UObject*                          InObj                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ECommonPlayDir                          Direction                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector UGraphAbilityFuncNodes::GetDirectionByConfig(class UObject* InObj, ECommonPlayDir Direction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GraphAbilityFuncNodes", "GetDirectionByConfig");

	Params::GraphAbilityFuncNodes_GetDirectionByConfig Parms{};

	Parms.InObj = InObj;
	Parms.Direction = Direction;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GraphAbility.GraphAbilityFuncNodes.GetSelfActor
// (Final, Native, Static, Public)
// Parameters:
// class UObject*                          InObj                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AActor* UGraphAbilityFuncNodes::GetSelfActor(class UObject* InObj)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GraphAbilityFuncNodes", "GetSelfActor");

	Params::GraphAbilityFuncNodes_GetSelfActor Parms{};

	Parms.InObj = InObj;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GraphAbility.GraphAbilityFuncNodes.GetSelfCurrentInstigator
// (Final, Native, Static, Public)
// Parameters:
// class UObject*                          InObj                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class APawn*                            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class APawn* UGraphAbilityFuncNodes::GetSelfCurrentInstigator(class UObject* InObj)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GraphAbilityFuncNodes", "GetSelfCurrentInstigator");

	Params::GraphAbilityFuncNodes_GetSelfCurrentInstigator Parms{};

	Parms.InObj = InObj;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GraphAbility.GraphAbilityFuncNodes.HasOwnedBuff_Target
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          SelfObj                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   BuffID                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           Target                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UGraphAbilityFuncNodes::HasOwnedBuff_Target(class UObject* SelfObj, int32 BuffID, class AActor* Target)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GraphAbilityFuncNodes", "HasOwnedBuff_Target");

	Params::GraphAbilityFuncNodes_HasOwnedBuff_Target Parms{};

	Parms.SelfObj = SelfObj;
	Parms.BuffID = BuffID;
	Parms.Target = Target;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GraphAbility.GraphAbilityFuncNodes.HasOwnedTag_Target
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          SelfObj                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                     InTag                                                  (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           Target                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UGraphAbilityFuncNodes::HasOwnedTag_Target(class UObject* SelfObj, const struct FGameplayTag& InTag, class AActor* Target)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GraphAbilityFuncNodes", "HasOwnedTag_Target");

	Params::GraphAbilityFuncNodes_HasOwnedTag_Target Parms{};

	Parms.SelfObj = SelfObj;
	Parms.InTag = std::move(InTag);
	Parms.Target = Target;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GraphAbility.GraphAbilityFuncNodes.IsActorValidAbilityTarget_Filter
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          SelfObj                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           Target                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FMarvelTraceRule                 TraceRule                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UGraphAbilityFuncNodes::IsActorValidAbilityTarget_Filter(class UObject* SelfObj, class AActor* Target, const struct FMarvelTraceRule& TraceRule)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GraphAbilityFuncNodes", "IsActorValidAbilityTarget_Filter");

	Params::GraphAbilityFuncNodes_IsActorValidAbilityTarget_Filter Parms{};

	Parms.SelfObj = SelfObj;
	Parms.Target = Target;
	Parms.TraceRule = std::move(TraceRule);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GraphAbility.GraphAbilityFuncNodes.IsHitResultValidAbilityTarget_Filter
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          SelfObj                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult                       HitResult                                              (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
// struct FMarvelTraceRule                 TraceRule                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UGraphAbilityFuncNodes::IsHitResultValidAbilityTarget_Filter(class UObject* SelfObj, const struct FHitResult& HitResult, const struct FMarvelTraceRule& TraceRule)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GraphAbilityFuncNodes", "IsHitResultValidAbilityTarget_Filter");

	Params::GraphAbilityFuncNodes_IsHitResultValidAbilityTarget_Filter Parms{};

	Parms.SelfObj = SelfObj;
	Parms.HitResult = std::move(HitResult);
	Parms.TraceRule = std::move(TraceRule);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GraphAbility.GraphAbilityFuncNodes.SetAttributeValue
// (Final, BlueprintAuthorityOnly, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           Actor                                                  (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayAttribute               Attribute                                              (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   NewValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGraphAbilityFuncNodes::SetAttributeValue(const class AActor* Actor, const struct FGameplayAttribute& Attribute, float NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GraphAbilityFuncNodes", "SetAttributeValue");

	Params::GraphAbilityFuncNodes_SetAttributeValue Parms{};

	Parms.Actor = Actor;
	Parms.Attribute = std::move(Attribute);
	Parms.NewValue = NewValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GraphAbility.GraphAbilityFuncNodes.TeleportTargetWithDir
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          SelfObj                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           Target                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ECommonPlayDir                          Direction                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Distance                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGraphAbilityFuncNodes::TeleportTargetWithDir(class UObject* SelfObj, class AActor* Target, ECommonPlayDir Direction, float Distance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GraphAbilityFuncNodes", "TeleportTargetWithDir");

	Params::GraphAbilityFuncNodes_TeleportTargetWithDir Parms{};

	Parms.SelfObj = SelfObj;
	Parms.Target = Target;
	Parms.Direction = Direction;
	Parms.Distance = Distance;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GraphAbility.GraphAbilityFuncNodes.TeleportTargetWithLocation
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                          SelfObj                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           Target                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          Location                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGraphAbilityFuncNodes::TeleportTargetWithLocation(class UObject* SelfObj, class AActor* Target, const struct FVector& Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GraphAbilityFuncNodes", "TeleportTargetWithLocation");

	Params::GraphAbilityFuncNodes_TeleportTargetWithLocation Parms{};

	Parms.SelfObj = SelfObj;
	Parms.Target = Target;
	Parms.Location = std::move(Location);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GraphAbility.GraphAbilityFuncNodes.TriggerSignalEvent
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          SelfObj                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             SignalName                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ESignalLevel                            Level                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGraphAbilityFuncNodes::TriggerSignalEvent(class UObject* SelfObj, class FName SignalName, ESignalLevel Level)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GraphAbilityFuncNodes", "TriggerSignalEvent");

	Params::GraphAbilityFuncNodes_TriggerSignalEvent Parms{};

	Parms.SelfObj = SelfObj;
	Parms.SignalName = SignalName;
	Parms.Level = Level;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GraphAbility.GraphAbilityFuncNodes.TriggerSignalEventToTarget
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          SelfObj                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             SignalName                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          Target                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGraphAbilityFuncNodes::TriggerSignalEventToTarget(class UObject* SelfObj, class FName SignalName, class UObject* Target)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GraphAbilityFuncNodes", "TriggerSignalEventToTarget");

	Params::GraphAbilityFuncNodes_TriggerSignalEventToTarget Parms{};

	Parms.SelfObj = SelfObj;
	Parms.SignalName = SignalName;
	Parms.Target = Target;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GraphAbility.GraphAbilityFuncNodes.TryActivateAbilityByID
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           Target                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   AbilityID                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UGraphAbilityFuncNodes::TryActivateAbilityByID(class AActor* Target, int32 AbilityID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GraphAbilityFuncNodes", "TryActivateAbilityByID");

	Params::GraphAbilityFuncNodes_TryActivateAbilityByID Parms{};

	Parms.Target = Target;
	Parms.AbilityID = AbilityID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GraphAbility.GraphAbilityFuncNodes_Ability.AE_CancelAbility
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UGameplayAbility*                 SelfAbility                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGraphAbilityFuncNodes_Ability::AE_CancelAbility(class UGameplayAbility* SelfAbility)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GraphAbilityFuncNodes_Ability", "AE_CancelAbility");

	Params::GraphAbilityFuncNodes_Ability_AE_CancelAbility Parms{};

	Parms.SelfAbility = SelfAbility;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GraphAbility.GraphAbilityFuncNodes_Ability.ApplyBuffToSelf
// (Final, BlueprintAuthorityOnly, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UGameplayAbility*                 SelfAbility                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   BuffID                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGraphAbilityFuncNodes_Ability::ApplyBuffToSelf(class UGameplayAbility* SelfAbility, int32 BuffID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GraphAbilityFuncNodes_Ability", "ApplyBuffToSelf");

	Params::GraphAbilityFuncNodes_Ability_ApplyBuffToSelf Parms{};

	Parms.SelfAbility = SelfAbility;
	Parms.BuffID = BuffID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GraphAbility.GraphAbilityFuncNodes_Ability.ApplyDamageToTarget
// (Final, BlueprintAuthorityOnly, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UGameplayAbility*                 SelfAbility                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           Target                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Damage                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGraphAbilityFuncNodes_Ability::ApplyDamageToTarget(class UGameplayAbility* SelfAbility, class AActor* Target, float Damage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GraphAbilityFuncNodes_Ability", "ApplyDamageToTarget");

	Params::GraphAbilityFuncNodes_Ability_ApplyDamageToTarget Parms{};

	Parms.SelfAbility = SelfAbility;
	Parms.Target = Target;
	Parms.Damage = Damage;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GraphAbility.GraphAbilityFuncNodes_Ability.CustomBeginSelectTarget
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UGameplayAbility*                 SelfAbility                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGraphAbilityFuncNodes_Ability::CustomBeginSelectTarget(class UGameplayAbility* SelfAbility)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GraphAbilityFuncNodes_Ability", "CustomBeginSelectTarget");

	Params::GraphAbilityFuncNodes_Ability_CustomBeginSelectTarget Parms{};

	Parms.SelfAbility = SelfAbility;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GraphAbility.GraphAbilityFuncNodes_Ability.CustomEndSelectTarget
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UGameplayAbility*                 SelfAbility                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGraphAbilityFuncNodes_Ability::CustomEndSelectTarget(class UGameplayAbility* SelfAbility)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GraphAbilityFuncNodes_Ability", "CustomEndSelectTarget");

	Params::GraphAbilityFuncNodes_Ability_CustomEndSelectTarget Parms{};

	Parms.SelfAbility = SelfAbility;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GraphAbility.GraphAbilityFuncNodes_Ability.DefaultProjectileStart
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                          SelfObj                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          OutLocation                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                         OutRotation                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// int32                                   ProjectileID                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          OffsetLocation                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                         OffsetRotation                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// EMarvelPawnBodyType                     LocationType                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGraphAbilityFuncNodes_Ability::DefaultProjectileStart(class UObject* SelfObj, struct FVector* OutLocation, struct FRotator* OutRotation, int32 ProjectileID, const struct FVector& OffsetLocation, const struct FRotator& OffsetRotation, EMarvelPawnBodyType LocationType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GraphAbilityFuncNodes_Ability", "DefaultProjectileStart");

	Params::GraphAbilityFuncNodes_Ability_DefaultProjectileStart Parms{};

	Parms.SelfObj = SelfObj;
	Parms.ProjectileID = ProjectileID;
	Parms.OffsetLocation = std::move(OffsetLocation);
	Parms.OffsetRotation = std::move(OffsetRotation);
	Parms.LocationType = LocationType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutLocation != nullptr)
		*OutLocation = std::move(Parms.OutLocation);

	if (OutRotation != nullptr)
		*OutRotation = std::move(Parms.OutRotation);
}


// Function GraphAbility.GraphAbilityFuncNodes_Ability.ExecuteAbilityCue
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UGameplayAbility*                 SelfAbility                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                     CueTag                                                 (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGraphAbilityFuncNodes_Ability::ExecuteAbilityCue(class UGameplayAbility* SelfAbility, const struct FGameplayTag& CueTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GraphAbilityFuncNodes_Ability", "ExecuteAbilityCue");

	Params::GraphAbilityFuncNodes_Ability_ExecuteAbilityCue Parms{};

	Parms.SelfAbility = SelfAbility;
	Parms.CueTag = std::move(CueTag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GraphAbility.GraphAbilityFuncNodes_Ability.GetSelectTarget
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UGameplayAbility*                 SelfAbility                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FPortalSegments                  OutPortalSegment                                       (Parm, OutParm, AdvancedDisplay, NativeAccessSpecifierPublic)
// bool                                    bGetPortalSegment                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AActor* UGraphAbilityFuncNodes_Ability::GetSelectTarget(class UGameplayAbility* SelfAbility, struct FPortalSegments* OutPortalSegment, bool bGetPortalSegment)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GraphAbilityFuncNodes_Ability", "GetSelectTarget");

	Params::GraphAbilityFuncNodes_Ability_GetSelectTarget Parms{};

	Parms.SelfAbility = SelfAbility;
	Parms.bGetPortalSegment = bGetPortalSegment;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutPortalSegment != nullptr)
		*OutPortalSegment = std::move(Parms.OutPortalSegment);

	return Parms.ReturnValue;
}


// Function GraphAbility.GraphAbilityFuncNodes_Ability.HasOwnedBuff
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UGameplayAbility*                 SelfAbility                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   BuffID                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UGraphAbilityFuncNodes_Ability::HasOwnedBuff(class UGameplayAbility* SelfAbility, int32 BuffID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GraphAbilityFuncNodes_Ability", "HasOwnedBuff");

	Params::GraphAbilityFuncNodes_Ability_HasOwnedBuff Parms{};

	Parms.SelfAbility = SelfAbility;
	Parms.BuffID = BuffID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GraphAbility.GraphAbilityFuncNodes_Ability.HasOwnedTag
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UGameplayAbility*                 SelfAbility                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                     InTag                                                  (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UGraphAbilityFuncNodes_Ability::HasOwnedTag(class UGameplayAbility* SelfAbility, const struct FGameplayTag& InTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GraphAbilityFuncNodes_Ability", "HasOwnedTag");

	Params::GraphAbilityFuncNodes_Ability_HasOwnedTag Parms{};

	Parms.SelfAbility = SelfAbility;
	Parms.InTag = std::move(InTag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GraphAbility.GraphAbilityFuncNodes_Ability.IsAbilityActivated
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          SelfObj                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UGraphAbilityFuncNodes_Ability::IsAbilityActivated(class UObject* SelfObj)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GraphAbilityFuncNodes_Ability", "IsAbilityActivated");

	Params::GraphAbilityFuncNodes_Ability_IsAbilityActivated Parms{};

	Parms.SelfObj = SelfObj;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GraphAbility.GraphAbilityFuncNodes_Ability.JumpTimelineSection
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UGameplayAbility*                 SelfAbility                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             SectionName                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAnimTimeline*                    Timeline                                               (Parm, ZeroConstructor, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGraphAbilityFuncNodes_Ability::JumpTimelineSection(class UGameplayAbility* SelfAbility, class FName SectionName, class UAnimTimeline* Timeline)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GraphAbilityFuncNodes_Ability", "JumpTimelineSection");

	Params::GraphAbilityFuncNodes_Ability_JumpTimelineSection Parms{};

	Parms.SelfAbility = SelfAbility;
	Parms.SectionName = SectionName;
	Parms.Timeline = Timeline;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GraphAbility.GraphAbilityFuncNodes_Ability.RecycleAbilityTargetByID
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          SelfObj                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   TargetId                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETargetActorTypes                       TargetType                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGraphAbilityFuncNodes_Ability::RecycleAbilityTargetByID(class UObject* SelfObj, int32 TargetId, ETargetActorTypes TargetType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GraphAbilityFuncNodes_Ability", "RecycleAbilityTargetByID");

	Params::GraphAbilityFuncNodes_Ability_RecycleAbilityTargetByID Parms{};

	Parms.SelfObj = SelfObj;
	Parms.TargetId = TargetId;
	Parms.TargetType = TargetType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GraphAbility.GraphAbilityFuncNodes_Ability.RecycleAbilityTargetByObject
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          SelfObj                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          Target                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGraphAbilityFuncNodes_Ability::RecycleAbilityTargetByObject(class UObject* SelfObj, class UObject* Target)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GraphAbilityFuncNodes_Ability", "RecycleAbilityTargetByObject");

	Params::GraphAbilityFuncNodes_Ability_RecycleAbilityTargetByObject Parms{};

	Parms.SelfObj = SelfObj;
	Parms.Target = Target;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GraphAbility.GraphAbilityFuncNodes_Ability.RemoveAbilityCue
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UGameplayAbility*                 SelfAbility                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                     CueTag                                                 (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGraphAbilityFuncNodes_Ability::RemoveAbilityCue(class UGameplayAbility* SelfAbility, const struct FGameplayTag& CueTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GraphAbilityFuncNodes_Ability", "RemoveAbilityCue");

	Params::GraphAbilityFuncNodes_Ability_RemoveAbilityCue Parms{};

	Parms.SelfAbility = SelfAbility;
	Parms.CueTag = std::move(CueTag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GraphAbility.GraphAbilityFuncNodes_Ability.RemoveBuffFromSelf
// (Final, BlueprintAuthorityOnly, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UGameplayAbility*                 SelfAbility                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   BuffID                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGraphAbilityFuncNodes_Ability::RemoveBuffFromSelf(class UGameplayAbility* SelfAbility, int32 BuffID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GraphAbilityFuncNodes_Ability", "RemoveBuffFromSelf");

	Params::GraphAbilityFuncNodes_Ability_RemoveBuffFromSelf Parms{};

	Parms.SelfAbility = SelfAbility;
	Parms.BuffID = BuffID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GraphAbility.GraphAbilityFuncNodes_Ability.RemoveBuffFromTarget
// (Final, BlueprintAuthorityOnly, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UGameplayAbility*                 SelfAbility                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   BuffID                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           Target                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGraphAbilityFuncNodes_Ability::RemoveBuffFromTarget(class UGameplayAbility* SelfAbility, int32 BuffID, class AActor* Target)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GraphAbilityFuncNodes_Ability", "RemoveBuffFromTarget");

	Params::GraphAbilityFuncNodes_Ability_RemoveBuffFromTarget Parms{};

	Parms.SelfAbility = SelfAbility;
	Parms.BuffID = BuffID;
	Parms.Target = Target;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GraphAbility.GraphAbilityFuncNodes_AbilityTarget.ApplyDamageToTarget
// (Final, BlueprintAuthorityOnly, Native, Static, Private, BlueprintCallable)
// Parameters:
// class UObject*                          SelfObject                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           Target                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Damage                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGraphAbilityFuncNodes_AbilityTarget::ApplyDamageToTarget(class UObject* SelfObject, class AActor* Target, float Damage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GraphAbilityFuncNodes_AbilityTarget", "ApplyDamageToTarget");

	Params::GraphAbilityFuncNodes_AbilityTarget_ApplyDamageToTarget Parms{};

	Parms.SelfObject = SelfObject;
	Parms.Target = Target;
	Parms.Damage = Damage;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GraphAbility.GraphAbilityFuncNodes_AbilityTarget.K2_EndAgentTask
// (Final, Native, Static, Private, BlueprintCallable)
// Parameters:
// class AActor*                           SelfActor                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGraphAbilityFuncNodes_AbilityTarget::K2_EndAgentTask(class AActor* SelfActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GraphAbilityFuncNodes_AbilityTarget", "K2_EndAgentTask");

	Params::GraphAbilityFuncNodes_AbilityTarget_K2_EndAgentTask Parms{};

	Parms.SelfActor = SelfActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GraphAbility.GraphAbilityTaskMgr.CheckCanActivateAbilityForGASpec
// (Final, Native, Protected)
// Parameters:
// class UGameplayAbility*                 InAbility                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UGraphAbilityTaskMgr::CheckCanActivateAbilityForGASpec(class UGameplayAbility* InAbility)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GraphAbilityTaskMgr", "CheckCanActivateAbilityForGASpec");

	Params::GraphAbilityTaskMgr_CheckCanActivateAbilityForGASpec Parms{};

	Parms.InAbility = InAbility;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GraphAbility.GraphAbilityTaskMgr.OnActorEndPlay
// (Final, Native, Protected)
// Parameters:
// class AActor*                           Target                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EEndPlayReason                          EndPlayReason                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGraphAbilityTaskMgr::OnActorEndPlay(class AActor* Target, EEndPlayReason EndPlayReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GraphAbilityTaskMgr", "OnActorEndPlay");

	Params::GraphAbilityTaskMgr_OnActorEndPlay Parms{};

	Parms.Target = Target;
	Parms.EndPlayReason = EndPlayReason;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GraphAbility.GraphAbilityTaskMgr.OnCharacterDeath
// (Final, Native, Protected, HasOutParams)
// Parameters:
// class AActor*                           DamageCauser                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           TargetActor                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FAttributeModifierHandle         ModifierParameterHandle                                (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGraphAbilityTaskMgr::OnCharacterDeath(class AActor* DamageCauser, class AActor* TargetActor, const struct FAttributeModifierHandle& ModifierParameterHandle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GraphAbilityTaskMgr", "OnCharacterDeath");

	Params::GraphAbilityTaskMgr_OnCharacterDeath Parms{};

	Parms.DamageCauser = DamageCauser;
	Parms.TargetActor = TargetActor;
	Parms.ModifierParameterHandle = std::move(ModifierParameterHandle);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GraphAbility.GraphAbilityTaskMgr.OnProjectileUnregister
// (Final, Native, Protected)
// Parameters:
// class AMarvelAbilityTargetActor_Projectile*InProjectile                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGraphAbilityTaskMgr::OnProjectileUnregister(class AMarvelAbilityTargetActor_Projectile* InProjectile)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GraphAbilityTaskMgr", "OnProjectileUnregister");

	Params::GraphAbilityTaskMgr_OnProjectileUnregister Parms{};

	Parms.InProjectile = InProjectile;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GraphAbility.GraphAbilityTaskMgr.OnScopeActorUnregister
// (Final, Native, Protected)
// Parameters:
// class AMarvelAbilityTargetActor_Scope*  InScope                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGraphAbilityTaskMgr::OnScopeActorUnregister(class AMarvelAbilityTargetActor_Scope* InScope)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GraphAbilityTaskMgr", "OnScopeActorUnregister");

	Params::GraphAbilityTaskMgr_OnScopeActorUnregister Parms{};

	Parms.InScope = InScope;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GraphAbility.GraphAbilityTaskMgr.OnSummonedUnregister
// (Final, Native, Protected)
// Parameters:
// class UMarvelSummonedComponent*         InSummonedComp                                         (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGraphAbilityTaskMgr::OnSummonedUnregister(class UMarvelSummonedComponent* InSummonedComp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GraphAbilityTaskMgr", "OnSummonedUnregister");

	Params::GraphAbilityTaskMgr_OnSummonedUnregister Parms{};

	Parms.InSummonedComp = InSummonedComp;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}

}

