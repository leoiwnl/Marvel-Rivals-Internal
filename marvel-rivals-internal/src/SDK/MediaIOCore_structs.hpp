#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MediaIOCore

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "OpenColorIO_structs.hpp"


namespace SDK
{

// Enum MediaIOCore.EMediaIOCoreSourceEncoding
// NumValues: 0x0005
enum class EMediaIOCoreSourceEncoding : uint8
{
	Linear                                   = 1,
	sRGB                                     = 2,
	ST2084                                   = 3,
	SLog3                                    = 12,
	MAX                                      = 13,
};

// Enum MediaIOCore.EFileMediaOutputPixelFormat
// NumValues: 0x0003
enum class EFileMediaOutputPixelFormat : uint32
{
	B8G8R8A8                                 = 0,
	FloatRGBA                                = 1,
	EFileMediaOutputPixelFormat_MAX          = 2,
};

// Enum MediaIOCore.EMediaCaptureState
// NumValues: 0x0006
enum class EMediaCaptureState : uint8
{
	Error                                    = 0,
	Capturing                                = 1,
	Preparing                                = 2,
	StopRequested                            = 3,
	Stopped                                  = 4,
	EMediaCaptureState_MAX                   = 5,
};

// Enum MediaIOCore.EMediaCaptureResourceType
// NumValues: 0x0003
enum class EMediaCaptureResourceType : uint8
{
	Texture                                  = 0,
	Buffer                                   = 1,
	EMediaCaptureResourceType_MAX            = 2,
};

// Enum MediaIOCore.EMediaCaptureCroppingType
// NumValues: 0x0005
enum class EMediaCaptureCroppingType : uint8
{
	None                                     = 0,
	Center                                   = 1,
	TopLeft                                  = 2,
	Custom                                   = 3,
	EMediaCaptureCroppingType_MAX            = 4,
};

// Enum MediaIOCore.EMediaCaptureOverrunAction
// NumValues: 0x0003
enum class EMediaCaptureOverrunAction : uint8
{
	Flush                                    = 0,
	Skip                                     = 1,
	EMediaCaptureOverrunAction_MAX           = 2,
};

// Enum MediaIOCore.EMediaCapturePhase
// NumValues: 0x0006
enum class EMediaCapturePhase : uint8
{
	BeforePostProcessing                     = 0,
	AfterMotionBlur                          = 1,
	AfterToneMap                             = 2,
	AfterFXAA                                = 3,
	EndFrame                                 = 4,
	EMediaCapturePhase_MAX                   = 5,
};

// Enum MediaIOCore.EMediaCaptureResizeMethod
// NumValues: 0x0004
enum class EMediaCaptureResizeMethod : uint8
{
	None                                     = 0,
	ResizeSource                             = 1,
	ResizeInRenderPass                       = 2,
	EMediaCaptureResizeMethod_MAX            = 3,
};

// Enum MediaIOCore.EMediaIOTransportType
// NumValues: 0x0005
enum class EMediaIOTransportType : uint32
{
	SingleLink                               = 0,
	DualLink                                 = 1,
	QuadLink                                 = 2,
	HDMI                                     = 3,
	EMediaIOTransportType_MAX                = 4,
};

// Enum MediaIOCore.EMediaIOQuadLinkTransportType
// NumValues: 0x0003
enum class EMediaIOQuadLinkTransportType : uint32
{
	SquareDivision                           = 0,
	TwoSampleInterleave                      = 1,
	EMediaIOQuadLinkTransportType_MAX        = 2,
};

// Enum MediaIOCore.EMediaIOStandardType
// NumValues: 0x0004
enum class EMediaIOStandardType : uint32
{
	Progressive                              = 0,
	Interlaced                               = 1,
	ProgressiveSegmentedFrame                = 2,
	EMediaIOStandardType_MAX                 = 3,
};

// Enum MediaIOCore.EMediaIOTimecodeFormat
// NumValues: 0x0004
enum class EMediaIOTimecodeFormat : uint32
{
	None                                     = 0,
	LTC                                      = 1,
	VITC                                     = 2,
	EMediaIOTimecodeFormat_MAX               = 3,
};

// Enum MediaIOCore.EMediaIOAutoDetectableTimecodeFormat
// NumValues: 0x0005
enum class EMediaIOAutoDetectableTimecodeFormat : uint8
{
	None                                     = 0,
	LTC                                      = 1,
	VITC                                     = 2,
	Auto                                     = 255,
	EMediaIOAutoDetectableTimecodeFormat_MAX = 256,
};

// Enum MediaIOCore.EMediaIOInterlaceFieldOrder
// NumValues: 0x0003
enum class EMediaIOInterlaceFieldOrder : uint8
{
	TopFieldFirst                            = 0,
	BottomFieldFirst                         = 1,
	EMediaIOInterlaceFieldOrder_MAX          = 2,
};

// Enum MediaIOCore.EMediaIOSampleEvaluationType
// NumValues: 0x0004
enum class EMediaIOSampleEvaluationType : uint8
{
	Latest                                   = 0,
	PlatformTime                             = 1,
	Timecode                                 = 2,
	EMediaIOSampleEvaluationType_MAX         = 3,
};

// Enum MediaIOCore.EMediaIOInputType
// NumValues: 0x0003
enum class EMediaIOInputType : uint32
{
	Fill                                     = 0,
	FillAndKey                               = 1,
	EMediaIOInputType_MAX                    = 2,
};

// Enum MediaIOCore.EMediaIOOutputType
// NumValues: 0x0003
enum class EMediaIOOutputType : uint32
{
	Fill                                     = 0,
	FillAndKey                               = 1,
	EMediaIOOutputType_MAX                   = 2,
};

// Enum MediaIOCore.EMediaIOReferenceType
// NumValues: 0x0004
enum class EMediaIOReferenceType : uint32
{
	FreeRun                                  = 0,
	External                                 = 1,
	Input                                    = 2,
	EMediaIOReferenceType_MAX                = 3,
};

// Enum MediaIOCore.EMediaCaptureSourceType
// NumValues: 0x0004
enum class EMediaCaptureSourceType : uint8
{
	RENDER_TARGET                            = 0,
	SCENE_VIEWPORT                           = 1,
	RHI_RESOURCE                             = 2,
	EMediaCaptureSourceType_MAX              = 3,
};

// ScriptStruct MediaIOCore.MediaCaptureOptions
// 0x00B8 (0x00B8 - 0x0000)
struct FMediaCaptureOptions final
{
public:
	bool                                          bAutoRestartOnSourceSizeChange;                    // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EMediaCaptureOverrunAction                    OverrunAction;                                     // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EMediaCaptureCroppingType                     Crop;                                              // 0x0002(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3[0x5];                                        // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FOpenColorIOColorConversionSettings    ColorConversionSettings;                           // 0x0008(0x0098)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FIntPoint                              CustomCapturePoint;                                // 0x00A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EMediaCaptureResizeMethod                     ResizeMethod;                                      // 0x00A8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bSkipFrameWhenRunningExpensiveTasks;               // 0x00A9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bConvertToDesiredPixelFormat;                      // 0x00AA(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bForceAlphaToOneOnConversion;                      // 0x00AB(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bApplyLinearToSRGBConversion;                      // 0x00AC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAutostopOnCapture;                                // 0x00AD(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_AE[0x2];                                       // 0x00AE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         NumberOfFramesToCapture;                           // 0x00B0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EMediaCapturePhase                            CapturePhase;                                      // 0x00B4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_B5[0x3];                                       // 0x00B5(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct MediaIOCore.MediaIOAutoDetectableTimecodeFormat_Backup
// 0x0008 (0x0008 - 0x0000)
struct FMediaIOAutoDetectableTimecodeFormat_Backup final
{
public:
	EMediaIOTimecodeFormat                        TimecodeFormat;                                    // 0x0000(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAutoDetect;                                       // 0x0004(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct MediaIOCore.MediaIODevice
// 0x0010 (0x0010 - 0x0000)
struct FMediaIODevice final
{
public:
	class FName                                   DeviceName;                                        // 0x0000(0x000C)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         DeviceIdentifier;                                  // 0x000C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct MediaIOCore.MediaIOConnection
// 0x0028 (0x0028 - 0x0000)
struct FMediaIOConnection final
{
public:
	struct FMediaIODevice                         Device;                                            // 0x0000(0x0010)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	class FName                                   protocol;                                          // 0x0010(0x000C)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EMediaIOTransportType                         TransportType;                                     // 0x001C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EMediaIOQuadLinkTransportType                 QuadTransportType;                                 // 0x0020(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         PortIdentifier;                                    // 0x0024(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct MediaIOCore.MediaIOMode
// 0x0018 (0x0018 - 0x0000)
struct FMediaIOMode final
{
public:
	struct FFrameRate                             FrameRate;                                         // 0x0000(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FIntPoint                              Resolution;                                        // 0x0008(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EMediaIOStandardType                          Standard;                                          // 0x0010(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         DeviceModeIdentifier;                              // 0x0014(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct MediaIOCore.MediaIOConfiguration
// 0x0044 (0x0044 - 0x0000)
struct FMediaIOConfiguration final
{
public:
	bool                                          bIsInput;                                          // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMediaIOConnection                     MediaConnection;                                   // 0x0004(0x0028)(Edit, EditConst, NoDestructor, NativeAccessSpecifierPublic)
	struct FMediaIOMode                           MediaMode;                                         // 0x002C(0x0018)(Edit, EditConst, NoDestructor, NativeAccessSpecifierPublic)
};

// ScriptStruct MediaIOCore.MediaIOInputConfiguration
// 0x004C (0x004C - 0x0000)
struct FMediaIOInputConfiguration final
{
public:
	struct FMediaIOConfiguration                  MediaConfiguration;                                // 0x0000(0x0044)(Edit, EditConst, NoDestructor, NativeAccessSpecifierPublic)
	EMediaIOInputType                             InputType;                                         // 0x0044(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         KeyPortIdentifier;                                 // 0x0048(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct MediaIOCore.MediaIOOutputConfiguration
// 0x0054 (0x0054 - 0x0000)
struct FMediaIOOutputConfiguration final
{
public:
	struct FMediaIOConfiguration                  MediaConfiguration;                                // 0x0000(0x0044)(Edit, EditConst, NoDestructor, NativeAccessSpecifierPublic)
	EMediaIOOutputType                            OutputType;                                        // 0x0044(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         KeyPortIdentifier;                                 // 0x0048(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EMediaIOReferenceType                         OutputReference;                                   // 0x004C(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ReferencePortIdentifier;                           // 0x0050(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct MediaIOCore.MediaIOVideoTimecodeConfiguration
// 0x0048 (0x0048 - 0x0000)
struct FMediaIOVideoTimecodeConfiguration final
{
public:
	struct FMediaIOConfiguration                  MediaConfiguration;                                // 0x0000(0x0044)(Edit, EditConst, NoDestructor, NativeAccessSpecifierPublic)
	EMediaIOAutoDetectableTimecodeFormat          TimecodeFormat;                                    // 0x0044(0x0001)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

}

