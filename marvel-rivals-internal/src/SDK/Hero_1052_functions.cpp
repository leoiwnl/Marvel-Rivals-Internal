#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Hero_1052

#include "Basic.hpp"

#include "Hero_1052_classes.hpp"
#include "Hero_1052_parameters.hpp"


namespace SDK
{

// Function Hero_1052.Ability_105221.EndFloating
// (Final, Native, Protected)

void UAbility_105221::EndFloating()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ability_105221", "EndFloating");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1052.Ability_105221.OnMoveForwardReceive
// (Final, Native, Protected)
// Parameters:
// float                                   ScaleValue                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAbility_105221::OnMoveForwardReceive(float ScaleValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ability_105221", "OnMoveForwardReceive");

	Params::Ability_105221_OnMoveForwardReceive Parms{};

	Parms.ScaleValue = ScaleValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1052.Ability_105221.OnMoveRightReceive
// (Final, Native, Protected)
// Parameters:
// float                                   ScaleValue                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAbility_105221::OnMoveRightReceive(float ScaleValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ability_105221", "OnMoveRightReceive");

	Params::Ability_105221_OnMoveRightReceive Parms{};

	Parms.ScaleValue = ScaleValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1052.Ability_105221.StartFloating
// (Final, Native, Protected)

void UAbility_105221::StartFloating()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ability_105221", "StartFloating");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1052.Ability_105231.OnBlockedSucceed
// (Native, Public)
// Parameters:
// float                                   BlockValue                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAbility_105231::OnBlockedSucceed(float BlockValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ability_105231", "OnBlockedSucceed");

	Params::Ability_105231_OnBlockedSucceed Parms{};

	Parms.BlockValue = BlockValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1052.Ability_105231.K2_OnImmunityBlockGameplayEffect
// (Native, Event, Public, BlueprintEvent, Const)
// Parameters:
// float                                   Magnitude                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAbility_105231::K2_OnImmunityBlockGameplayEffect(float Magnitude) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ability_105231", "K2_OnImmunityBlockGameplayEffect");

	Params::Ability_105231_K2_OnImmunityBlockGameplayEffect Parms{};

	Parms.Magnitude = Magnitude;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1052.NotTreatShield_105241.AddAttributeValue
// (Final, Native, Public, BlueprintCallable)

void UNotTreatShield_105241::AddAttributeValue()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NotTreatShield_105241", "AddAttributeValue");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1052.Ability_105232.CallServerPlayTimeline
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// int32                                   TimelineIndex                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult                       InHitResult                                            (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
// bool                                    BlockDash                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          ClientTargetLocation                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAbility_105232::CallServerPlayTimeline(int32 TimelineIndex, const struct FHitResult& InHitResult, bool BlockDash, const struct FVector& ClientTargetLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ability_105232", "CallServerPlayTimeline");

	Params::Ability_105232_CallServerPlayTimeline Parms{};

	Parms.TimelineIndex = TimelineIndex;
	Parms.InHitResult = std::move(InHitResult);
	Parms.BlockDash = BlockDash;
	Parms.ClientTargetLocation = std::move(ClientTargetLocation);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1052.Ability_105232.K2_OnPlayTimeline
// (Event, Public, HasOutParams, HasDefaults, BlueprintEvent)
// Parameters:
// int32                                   TimelineIndex                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult                       InHitResult                                            (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
// bool                                    BlockDash                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          ClientTargetLocation                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAbility_105232::K2_OnPlayTimeline(int32 TimelineIndex, const struct FHitResult& InHitResult, bool BlockDash, const struct FVector& ClientTargetLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ability_105232", "K2_OnPlayTimeline");

	Params::Ability_105232_K2_OnPlayTimeline Parms{};

	Parms.TimelineIndex = TimelineIndex;
	Parms.InHitResult = std::move(InHitResult);
	Parms.BlockDash = BlockDash;
	Parms.ClientTargetLocation = std::move(ClientTargetLocation);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Hero_1052.Ability_105232.OnServerReceivePlayTimeline
// (Final, Native, Public, HasOutParams, HasDefaults)
// Parameters:
// int32                                   TimelineIndex                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult                       InHitResult                                            (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
// bool                                    BlockDash                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          ClientTargetLocation                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAbility_105232::OnServerReceivePlayTimeline(int32 TimelineIndex, const struct FHitResult& InHitResult, bool BlockDash, const struct FVector& ClientTargetLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ability_105232", "OnServerReceivePlayTimeline");

	Params::Ability_105232_OnServerReceivePlayTimeline Parms{};

	Parms.TimelineIndex = TimelineIndex;
	Parms.InHitResult = std::move(InHitResult);
	Parms.BlockDash = BlockDash;
	Parms.ClientTargetLocation = std::move(ClientTargetLocation);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1052.LinLieCharacter.GetShareComboState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 ALinLieCharacter::GetShareComboState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LinLieCharacter", "GetShareComboState");

	Params::LinLieCharacter_GetShareComboState Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hero_1052.LinLieCharacter.ResetShareComboState
// (Final, Native, Public, BlueprintCallable)

void ALinLieCharacter::ResetShareComboState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LinLieCharacter", "ResetShareComboState");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1052.LinLieCharacter.SetJumpIndex
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   NewIndex                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ALinLieCharacter::SetJumpIndex(int32 NewIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LinLieCharacter", "SetJumpIndex");

	Params::LinLieCharacter_SetJumpIndex Parms{};

	Parms.NewIndex = NewIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1052.LinLieCharacter.SetRunLeft
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    NewState                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ALinLieCharacter::SetRunLeft(bool NewState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LinLieCharacter", "SetRunLeft");

	Params::LinLieCharacter_SetRunLeft Parms{};

	Parms.NewState = NewState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1052.LinLieCharacter.SetShareComboState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   NewState                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ComboSectionNum                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ComboTimeout                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ALinLieCharacter::SetShareComboState(int32 NewState, int32 ComboSectionNum, float ComboTimeout)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LinLieCharacter", "SetShareComboState");

	Params::LinLieCharacter_SetShareComboState Parms{};

	Parms.NewState = NewState;
	Parms.ComboSectionNum = ComboSectionNum;
	Parms.ComboTimeout = ComboTimeout;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1052.LinLieCharacter.OnRep_JumpIndex
// (Final, Native, Public, Const)

void ALinLieCharacter::OnRep_JumpIndex() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LinLieCharacter", "OnRep_JumpIndex");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}

}

