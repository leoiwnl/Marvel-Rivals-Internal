#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PyLevelEscortNodes

#include "Basic.hpp"

#include "PyLevelEscortNodes_classes.hpp"
#include "PyLevelEscortNodes_parameters.hpp"


namespace SDK
{

// PythonFunction PyLevelEscortNodes.PyLevelEscortNodes.SetEscortArgs
// (Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class APyPayload*                       Payload                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// TMap<int32, float>                      MoveSpeed                                              (ConstParm, Parm, OutParm, ReferenceParm)
// float                                   BackwordSpeed                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<int32>                           BuffID                                                 (ConstParm, Parm, OutParm, ReferenceParm)
// float                                   DelayForwardTime                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   DelayBackTime                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPyLevelEscortNodes::SetEscortArgs(class APyPayload* Payload, const TMap<int32, float>& MoveSpeed, float BackwordSpeed, const TArray<int32>& BuffID, float DelayForwardTime, float DelayBackTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PyLevelEscortNodes", "SetEscortArgs");

	Params::PyLevelEscortNodes_SetEscortArgs Parms{};

	Parms.Payload = Payload;
	Parms.MoveSpeed = std::move(MoveSpeed);
	Parms.BackwordSpeed = BackwordSpeed;
	Parms.BuffID = std::move(BuffID);
	Parms.DelayForwardTime = DelayForwardTime;
	Parms.DelayBackTime = DelayBackTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}

}

