#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Hero_1047

#include "Basic.hpp"

#include "Hero_1047_classes.hpp"
#include "Hero_1047_parameters.hpp"


namespace SDK
{

// Function Hero_1047.Projectile_10471101.GetProjectileFlyingTime
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AProjectile_10471101::GetProjectileFlyingTime()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Projectile_10471101", "GetProjectileFlyingTime");

	Params::Projectile_10471101_GetProjectileFlyingTime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hero_1047.Projectile_10471101.OnJeffProjectileStop
// (Native, Public, HasOutParams)
// Parameters:
// struct FHitResult                       ImpactResult                                           (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

void AProjectile_10471101::OnJeffProjectileStop(const struct FHitResult& ImpactResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Projectile_10471101", "OnJeffProjectileStop");

	Params::Projectile_10471101_OnJeffProjectileStop Parms{};

	Parms.ImpactResult = std::move(ImpactResult);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1047.Cue_Ability_Loop_10471102.ApplyDebugHapplyBubbles
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   FrameIndex                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ACue_Ability_Loop_10471102::ApplyDebugHapplyBubbles(int32 FrameIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Cue_Ability_Loop_10471102", "ApplyDebugHapplyBubbles");

	Params::Cue_Ability_Loop_10471102_ApplyDebugHapplyBubbles Parms{};

	Parms.FrameIndex = FrameIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1047.Cue_Ability_Loop_10471102.ApplyDebugHapplyBubblesSpline
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   FrameIndex                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USplineComponent*                 Spline                                                 (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ACue_Ability_Loop_10471102::ApplyDebugHapplyBubblesSpline(int32 FrameIndex, class USplineComponent* Spline)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Cue_Ability_Loop_10471102", "ApplyDebugHapplyBubblesSpline");

	Params::Cue_Ability_Loop_10471102_ApplyDebugHapplyBubblesSpline Parms{};

	Parms.FrameIndex = FrameIndex;
	Parms.Spline = Spline;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1047.Cue_Ability_Loop_10471102.GetDebugHapplyMinAndMaxFrame
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   Min                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Max                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ACue_Ability_Loop_10471102::GetDebugHapplyMinAndMaxFrame(int32* Min, int32* Max)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Cue_Ability_Loop_10471102", "GetDebugHapplyMinAndMaxFrame");

	Params::Cue_Ability_Loop_10471102_GetDebugHapplyMinAndMaxFrame Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Min != nullptr)
		*Min = Parms.Min;

	if (Max != nullptr)
		*Max = Parms.Max;
}


// Function Hero_1047.Cue_Projectile_HitImpact_10471101.OnPostExecuteAudioCreateShotActor
// (Native, Event, Public, BlueprintEvent, Const)
// Parameters:
// class AOneShotAudioActor*               OneShotActor                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           MyTarget                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCue_Projectile_HitImpact_10471101::OnPostExecuteAudioCreateShotActor(class AOneShotAudioActor* OneShotActor, class AActor* MyTarget) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Cue_Projectile_HitImpact_10471101", "OnPostExecuteAudioCreateShotActor");

	Params::Cue_Projectile_HitImpact_10471101_OnPostExecuteAudioCreateShotActor Parms{};

	Parms.OneShotActor = OneShotActor;
	Parms.MyTarget = MyTarget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1047.Projectile_10471301.K2_JeffPaintOnLocation
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FJeffPaintParams                 Param                                                  (Parm, NoDestructor, NativeAccessSpecifierPublic)

void AProjectile_10471301::K2_JeffPaintOnLocation(const struct FJeffPaintParams& Param)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Projectile_10471301", "K2_JeffPaintOnLocation");

	Params::Projectile_10471301_K2_JeffPaintOnLocation Parms{};

	Parms.Param = std::move(Param);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1047.JeffWinterFestivalLibrary.JeffPaintOnLocation
// (Final, Native, Static, Private, BlueprintCallable)
// Parameters:
// struct FJeffPaintParams                 Param                                                  (Parm, NoDestructor, NativeAccessSpecifierPublic)

void UJeffWinterFestivalLibrary::JeffPaintOnLocation(const struct FJeffPaintParams& Param)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("JeffWinterFestivalLibrary", "JeffPaintOnLocation");

	Params::JeffWinterFestivalLibrary_JeffPaintOnLocation Parms{};

	Parms.Param = std::move(Param);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1047.Cue_Ability_Loop_10473101.CheckMovementModeByState
// (Final, Native, Public)
// Parameters:
// class ACharacter*                       Character                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EMovementMode                           PrevMovementMode                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                                   PreviousCustomMode                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ACue_Ability_Loop_10473101::CheckMovementModeByState(class ACharacter* Character, EMovementMode PrevMovementMode, uint8 PreviousCustomMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Cue_Ability_Loop_10473101", "CheckMovementModeByState");

	Params::Cue_Ability_Loop_10473101_CheckMovementModeByState Parms{};

	Parms.Character = Character;
	Parms.PrevMovementMode = PrevMovementMode;
	Parms.PreviousCustomMode = PreviousCustomMode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1047.Cue_Ability_Loop_10473101.OnSystemFinished
// (Final, Native, Public)
// Parameters:
// class UNiagaraComponent*                PSystem                                                (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ACue_Ability_Loop_10473101::OnSystemFinished(class UNiagaraComponent* PSystem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Cue_Ability_Loop_10473101", "OnSystemFinished");

	Params::Cue_Ability_Loop_10473101_OnSystemFinished Parms{};

	Parms.PSystem = PSystem;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1047.Summoned_10475101.OnActorOverlap
// (Final, Native, Public)
// Parameters:
// class AActor*                           InActor                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASummoned_10475101::OnActorOverlap(class AActor* InActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Summoned_10475101", "OnActorOverlap");

	Params::Summoned_10475101_OnActorOverlap Parms{};

	Parms.InActor = InActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1047.Projectile_10475101.CheckBubblePlacingSpace
// (Final, Native, Public, HasOutParams, HasDefaults)
// Parameters:
// struct FVector                          BubbleLocation                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult                       InHitResult                                            (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
// float                                   BubbleRadius                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AProjectile_10475101::CheckBubblePlacingSpace(struct FVector* BubbleLocation, const struct FHitResult& InHitResult, float BubbleRadius)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Projectile_10475101", "CheckBubblePlacingSpace");

	Params::Projectile_10475101_CheckBubblePlacingSpace Parms{};

	Parms.InHitResult = std::move(InHitResult);
	Parms.BubbleRadius = BubbleRadius;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (BubbleLocation != nullptr)
		*BubbleLocation = std::move(Parms.BubbleLocation);

	return Parms.ReturnValue;
}


// Function Hero_1047.Cue_Ability_Loop_10476101.OnJeffStateUpdate
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EJeffState                              InState                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ACue_Ability_Loop_10476101::OnJeffStateUpdate(EJeffState InState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Cue_Ability_Loop_10476101", "OnJeffStateUpdate");

	Params::Cue_Ability_Loop_10476101_OnJeffStateUpdate Parms{};

	Parms.InState = InState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1047.Cue_Ability_Loop_10476101.OnOwnerTagUpdate
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FGameplayTag                     Tag                                                    (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TagExists                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ACue_Ability_Loop_10476101::OnOwnerTagUpdate(const struct FGameplayTag& Tag, bool TagExists)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Cue_Ability_Loop_10476101", "OnOwnerTagUpdate");

	Params::Cue_Ability_Loop_10476101_OnOwnerTagUpdate Parms{};

	Parms.Tag = std::move(Tag);
	Parms.TagExists = TagExists;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1047.Cue_Ability_Loop_Jeff_Diving.OnJeffStateUpdate
// (Final, Native, Protected)
// Parameters:
// EJeffState                              InState                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ACue_Ability_Loop_Jeff_Diving::OnJeffStateUpdate(EJeffState InState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Cue_Ability_Loop_Jeff_Diving", "OnJeffStateUpdate");

	Params::Cue_Ability_Loop_Jeff_Diving_OnJeffStateUpdate Parms{};

	Parms.InState = InState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1047.Ability_104771.AfterSetDevourCharacters
// (Native, Event, Public, BlueprintEvent)

void UAbility_104771::AfterSetDevourCharacters()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ability_104771", "AfterSetDevourCharacters");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1047.Ability_104771.DevourCharactersWhenStartSwimming
// (Final, Native, Public, BlueprintCallable)

void UAbility_104771::DevourCharactersWhenStartSwimming()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ability_104771", "DevourCharactersWhenStartSwimming");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1047.Ability_104771.ExpandCapsuleSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAbility_104771::ExpandCapsuleSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ability_104771", "ExpandCapsuleSize");

	Params::Ability_104771_ExpandCapsuleSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hero_1047.Ability_104771.GetAliveDevouredCharacter
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class AActor*>                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class AActor*> UAbility_104771::GetAliveDevouredCharacter()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ability_104771", "GetAliveDevouredCharacter");

	Params::Ability_104771_GetAliveDevouredCharacter Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hero_1047.Ability_104771.HandleOwnerBuff
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// int32                                   BuffID                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bNeedApply                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAbility_104771::HandleOwnerBuff(int32 BuffID, bool bNeedApply)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ability_104771", "HandleOwnerBuff");

	Params::Ability_104771_HandleOwnerBuff Parms{};

	Parms.BuffID = BuffID;
	Parms.bNeedApply = bNeedApply;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1047.Ability_104771.OnDevouredCharacterDeath
// (Final, Native, Public, HasOutParams)
// Parameters:
// class AActor*                           InSourceAvatar                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           InTargetAvatar                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FAttributeModifierHandle         ModifierParameterHandle                                (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAbility_104771::OnDevouredCharacterDeath(class AActor* InSourceAvatar, class AActor* InTargetAvatar, const struct FAttributeModifierHandle& ModifierParameterHandle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ability_104771", "OnDevouredCharacterDeath");

	Params::Ability_104771_OnDevouredCharacterDeath Parms{};

	Parms.InSourceAvatar = InSourceAvatar;
	Parms.InTargetAvatar = InTargetAvatar;
	Parms.ModifierParameterHandle = std::move(ModifierParameterHandle);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1047.Ability_104771.OnDevouredCharacterDisguiseEnd
// (Final, Native, Public)
// Parameters:
// class AMarvelBaseCharacter*             InDisguiseCharacter                                    (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AMarvelBaseCharacter*             InOriginCharacter                                      (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsAvatorAlive                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAbility_104771::OnDevouredCharacterDisguiseEnd(class AMarvelBaseCharacter* InDisguiseCharacter, class AMarvelBaseCharacter* InOriginCharacter, bool bIsAvatorAlive)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ability_104771", "OnDevouredCharacterDisguiseEnd");

	Params::Ability_104771_OnDevouredCharacterDisguiseEnd Parms{};

	Parms.InDisguiseCharacter = InDisguiseCharacter;
	Parms.InOriginCharacter = InOriginCharacter;
	Parms.bIsAvatorAlive = bIsAvatorAlive;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1047.Ability_104771.OnDevourSummonedEndAgentTask
// (Final, Native, Public)
// Parameters:
// class AActor*                           InSummoned                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAbility_104771::OnDevourSummonedEndAgentTask(class AActor* InSummoned)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ability_104771", "OnDevourSummonedEndAgentTask");

	Params::Ability_104771_OnDevourSummonedEndAgentTask Parms{};

	Parms.InSummoned = InSummoned;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1047.Ability_104771.OnRep_ReplicatedCurrentAbilityState
// (Final, Native, Protected)

void UAbility_104771::OnRep_ReplicatedCurrentAbilityState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ability_104771", "OnRep_ReplicatedCurrentAbilityState");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1047.Ability_104771.OnRep_ReplicatedDevourCharactersData
// (Final, Native, Protected)

void UAbility_104771::OnRep_ReplicatedDevourCharactersData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ability_104771", "OnRep_ReplicatedDevourCharactersData");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1047.Ability_104771.OnRep_ReplicatedWarningNotify
// (Final, Native, Protected)

void UAbility_104771::OnRep_ReplicatedWarningNotify()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ability_104771", "OnRep_ReplicatedWarningNotify");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1047.Ability_104771.OnSelectRegionFinish
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bActivateByTimerOrMT                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAbility_104771::OnSelectRegionFinish(bool bActivateByTimerOrMT)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ability_104771", "OnSelectRegionFinish");

	Params::Ability_104771_OnSelectRegionFinish Parms{};

	Parms.bActivateByTimerOrMT = bActivateByTimerOrMT;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1047.Ability_104771.OnUpdateDevouredCharactersData
// (Native, Event, Public, BlueprintEvent)

void UAbility_104771::OnUpdateDevouredCharactersData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ability_104771", "OnUpdateDevouredCharactersData");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1047.Ability_104771.ReStartDivingBuff
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   RemainDuration                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAbility_104771::ReStartDivingBuff(float RemainDuration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ability_104771", "ReStartDivingBuff");

	Params::Ability_104771_ReStartDivingBuff Parms{};

	Parms.RemainDuration = RemainDuration;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1047.Ability_104771.RestoreCapsuleSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAbility_104771::RestoreCapsuleSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ability_104771", "RestoreCapsuleSize");

	Params::Ability_104771_RestoreCapsuleSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hero_1047.Ability_104771.SetCurrentAbilityState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EAbilityState_104771                    CurrentAbilityState_0                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAbility_104771::SetCurrentAbilityState(const EAbilityState_104771 CurrentAbilityState_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ability_104771", "SetCurrentAbilityState");

	Params::Ability_104771_SetCurrentAbilityState Parms{};

	Parms.CurrentAbilityState_0 = CurrentAbilityState_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1047.Ability_104771.SetDevourCharactersFromScope
// (Final, Native, Public, HasOutParams)
// Parameters:
// TArray<TWeakObjectPtr<class AActor>>    InDevourCharactersList                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, UObjectWrapper, NativeAccessSpecifierPublic)

void UAbility_104771::SetDevourCharactersFromScope(const TArray<TWeakObjectPtr<class AActor>>& InDevourCharactersList)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ability_104771", "SetDevourCharactersFromScope");

	Params::Ability_104771_SetDevourCharactersFromScope Parms{};

	Parms.InDevourCharactersList = std::move(InDevourCharactersList);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1047.Ability_104771.SetMoveLogicFrame_AbilityEndClear
// (Final, Native, Public, BlueprintCallable)

void UAbility_104771::SetMoveLogicFrame_AbilityEndClear()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ability_104771", "SetMoveLogicFrame_AbilityEndClear");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1047.Ability_104771.SetMoveLogicFrame_EnterTopView
// (Final, Native, Public)

void UAbility_104771::SetMoveLogicFrame_EnterTopView()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ability_104771", "SetMoveLogicFrame_EnterTopView");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1047.Ability_104771.SetMoveLogicFrame_ExitTopView
// (Final, Native, Public)

void UAbility_104771::SetMoveLogicFrame_ExitTopView()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ability_104771", "SetMoveLogicFrame_ExitTopView");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1047.Ability_104771.SetMoveLogicFrame_SelectionClear
// (Final, Native, Public, BlueprintCallable)

void UAbility_104771::SetMoveLogicFrame_SelectionClear()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ability_104771", "SetMoveLogicFrame_SelectionClear");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1047.Ability_104771.SetMoveLogicFrame_SelectionStart
// (Final, Native, Public, BlueprintCallable)

void UAbility_104771::SetMoveLogicFrame_SelectionStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ability_104771", "SetMoveLogicFrame_SelectionStart");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1047.Ability_104771.SetMoveLogicFrame_SelectionWarning
// (Final, Native, Public, BlueprintCallable)

void UAbility_104771::SetMoveLogicFrame_SelectionWarning()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ability_104771", "SetMoveLogicFrame_SelectionWarning");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1047.Ability_104771.SpitOutImpl
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bSpitOutAll                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bSpitOutEnemy                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bKnockUp                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAbility_104771::SpitOutImpl(bool bSpitOutAll, bool bSpitOutEnemy, bool bKnockUp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ability_104771", "SpitOutImpl");

	Params::Ability_104771_SpitOutImpl Parms{};

	Parms.bSpitOutAll = bSpitOutAll;
	Parms.bSpitOutEnemy = bSpitOutEnemy;
	Parms.bKnockUp = bKnockUp;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1047.Ability_104771.StopDivingBuff
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UAbility_104771::StopDivingBuff()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ability_104771", "StopDivingBuff");

	Params::Ability_104771_StopDivingBuff Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hero_1047.Ability_104771.SwitchSelectionRegionTopView
// (Final, Native, Public)
// Parameters:
// bool                                    bToTopView                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bButtonSwitch                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAbility_104771::SwitchSelectionRegionTopView(bool bToTopView, bool bButtonSwitch)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ability_104771", "SwitchSelectionRegionTopView");

	Params::Ability_104771_SwitchSelectionRegionTopView Parms{};

	Parms.bToTopView = bToTopView;
	Parms.bButtonSwitch = bButtonSwitch;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1047.Ability_104771.GetCurrentAbilityState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EAbilityState_104771                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EAbilityState_104771 UAbility_104771::GetCurrentAbilityState() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ability_104771", "GetCurrentAbilityState");

	Params::Ability_104771_GetCurrentAbilityState Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hero_1047.Ability_104771.GetDevouredAlly
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class AActor*>                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class AActor*> UAbility_104771::GetDevouredAlly() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ability_104771", "GetDevouredAlly");

	Params::Ability_104771_GetDevouredAlly Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hero_1047.Ability_104771.GetDevouredEnemy
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class AActor*>                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class AActor*> UAbility_104771::GetDevouredEnemy() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ability_104771", "GetDevouredEnemy");

	Params::Ability_104771_GetDevouredEnemy Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hero_1047.Ability_104771.HaveDevouredAlly
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAbility_104771::HaveDevouredAlly() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ability_104771", "HaveDevouredAlly");

	Params::Ability_104771_HaveDevouredAlly Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hero_1047.Ability_104771.HaveDevouredEnemy
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAbility_104771::HaveDevouredEnemy() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ability_104771", "HaveDevouredEnemy");

	Params::Ability_104771_HaveDevouredEnemy Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hero_1047.JeffPassengerContainerComponent.Client_AttachPassengerAndUpdateComponentTickPrerequisite
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// class AActor*                           InAttachPassenger                                      (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UJeffPassengerContainerComponent::Client_AttachPassengerAndUpdateComponentTickPrerequisite(class AActor* InAttachPassenger)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JeffPassengerContainerComponent", "Client_AttachPassengerAndUpdateComponentTickPrerequisite");

	Params::JeffPassengerContainerComponent_Client_AttachPassengerAndUpdateComponentTickPrerequisite Parms{};

	Parms.InAttachPassenger = InAttachPassenger;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1047.JeffPassengerContainerComponent.Client_DetachPassengerAndUpdateComponentTickPrerequisite
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// class AActor*                           InDetachPassenger                                      (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UJeffPassengerContainerComponent::Client_DetachPassengerAndUpdateComponentTickPrerequisite(class AActor* InDetachPassenger)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JeffPassengerContainerComponent", "Client_DetachPassengerAndUpdateComponentTickPrerequisite");

	Params::JeffPassengerContainerComponent_Client_DetachPassengerAndUpdateComponentTickPrerequisite Parms{};

	Parms.InDetachPassenger = InDetachPassenger;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1047.EffectiveComponent_10477101.K2_OnPreApplyContainer
// (Native, Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// TArray<struct FHitResult>               HitResults                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
// TArray<struct FHitResult>               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

TArray<struct FHitResult> UEffectiveComponent_10477101::K2_OnPreApplyContainer(const TArray<struct FHitResult>& HitResults)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EffectiveComponent_10477101", "K2_OnPreApplyContainer");

	Params::EffectiveComponent_10477101_K2_OnPreApplyContainer Parms{};

	Parms.HitResults = std::move(HitResults);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hero_1047.MarvelAbilityTask_SelectRegionAttack.SelectRegionAttack
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UMarvelGameplayAbility*           OwningAbility                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ConfirmMethodName                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   SelectionWarningDuration                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UMarvelAbilityTask_SelectRegionAttack*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UMarvelAbilityTask_SelectRegionAttack* UMarvelAbilityTask_SelectRegionAttack::SelectRegionAttack(class UMarvelGameplayAbility* OwningAbility, class FName ConfirmMethodName, float SelectionWarningDuration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MarvelAbilityTask_SelectRegionAttack", "SelectRegionAttack");

	Params::MarvelAbilityTask_SelectRegionAttack_SelectRegionAttack Parms{};

	Parms.OwningAbility = OwningAbility;
	Parms.ConfirmMethodName = ConfirmMethodName;
	Parms.SelectionWarningDuration = SelectionWarningDuration;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hero_1047.MarvelAbilityTask_SelectRegionAttack.OnLocateFinish
// (Final, Native, Protected)
// Parameters:
// bool                                    bActiveByTimerOrMT                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMarvelAbilityTask_SelectRegionAttack::OnLocateFinish(bool bActiveByTimerOrMT)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MarvelAbilityTask_SelectRegionAttack", "OnLocateFinish");

	Params::MarvelAbilityTask_SelectRegionAttack_OnLocateFinish Parms{};

	Parms.bActiveByTimerOrMT = bActiveByTimerOrMT;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1047.MarvelAbilityTask_SelectRegionAttack.OnPressActivateHurricaneKey
// (Final, Native, Private)
// Parameters:
// float                                   TimeWaited                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMarvelAbilityTask_SelectRegionAttack::OnPressActivateHurricaneKey(float TimeWaited)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MarvelAbilityTask_SelectRegionAttack", "OnPressActivateHurricaneKey");

	Params::MarvelAbilityTask_SelectRegionAttack_OnPressActivateHurricaneKey Parms{};

	Parms.TimeWaited = TimeWaited;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1047.MarvelAbilityTask_SelectRegionAttack.OnPressCameraAnimationKey
// (Final, Native, Private)
// Parameters:
// float                                   TimeWaited                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMarvelAbilityTask_SelectRegionAttack::OnPressCameraAnimationKey(float TimeWaited)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MarvelAbilityTask_SelectRegionAttack", "OnPressCameraAnimationKey");

	Params::MarvelAbilityTask_SelectRegionAttack_OnPressCameraAnimationKey Parms{};

	Parms.TimeWaited = TimeWaited;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1047.MarvelAbilityTask_SelectRegionAttack.OnReleaseCameraAnimationKey
// (Final, Native, Private)
// Parameters:
// float                                   TimeWaited                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMarvelAbilityTask_SelectRegionAttack::OnReleaseCameraAnimationKey(float TimeWaited)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MarvelAbilityTask_SelectRegionAttack", "OnReleaseCameraAnimationKey");

	Params::MarvelAbilityTask_SelectRegionAttack_OnReleaseCameraAnimationKey Parms{};

	Parms.TimeWaited = TimeWaited;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1047.MarvelAbilityTask_SelectRegionAttack.OnTimeOverFinish
// (Final, Native, Private)

void UMarvelAbilityTask_SelectRegionAttack::OnTimeOverFinish()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MarvelAbilityTask_SelectRegionAttack", "OnTimeOverFinish");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1047.MarvelAbilityTask_SelectRegionAttack.OnWarningFinish
// (Final, Native, Private)

void UMarvelAbilityTask_SelectRegionAttack::OnWarningFinish()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MarvelAbilityTask_SelectRegionAttack", "OnWarningFinish");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1047.Cue_Ability_Loop_10477101.OnDevourCharacterSuccess
// (Final, Native, Protected)

void ACue_Ability_Loop_10477101::OnDevourCharacterSuccess()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Cue_Ability_Loop_10477101", "OnDevourCharacterSuccess");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1047.Cue_Ability_Loop_10477101.OnSelectRegionFinish
// (Final, Native, Protected)
// Parameters:
// bool                                    bActivateByTimerOrMT                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ACue_Ability_Loop_10477101::OnSelectRegionFinish(bool bActivateByTimerOrMT)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Cue_Ability_Loop_10477101", "OnSelectRegionFinish");

	Params::Cue_Ability_Loop_10477101_OnSelectRegionFinish Parms{};

	Parms.bActivateByTimerOrMT = bActivateByTimerOrMT;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1047.Ability_104781.BindCancelRideInput
// (Final, Native, Protected, BlueprintCallable)

void UAbility_104781::BindCancelRideInput()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ability_104781", "BindCancelRideInput");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1047.Ability_104781.BindDettachDelegates
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class AActor*                           InGroot                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAbility_104781::BindDettachDelegates(class AActor* InGroot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ability_104781", "BindDettachDelegates");

	Params::Ability_104781_BindDettachDelegates Parms{};

	Parms.InGroot = InGroot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1047.Ability_104781.MarkOnGroot
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// bool                                    bOnGroot                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAbility_104781::MarkOnGroot(bool bOnGroot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ability_104781", "MarkOnGroot");

	Params::Ability_104781_MarkOnGroot Parms{};

	Parms.bOnGroot = bOnGroot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1047.Ability_104781.OnCoopAbilityTickStateChanged
// (Final, Native, Protected)
// Parameters:
// bool                                    bShouldAbilityTick                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAbility_104781::OnCoopAbilityTickStateChanged(bool bShouldAbilityTick)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ability_104781", "OnCoopAbilityTickStateChanged");

	Params::Ability_104781_OnCoopAbilityTickStateChanged Parms{};

	Parms.bShouldAbilityTick = bShouldAbilityTick;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1047.Ability_104781.OnGrootDeath
// (Final, Native, Protected, HasOutParams)
// Parameters:
// class AActor*                           InSourceAvatar                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           InTargetAvatar                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FAttributeModifierHandle         ModifierParameterHandle                                (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAbility_104781::OnGrootDeath(class AActor* InSourceAvatar, class AActor* InTargetAvatar, const struct FAttributeModifierHandle& ModifierParameterHandle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ability_104781", "OnGrootDeath");

	Params::Ability_104781_OnGrootDeath Parms{};

	Parms.InSourceAvatar = InSourceAvatar;
	Parms.InTargetAvatar = InTargetAvatar;
	Parms.ModifierParameterHandle = std::move(ModifierParameterHandle);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1047.Ability_104781.OnGrootRepToSimulatedRole
// (Event, Protected, BlueprintEvent)

void UAbility_104781::OnGrootRepToSimulatedRole()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ability_104781", "OnGrootRepToSimulatedRole");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Hero_1047.Ability_104781.OnGrootTagUpdated
// (Final, Native, Protected, HasOutParams)
// Parameters:
// struct FGameplayTag                     TagUpdated                                             (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bTagExists                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAbility_104781::OnGrootTagUpdated(const struct FGameplayTag& TagUpdated, bool bTagExists)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ability_104781", "OnGrootTagUpdated");

	Params::Ability_104781_OnGrootTagUpdated Parms{};

	Parms.TagUpdated = std::move(TagUpdated);
	Parms.bTagExists = bTagExists;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1047.Ability_104781.OnJeffDeath
// (Final, Native, Protected, HasOutParams)
// Parameters:
// class AActor*                           InSourceAvatar                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           InTargetAvatar                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FAttributeModifierHandle         ModifierParameterHandle                                (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAbility_104781::OnJeffDeath(class AActor* InSourceAvatar, class AActor* InTargetAvatar, const struct FAttributeModifierHandle& ModifierParameterHandle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ability_104781", "OnJeffDeath");

	Params::Ability_104781_OnJeffDeath Parms{};

	Parms.InSourceAvatar = InSourceAvatar;
	Parms.InTargetAvatar = InTargetAvatar;
	Parms.ModifierParameterHandle = std::move(ModifierParameterHandle);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1047.Ability_104781.OnJeffTagUpdated
// (Final, Native, Protected, HasOutParams)
// Parameters:
// struct FGameplayTag                     TagUpdated                                             (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bTagExists                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAbility_104781::OnJeffTagUpdated(const struct FGameplayTag& TagUpdated, bool bTagExists)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ability_104781", "OnJeffTagUpdated");

	Params::Ability_104781_OnJeffTagUpdated Parms{};

	Parms.TagUpdated = std::move(TagUpdated);
	Parms.bTagExists = bTagExists;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1047.Ability_104781.OnJeffTakeDamage
// (Final, Native, Protected, HasOutParams)
// Parameters:
// class AActor*                           InSourceAvatar                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           InTargetAvatar                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FAttributeModifierHandle         ModifierParameterHandle                                (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAbility_104781::OnJeffTakeDamage(class AActor* InSourceAvatar, class AActor* InTargetAvatar, const struct FAttributeModifierHandle& ModifierParameterHandle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ability_104781", "OnJeffTakeDamage");

	Params::Ability_104781_OnJeffTakeDamage Parms{};

	Parms.InSourceAvatar = InSourceAvatar;
	Parms.InTargetAvatar = InTargetAvatar;
	Parms.ModifierParameterHandle = std::move(ModifierParameterHandle);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1047.Ability_104781.OnRep_CurrentState
// (Final, Native, Protected)

void UAbility_104781::OnRep_CurrentState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ability_104781", "OnRep_CurrentState");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1047.Ability_104781.OnRep_Groot
// (Final, Native, Protected)

void UAbility_104781::OnRep_Groot()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ability_104781", "OnRep_Groot");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1047.Ability_104781.OnRideCancel
// (Final, Native, Protected)
// Parameters:
// float                                   StateIntervalTime                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAbility_104781::OnRideCancel(float StateIntervalTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ability_104781", "OnRideCancel");

	Params::Ability_104781_OnRideCancel Parms{};

	Parms.StateIntervalTime = StateIntervalTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1047.Ability_104781.Python_AttachToGroot
// (Event, Protected, BlueprintEvent)

void UAbility_104781::Python_AttachToGroot()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ability_104781", "Python_AttachToGroot");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Hero_1047.Ability_104781.Python_DetachFromGroot
// (Event, Protected, BlueprintEvent)

void UAbility_104781::Python_DetachFromGroot()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ability_104781", "Python_DetachFromGroot");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Hero_1047.Ability_104781.Python_FailedFlyingToGroot
// (Event, Protected, BlueprintEvent)

void UAbility_104781::Python_FailedFlyingToGroot()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ability_104781", "Python_FailedFlyingToGroot");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Hero_1047.Ability_104781.Python_OnRideCancel
// (Event, Protected, BlueprintEvent)

void UAbility_104781::Python_OnRideCancel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ability_104781", "Python_OnRideCancel");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Hero_1047.Ability_104781.Python_StartFlyingToGroot
// (Event, Protected, BlueprintEvent)

void UAbility_104781::Python_StartFlyingToGroot()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ability_104781", "Python_StartFlyingToGroot");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Hero_1047.Ability_104781.ScaleRidingHitShapeSize
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// bool                                    bEnable                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAbility_104781::ScaleRidingHitShapeSize(bool bEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ability_104781", "ScaleRidingHitShapeSize");

	Params::Ability_104781_ScaleRidingHitShapeSize Parms{};

	Parms.bEnable = bEnable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1047.Ability_104781.ServerOnRideCancel
// (Net, NetReliable, Native, Event, Protected, NetServer)
// Parameters:
// float                                   StateIntervalTime                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAbility_104781::ServerOnRideCancel(float StateIntervalTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ability_104781", "ServerOnRideCancel");

	Params::Ability_104781_ServerOnRideCancel Parms{};

	Parms.StateIntervalTime = StateIntervalTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1047.Ability_104781.SetJeffState
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// EJeffGrootAbilityState                  InState                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAbility_104781::SetJeffState(EJeffGrootAbilityState InState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ability_104781", "SetJeffState");

	Params::Ability_104781_SetJeffState Parms{};

	Parms.InState = InState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1047.Ability_104781.SetSpringArmIgnore
// (Net, NetReliable, Native, Event, NetMulticast, Protected)
// Parameters:
// class AMarvelBaseCharacter*             InGroot                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AMarvelBaseCharacter*             OwnChar                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIgnore                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAbility_104781::SetSpringArmIgnore(class AMarvelBaseCharacter* InGroot, class AMarvelBaseCharacter* OwnChar, bool bIgnore)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ability_104781", "SetSpringArmIgnore");

	Params::Ability_104781_SetSpringArmIgnore Parms{};

	Parms.InGroot = InGroot;
	Parms.OwnChar = OwnChar;
	Parms.bIgnore = bIgnore;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1047.Ability_104781.UnBindDettachDelegates
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class AActor*                           InGroot                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAbility_104781::UnBindDettachDelegates(class AActor* InGroot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ability_104781", "UnBindDettachDelegates");

	Params::Ability_104781_UnBindDettachDelegates Parms{};

	Parms.InGroot = InGroot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1047.Cue_Ability_Loop_10478101.OnJeffGrootCoopStateChange
// (Final, Native, Protected)
// Parameters:
// EJeffGrootAbilityState                  InState                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ACue_Ability_Loop_10478101::OnJeffGrootCoopStateChange(EJeffGrootAbilityState InState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Cue_Ability_Loop_10478101", "OnJeffGrootCoopStateChange");

	Params::Cue_Ability_Loop_10478101_OnJeffGrootCoopStateChange Parms{};

	Parms.InState = InState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1047.JeffAnimInstance.CalucateJeffGrootIK
// (Final, Native, Protected, HasOutParams)
// Parameters:
// struct FAnimComponentSpacePoseContext   PoseContext                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UJeffAnimInstance::CalucateJeffGrootIK(const struct FAnimComponentSpacePoseContext& PoseContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JeffAnimInstance", "CalucateJeffGrootIK");

	Params::JeffAnimInstance_CalucateJeffGrootIK Parms{};

	Parms.PoseContext = std::move(PoseContext);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1047.JeffAnimInstance.GetGroundMotionForwardState
// (Final, Native, Protected, HasOutParams)
// Parameters:
// struct FAnimPoseContext                 PoseContext                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UJeffAnimInstance::GetGroundMotionForwardState(const struct FAnimPoseContext& PoseContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JeffAnimInstance", "GetGroundMotionForwardState");

	Params::JeffAnimInstance_GetGroundMotionForwardState Parms{};

	Parms.PoseContext = std::move(PoseContext);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1047.JeffAnimInstance.RelevantJeffOnGrootStateNode
// (Final, Native, Protected, HasOutParams, BlueprintCallable)
// Parameters:
// struct FAnimUpdateContext               Context                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FAnimNodeReference               Node                                                   (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UJeffAnimInstance::RelevantJeffOnGrootStateNode(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JeffAnimInstance", "RelevantJeffOnGrootStateNode");

	Params::JeffAnimInstance_RelevantJeffOnGrootStateNode Parms{};

	Parms.Context = std::move(Context);
	Parms.Node = std::move(Node);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1047.JeffAnimInstance.UpdateJeffOnGrootMotionNode
// (Final, Native, Protected, HasOutParams, BlueprintCallable)
// Parameters:
// struct FAnimUpdateContext               Context                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FAnimNodeReference               Node                                                   (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UJeffAnimInstance::UpdateJeffOnGrootMotionNode(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JeffAnimInstance", "UpdateJeffOnGrootMotionNode");

	Params::JeffAnimInstance_UpdateJeffOnGrootMotionNode Parms{};

	Parms.Context = std::move(Context);
	Parms.Node = std::move(Node);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1047.JeffAnimInstance.UpdateJeffOnGrootStateNode
// (Final, Native, Protected, HasOutParams, BlueprintCallable)
// Parameters:
// struct FAnimUpdateContext               Context                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FAnimNodeReference               Node                                                   (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UJeffAnimInstance::UpdateJeffOnGrootStateNode(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JeffAnimInstance", "UpdateJeffOnGrootStateNode");

	Params::JeffAnimInstance_UpdateJeffOnGrootStateNode Parms{};

	Parms.Context = std::move(Context);
	Parms.Node = std::move(Node);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1047.JeffCharacter.DivingBlockAbility
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// struct FGameplayTagContainer            InContainer                                            (Parm, NativeAccessSpecifierPublic)
// bool                                    bBlock                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AJeffCharacter::DivingBlockAbility(const struct FGameplayTagContainer& InContainer, bool bBlock)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JeffCharacter", "DivingBlockAbility");

	Params::JeffCharacter_DivingBlockAbility Parms{};

	Parms.InContainer = std::move(InContainer);
	Parms.bBlock = bBlock;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1047.JeffCharacter.GetJeffState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EJeffState                              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EJeffState AJeffCharacter::GetJeffState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JeffCharacter", "GetJeffState");

	Params::JeffCharacter_GetJeffState Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hero_1047.JeffCharacter.IsJeffDiving
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AJeffCharacter::IsJeffDiving()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JeffCharacter", "IsJeffDiving");

	Params::JeffCharacter_IsJeffDiving Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hero_1047.JeffCharacter.IsJeffMovingForward
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AJeffCharacter::IsJeffMovingForward()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JeffCharacter", "IsJeffMovingForward");

	Params::JeffCharacter_IsJeffMovingForward Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hero_1047.JeffCharacter.JeffCharacterEnterDiving
// (Native, Event, Protected, BlueprintEvent)

void AJeffCharacter::JeffCharacterEnterDiving()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JeffCharacter", "JeffCharacterEnterDiving");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1047.JeffCharacter.JeffCharacterExitDiving
// (Native, Event, Protected, BlueprintEvent)

void AJeffCharacter::JeffCharacterExitDiving()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JeffCharacter", "JeffCharacterExitDiving");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1047.JeffCharacter.OnCharacterSwimAbilityStart
// (Final, Native, Public)

void AJeffCharacter::OnCharacterSwimAbilityStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JeffCharacter", "OnCharacterSwimAbilityStart");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1047.JeffCharacter.RecoverCollisionResponse
// (Final, Native, Protected, BlueprintCallable)

void AJeffCharacter::RecoverCollisionResponse()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JeffCharacter", "RecoverCollisionResponse");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1047.JeffCharacter.SafeMove
// (Final, Native, Protected, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                          Delta                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AJeffCharacter::SafeMove(const struct FVector& Delta)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JeffCharacter", "SafeMove");

	Params::JeffCharacter_SafeMove Parms{};

	Parms.Delta = std::move(Delta);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1047.JeffCharacter.SetIgnoreCollisionResponse
// (Final, Native, Protected, BlueprintCallable)

void AJeffCharacter::SetIgnoreCollisionResponse()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JeffCharacter", "SetIgnoreCollisionResponse");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1047.JeffCharacter.SetJeffState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EJeffState                              InState                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AJeffCharacter::SetJeffState(EJeffState InState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JeffCharacter", "SetJeffState");

	Params::JeffCharacter_SetJeffState Parms{};

	Parms.InState = InState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1047.JeffChildActor.JeffChildActorEnterDiving
// (Native, Event, Protected, BlueprintEvent)

void AJeffChildActor::JeffChildActorEnterDiving()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JeffChildActor", "JeffChildActorEnterDiving");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1047.JeffChildActor.JeffChildActorExitDiving
// (Native, Event, Protected, BlueprintEvent)

void AJeffChildActor::JeffChildActorExitDiving()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JeffChildActor", "JeffChildActorExitDiving");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1047.JeffChildActor.OnCharacterDeath
// (Final, Native, Public, HasOutParams)
// Parameters:
// class AActor*                           OutSourceAvatar                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           OutTargetAvatar                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FAttributeModifierHandle         ModifierParameterHandle                                (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AJeffChildActor::OnCharacterDeath(class AActor* OutSourceAvatar, class AActor* OutTargetAvatar, const struct FAttributeModifierHandle& ModifierParameterHandle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JeffChildActor", "OnCharacterDeath");

	Params::JeffChildActor_OnCharacterDeath Parms{};

	Parms.OutSourceAvatar = OutSourceAvatar;
	Parms.OutTargetAvatar = OutTargetAvatar;
	Parms.ModifierParameterHandle = std::move(ModifierParameterHandle);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1047.JeffChildActor.OnCharacterReborn
// (Final, Native, Public, HasOutParams)
// Parameters:
// class AActor*                           OutTargetActor                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FCharacterRebornParam            Param                                                  (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

void AJeffChildActor::OnCharacterReborn(class AActor* OutTargetActor, const struct FCharacterRebornParam& Param)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JeffChildActor", "OnCharacterReborn");

	Params::JeffChildActor_OnCharacterReborn Parms{};

	Parms.OutTargetActor = OutTargetActor;
	Parms.Param = std::move(Param);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1047.JeffChildActor.OnCharacterSwimEnd
// (Final, Native, Public)
// Parameters:
// class FName                             Tag                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AJeffChildActor::OnCharacterSwimEnd(class FName Tag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JeffChildActor", "OnCharacterSwimEnd");

	Params::JeffChildActor_OnCharacterSwimEnd Parms{};

	Parms.Tag = Tag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1047.JeffChildActor.OnJeffStateChange
// (Final, Native, Public)
// Parameters:
// EJeffState                              InState                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AJeffChildActor::OnJeffStateChange(EJeffState InState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JeffChildActor", "OnJeffStateChange");

	Params::JeffChildActor_OnJeffStateChange Parms{};

	Parms.InState = InState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1047.JeffChildActor.OnTagUpdate
// (Final, Native, Public, HasOutParams)
// Parameters:
// struct FGameplayTag                     Tag                                                    (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bTagExists                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AJeffChildActor::OnTagUpdate(const struct FGameplayTag& Tag, bool bTagExists)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JeffChildActor", "OnTagUpdate");

	Params::JeffChildActor_OnTagUpdate Parms{};

	Parms.Tag = std::move(Tag);
	Parms.bTagExists = bTagExists;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1047.JeffChildActor.SetDivingMarteialSectionHidden
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// bool                                    bDiving                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AJeffChildActor::SetDivingMarteialSectionHidden(bool bDiving)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JeffChildActor", "SetDivingMarteialSectionHidden");

	Params::JeffChildActor_SetDivingMarteialSectionHidden Parms{};

	Parms.bDiving = bDiving;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1047.Cue_Ability_Loop_10470101.DoShowHide
// (Final, Native, Public)

void ACue_Ability_Loop_10470101::DoShowHide()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Cue_Ability_Loop_10470101", "DoShowHide");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1047.Cue_Ability_Loop_10470101.OnTagUpdate
// (Final, Native, Public, HasOutParams)
// Parameters:
// struct FGameplayTag                     TagUpdated                                             (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bTagExists                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ACue_Ability_Loop_10470101::OnTagUpdate(const struct FGameplayTag& TagUpdated, bool bTagExists)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Cue_Ability_Loop_10470101", "OnTagUpdate");

	Params::Cue_Ability_Loop_10470101_OnTagUpdate Parms{};

	Parms.TagUpdated = std::move(TagUpdated);
	Parms.bTagExists = bTagExists;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1047.FlowSimluateSplineActor.BuildCurrentSplinePoints
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   DeltaTime                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFlowSimluateSplineActor::BuildCurrentSplinePoints(float DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FlowSimluateSplineActor", "BuildCurrentSplinePoints");

	Params::FlowSimluateSplineActor_BuildCurrentSplinePoints Parms{};

	Parms.DeltaTime = DeltaTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1047.JeffGroundMotionSubAnimInstance.EnterBToF
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FAnimUpdateContext               Context                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FAnimNodeReference               Node                                                   (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UJeffGroundMotionSubAnimInstance::EnterBToF(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JeffGroundMotionSubAnimInstance", "EnterBToF");

	Params::JeffGroundMotionSubAnimInstance_EnterBToF Parms{};

	Parms.Context = std::move(Context);
	Parms.Node = std::move(Node);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1047.JeffGroundMotionSubAnimInstance.RelevantBlackforwadTransitionNode
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FAnimUpdateContext               Context                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FAnimNodeReference               Node                                                   (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UJeffGroundMotionSubAnimInstance::RelevantBlackforwadTransitionNode(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JeffGroundMotionSubAnimInstance", "RelevantBlackforwadTransitionNode");

	Params::JeffGroundMotionSubAnimInstance_RelevantBlackforwadTransitionNode Parms{};

	Parms.Context = std::move(Context);
	Parms.Node = std::move(Node);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1047.JeffGroundMotionSubAnimInstance.RelevantCycleNode
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FAnimUpdateContext               Context                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FAnimNodeReference               Node                                                   (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UJeffGroundMotionSubAnimInstance::RelevantCycleNode(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JeffGroundMotionSubAnimInstance", "RelevantCycleNode");

	Params::JeffGroundMotionSubAnimInstance_RelevantCycleNode Parms{};

	Parms.Context = std::move(Context);
	Parms.Node = std::move(Node);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1047.JeffGroundMotionSubAnimInstance.RelevantJumpStartNode
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FAnimUpdateContext               Context                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FAnimNodeReference               Node                                                   (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UJeffGroundMotionSubAnimInstance::RelevantJumpStartNode(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JeffGroundMotionSubAnimInstance", "RelevantJumpStartNode");

	Params::JeffGroundMotionSubAnimInstance_RelevantJumpStartNode Parms{};

	Parms.Context = std::move(Context);
	Parms.Node = std::move(Node);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1047.JeffGroundMotionSubAnimInstance.RelevantLeftForwardNode
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FAnimUpdateContext               Context                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FAnimNodeReference               Node                                                   (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UJeffGroundMotionSubAnimInstance::RelevantLeftForwardNode(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JeffGroundMotionSubAnimInstance", "RelevantLeftForwardNode");

	Params::JeffGroundMotionSubAnimInstance_RelevantLeftForwardNode Parms{};

	Parms.Context = std::move(Context);
	Parms.Node = std::move(Node);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1047.JeffGroundMotionSubAnimInstance.RelevantRightForwardNode
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FAnimUpdateContext               Context                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FAnimNodeReference               Node                                                   (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UJeffGroundMotionSubAnimInstance::RelevantRightForwardNode(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JeffGroundMotionSubAnimInstance", "RelevantRightForwardNode");

	Params::JeffGroundMotionSubAnimInstance_RelevantRightForwardNode Parms{};

	Parms.Context = std::move(Context);
	Parms.Node = std::move(Node);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1047.JeffGroundMotionSubAnimInstance.RelevantStopNode
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FAnimUpdateContext               Context                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FAnimNodeReference               Node                                                   (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UJeffGroundMotionSubAnimInstance::RelevantStopNode(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JeffGroundMotionSubAnimInstance", "RelevantStopNode");

	Params::JeffGroundMotionSubAnimInstance_RelevantStopNode Parms{};

	Parms.Context = std::move(Context);
	Parms.Node = std::move(Node);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1047.JeffGroundMotionSubAnimInstance.UpdateAllBackforwardNode
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FAnimUpdateContext               Context                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FAnimNodeReference               Node                                                   (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UJeffGroundMotionSubAnimInstance::UpdateAllBackforwardNode(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JeffGroundMotionSubAnimInstance", "UpdateAllBackforwardNode");

	Params::JeffGroundMotionSubAnimInstance_UpdateAllBackforwardNode Parms{};

	Parms.Context = std::move(Context);
	Parms.Node = std::move(Node);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1047.JeffGroundMotionSubAnimInstance.UpdateBlackforwadTransitionNode
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FAnimUpdateContext               Context                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FAnimNodeReference               Node                                                   (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UJeffGroundMotionSubAnimInstance::UpdateBlackforwadTransitionNode(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JeffGroundMotionSubAnimInstance", "UpdateBlackforwadTransitionNode");

	Params::JeffGroundMotionSubAnimInstance_UpdateBlackforwadTransitionNode Parms{};

	Parms.Context = std::move(Context);
	Parms.Node = std::move(Node);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1047.JeffGroundMotionSubAnimInstance.UpdateForwardNode
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FAnimUpdateContext               Context                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FAnimNodeReference               Node                                                   (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UJeffGroundMotionSubAnimInstance::UpdateForwardNode(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JeffGroundMotionSubAnimInstance", "UpdateForwardNode");

	Params::JeffGroundMotionSubAnimInstance_UpdateForwardNode Parms{};

	Parms.Context = std::move(Context);
	Parms.Node = std::move(Node);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1047.JeffGroundMotionSubAnimInstance.UpdateJumpLandNode
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FAnimUpdateContext               Context                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FAnimNodeReference               Node                                                   (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UJeffGroundMotionSubAnimInstance::UpdateJumpLandNode(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JeffGroundMotionSubAnimInstance", "UpdateJumpLandNode");

	Params::JeffGroundMotionSubAnimInstance_UpdateJumpLandNode Parms{};

	Parms.Context = std::move(Context);
	Parms.Node = std::move(Node);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1047.JeffGroundMotionSubAnimInstance.UpdateJumpLoopNode
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FAnimUpdateContext               Context                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FAnimNodeReference               Node                                                   (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UJeffGroundMotionSubAnimInstance::UpdateJumpLoopNode(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JeffGroundMotionSubAnimInstance", "UpdateJumpLoopNode");

	Params::JeffGroundMotionSubAnimInstance_UpdateJumpLoopNode Parms{};

	Parms.Context = std::move(Context);
	Parms.Node = std::move(Node);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1047.JeffGroundMotionSubAnimInstance.UpdateJumpStartNode
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FAnimUpdateContext               Context                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FAnimNodeReference               Node                                                   (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UJeffGroundMotionSubAnimInstance::UpdateJumpStartNode(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JeffGroundMotionSubAnimInstance", "UpdateJumpStartNode");

	Params::JeffGroundMotionSubAnimInstance_UpdateJumpStartNode Parms{};

	Parms.Context = std::move(Context);
	Parms.Node = std::move(Node);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1047.JeffGroundMotionSubAnimInstance.UpdateLeftForwardNode
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FAnimUpdateContext               Context                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FAnimNodeReference               Node                                                   (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UJeffGroundMotionSubAnimInstance::UpdateLeftForwardNode(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JeffGroundMotionSubAnimInstance", "UpdateLeftForwardNode");

	Params::JeffGroundMotionSubAnimInstance_UpdateLeftForwardNode Parms{};

	Parms.Context = std::move(Context);
	Parms.Node = std::move(Node);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1047.JeffGroundMotionSubAnimInstance.UpdateRightForwardNode
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FAnimUpdateContext               Context                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FAnimNodeReference               Node                                                   (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UJeffGroundMotionSubAnimInstance::UpdateRightForwardNode(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JeffGroundMotionSubAnimInstance", "UpdateRightForwardNode");

	Params::JeffGroundMotionSubAnimInstance_UpdateRightForwardNode Parms{};

	Parms.Context = std::move(Context);
	Parms.Node = std::move(Node);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1047.JeffMovementComponent.CheckMoveForward
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                          MoveDelta                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FJeffMoveForwardCheckResult      ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FJeffMoveForwardCheckResult UJeffMovementComponent::CheckMoveForward(const struct FVector& MoveDelta)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JeffMovementComponent", "CheckMoveForward");

	Params::JeffMovementComponent_CheckMoveForward Parms{};

	Parms.MoveDelta = std::move(MoveDelta);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hero_1047.JeffMovementComponent.OnJeffGetOffWall
// (Final, Native, Private, HasOutParams)
// Parameters:
// struct FWallRunningEndInfo              InWallRunningEndInfo                                   (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UJeffMovementComponent::OnJeffGetOffWall(const struct FWallRunningEndInfo& InWallRunningEndInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JeffMovementComponent", "OnJeffGetOffWall");

	Params::JeffMovementComponent_OnJeffGetOffWall Parms{};

	Parms.InWallRunningEndInfo = std::move(InWallRunningEndInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}

}

