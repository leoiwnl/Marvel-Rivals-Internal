#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: DataBaseEvents

#include "Basic.hpp"

#include "DataBaseEvents_classes.hpp"
#include "DataBaseEvents_parameters.hpp"


namespace SDK
{

// PythonFunction DataBaseEvents.HitEvent.GetEventHeroIDsAll
// (Native, Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TSet<class FString>                     ReturnValue                                            (Parm, OutParm, ReturnParm)

TSet<class FString> UHitEvent::GetEventHeroIDsAll()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HitEvent", "GetEventHeroIDsAll");

	Params::HitEvent_GetEventHeroIDsAll Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// PythonFunction DataBaseEvents.HitEvent.GetEventHeroIDsAny
// (Native, Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FDependencyHeroIDSet>     ReturnValue                                            (Parm, OutParm, ReturnParm)

TArray<struct FDependencyHeroIDSet> UHitEvent::GetEventHeroIDsAny()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HitEvent", "GetEventHeroIDsAny");

	Params::HitEvent_GetEventHeroIDsAny Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// PythonFunction DataBaseEvents.HitRateEvent.GetEventHeroIDsAll
// (Native, Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TSet<class FString>                     ReturnValue                                            (Parm, OutParm, ReturnParm)

TSet<class FString> UHitRateEvent::GetEventHeroIDsAll()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HitRateEvent", "GetEventHeroIDsAll");

	Params::HitRateEvent_GetEventHeroIDsAll Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// PythonFunction DataBaseEvents.HitRateEvent.GetEventHeroIDsAny
// (Native, Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FDependencyHeroIDSet>     ReturnValue                                            (Parm, OutParm, ReturnParm)

TArray<struct FDependencyHeroIDSet> UHitRateEvent::GetEventHeroIDsAny()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HitRateEvent", "GetEventHeroIDsAny");

	Params::HitRateEvent_GetEventHeroIDsAny Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// PythonFunction DataBaseEvents.SpecialHitNumEvent.GetEventHeroIDsAll
// (Native, Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TSet<class FString>                     ReturnValue                                            (Parm, OutParm, ReturnParm)

TSet<class FString> USpecialHitNumEvent::GetEventHeroIDsAll()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SpecialHitNumEvent", "GetEventHeroIDsAll");

	Params::SpecialHitNumEvent_GetEventHeroIDsAll Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// PythonFunction DataBaseEvents.KillEvent.GetEventHeroIDsAll
// (Native, Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TSet<class FString>                     ReturnValue                                            (Parm, OutParm, ReturnParm)

TSet<class FString> UKillEvent::GetEventHeroIDsAll()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KillEvent", "GetEventHeroIDsAll");

	Params::KillEvent_GetEventHeroIDsAll Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// PythonFunction DataBaseEvents.KillEvent.GetEventHeroIDsAny
// (Native, Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FDependencyHeroIDSet>     ReturnValue                                            (Parm, OutParm, ReturnParm)

TArray<struct FDependencyHeroIDSet> UKillEvent::GetEventHeroIDsAny()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KillEvent", "GetEventHeroIDsAny");

	Params::KillEvent_GetEventHeroIDsAny Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// PythonFunction DataBaseEvents.AssistEvent.GetEventHeroIDsAll
// (Native, Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TSet<class FString>                     ReturnValue                                            (Parm, OutParm, ReturnParm)

TSet<class FString> UAssistEvent::GetEventHeroIDsAll()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AssistEvent", "GetEventHeroIDsAll");

	Params::AssistEvent_GetEventHeroIDsAll Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// PythonFunction DataBaseEvents.AssistEvent.GetEventHeroIDsAny
// (Native, Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FDependencyHeroIDSet>     ReturnValue                                            (Parm, OutParm, ReturnParm)

TArray<struct FDependencyHeroIDSet> UAssistEvent::GetEventHeroIDsAny()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AssistEvent", "GetEventHeroIDsAny");

	Params::AssistEvent_GetEventHeroIDsAny Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// PythonFunction DataBaseEvents.ReviveEvent.GetEventHeroIDsAny
// (Native, Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FDependencyHeroIDSet>     ReturnValue                                            (Parm, OutParm, ReturnParm)

TArray<struct FDependencyHeroIDSet> UReviveEvent::GetEventHeroIDsAny()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ReviveEvent", "GetEventHeroIDsAny");

	Params::ReviveEvent_GetEventHeroIDsAny Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// PythonFunction DataBaseEvents.OccupyCamp.GetEventMapIDsAll
// (Native, Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TSet<class FString>                     ReturnValue                                            (Parm, OutParm, ReturnParm)

TSet<class FString> UOccupyCamp::GetEventMapIDsAll()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OccupyCamp", "GetEventMapIDsAll");

	Params::OccupyCamp_GetEventMapIDsAll Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// PythonFunction DataBaseEvents.FinishEvent.GetEventMapIDsAll
// (Native, Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TSet<class FString>                     ReturnValue                                            (Parm, OutParm, ReturnParm)

TSet<class FString> UFinishEvent::GetEventMapIDsAll()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FinishEvent", "GetEventMapIDsAll");

	Params::FinishEvent_GetEventMapIDsAll Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}

}

