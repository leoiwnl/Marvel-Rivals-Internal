#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BTT_PyMoveToBase

#include "Basic.hpp"

#include "PyBTNodeBase_classes.hpp"
#include "AIModule_structs.hpp"


namespace SDK
{

// PythonClass BTT_PyMoveToBase.BTT_PyMoveToBase
// 0x0010 (0x00D0 - 0x00C0)
#pragma pack(push, 0x1)
class alignas(0x08) UBTT_PyMoveToBase : public UBTTask_PyBase
{
public:
	float                                         RandomRadius;                                      // 0x00C0(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         AcceptanceRadius;                                  // 0x00C4(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          MoveDirectly;                                      // 0x00C8(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          CaptainUseTeamFormation;                           // 0x00C9(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	void ReceiveExecuteAI(class AAIController* OwnerController, class APawn* ControlledPawn);
	void ReceiveAbortAI(class AAIController* OwnerController, class APawn* ControlledPawn);
	void ReceiveOnTaskFinished(class AAIController* OwnerController, class APawn* ControlledPawn, EBTNodeResult Result);
	class AActor* GetMoveTargetActor(class AAIController* OwnerController, class APawn* ControlledPawn);
	struct FVector GetMoveTargetLocation(class AAIController* OwnerController, class APawn* ControlledPawn);
	void OnMoveCompleted(const struct FAIRequestID& RequestID, EPathFollowingResult Result);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"BTT_PyMoveToBase">();
	}
	static class UBTT_PyMoveToBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBTT_PyMoveToBase>();
	}
};
#pragma pack(pop)

}

