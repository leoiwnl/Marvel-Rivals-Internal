#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PyModularRuleControlComponent

#include "Basic.hpp"

#include "PyModularRuleControlComponent_classes.hpp"
#include "PyModularRuleControlComponent_parameters.hpp"


namespace SDK
{

// PythonFunction PyModularRuleControlComponent.PyModularRuleControlComponent.OnMapLoaded
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void UPyModularRuleControlComponent::OnMapLoaded()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyModularRuleControlComponent", "OnMapLoaded");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyModularRuleControlComponent.PyModularRuleControlComponent.OnLevelStart
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void UPyModularRuleControlComponent::OnLevelStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyModularRuleControlComponent", "OnLevelStart");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyModularRuleControlComponent.PyModularRuleControlComponent.OnPrepareStartStart
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void UPyModularRuleControlComponent::OnPrepareStartStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyModularRuleControlComponent", "OnPrepareStartStart");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyModularRuleControlComponent.PyModularRuleControlComponent.OnFightStart
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void UPyModularRuleControlComponent::OnFightStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyModularRuleControlComponent", "OnFightStart");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyModularRuleControlComponent.PyModularRuleControlComponent.GoToNextRound
// (Native, Public, BlueprintCallable)

void UPyModularRuleControlComponent::GoToNextRound()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyModularRuleControlComponent", "GoToNextRound");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyModularRuleControlComponent.PyModularRuleControlComponent.OnModeTimeOut
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void UPyModularRuleControlComponent::OnModeTimeOut()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyModularRuleControlComponent", "OnModeTimeOut");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyModularRuleControlComponent.PyModularRuleControlComponent.SOvertimeSetstate
// (Native, Public, BlueprintCallable)
// Parameters:
// EOvertimeState                          State                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPyModularRuleControlComponent::SOvertimeSetstate(EOvertimeState State)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyModularRuleControlComponent", "SOvertimeSetstate");

	Params::PyModularRuleControlComponent_SOvertimeSetstate Parms{};

	Parms.State = State;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyModularRuleControlComponent.PyModularRuleControlComponent.SOvertimeEndEvent
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void UPyModularRuleControlComponent::SOvertimeEndEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyModularRuleControlComponent", "SOvertimeEndEvent");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyModularRuleControlComponent.PyModularRuleControlComponent.GetCampByName
// (Native, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                           CampName                                               (Parm, ZeroConstructor, HasGetValueTypeHash)
// class AActor*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash)

class AActor* UPyModularRuleControlComponent::GetCampByName(const class FString& CampName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyModularRuleControlComponent", "GetCampByName");

	Params::PyModularRuleControlComponent_GetCampByName Parms{};

	Parms.CampName = std::move(CampName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// PythonFunction PyModularRuleControlComponent.PyModularRuleControlComponent.RuleEnd
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UPyModularRuleComponent*          RuleComponent                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// EBattleSide                             WinnerSide                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPyModularRuleControlComponent::RuleEnd(class UPyModularRuleComponent* RuleComponent, EBattleSide WinnerSide)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyModularRuleControlComponent", "RuleEnd");

	Params::PyModularRuleControlComponent_RuleEnd Parms{};

	Parms.RuleComponent = RuleComponent;
	Parms.WinnerSide = WinnerSide;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyModularRuleControlComponent.PyModularRuleControlComponent.UILoaded
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void UPyModularRuleControlComponent::UILoaded()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyModularRuleControlComponent", "UILoaded");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyModularRuleControlComponent.PyModularRuleControlComponent.GameOver
// (Native, Public, BlueprintCallable)
// Parameters:
// EBattleSide                             WinnerSide                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPyModularRuleControlComponent::GameOver(EBattleSide WinnerSide)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyModularRuleControlComponent", "GameOver");

	Params::PyModularRuleControlComponent_GameOver Parms{};

	Parms.WinnerSide = WinnerSide;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyModularRuleControlComponent.PyModularRuleControlComponent.RuleActivating
// (Native, Public, BlueprintCallable)
// Parameters:
// class UPyModularRuleComponent*          RuleComponent                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UPyModularRuleControlComponent::RuleActivating(class UPyModularRuleComponent* RuleComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyModularRuleControlComponent", "RuleActivating");

	Params::PyModularRuleControlComponent_RuleActivating Parms{};

	Parms.RuleComponent = RuleComponent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}

}

