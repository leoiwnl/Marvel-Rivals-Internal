#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PyTrainRuleComponent

#include "Basic.hpp"

#include "PyTrainRuleComponent_classes.hpp"
#include "PyTrainRuleComponent_parameters.hpp"


namespace SDK
{

// PythonFunction PyTrainRuleComponent.PyTrainRuleComponent.NotifyHolderChange
// (Net, NetReliable, Native, NetMulticast, Public, BlueprintCallable)
// Parameters:
// int32                                   holder_uid                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPyTrainRuleComponent::NotifyHolderChange(int32 holder_uid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyTrainRuleComponent", "NotifyHolderChange");

	Params::PyTrainRuleComponent_NotifyHolderChange Parms{};

	Parms.holder_uid = holder_uid;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyTrainRuleComponent.PyTrainRuleComponent.OnRep_HolderUID
// (Native, Public, BlueprintCallable)

void UPyTrainRuleComponent::OnRep_HolderUID()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyTrainRuleComponent", "OnRep_HolderUID");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyTrainRuleComponent.PyTrainRuleComponent.CustomSettingChanged
// (Net, NetReliable, Native, NetMulticast, Public, BlueprintCallable)
// Parameters:
// ETrainCustomOp                          Op                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    change_to                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPyTrainRuleComponent::CustomSettingChanged(ETrainCustomOp Op, bool change_to)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyTrainRuleComponent", "CustomSettingChanged");

	Params::PyTrainRuleComponent_CustomSettingChanged Parms{};

	Parms.Op = Op;
	Parms.change_to = change_to;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyTrainRuleComponent.PyTrainRuleComponent.ChangePlayerStateBattleSide
// (Net, NetReliable, Native, NetMulticast, Public, BlueprintCallable)
// Parameters:
// class APlayerState*                     PS                                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// EBattleSide                             battle_side                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPyTrainRuleComponent::ChangePlayerStateBattleSide(class APlayerState* PS, EBattleSide battle_side)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyTrainRuleComponent", "ChangePlayerStateBattleSide");

	Params::PyTrainRuleComponent_ChangePlayerStateBattleSide Parms{};

	Parms.PS = PS;
	Parms.battle_side = battle_side;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyTrainRuleComponent.PyTrainRuleComponent.OnRep_OpenFriendHarm
// (Native, Public, BlueprintCallable)

void UPyTrainRuleComponent::OnRep_OpenFriendHarm()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyTrainRuleComponent", "OnRep_OpenFriendHarm");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyTrainRuleComponent.PyTrainRuleComponent.OnRep_CloseSkillCDList
// (Native, Public, BlueprintCallable)

void UPyTrainRuleComponent::OnRep_CloseSkillCDList()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyTrainRuleComponent", "OnRep_CloseSkillCDList");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}

}

