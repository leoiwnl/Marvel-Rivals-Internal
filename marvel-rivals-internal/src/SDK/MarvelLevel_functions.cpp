#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MarvelLevel

#include "Basic.hpp"

#include "MarvelLevel_classes.hpp"
#include "MarvelLevel_parameters.hpp"


namespace SDK
{

// Function MarvelLevel.EnvironmentGlobalActor.ChangeQuality
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    IsHighQuality                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEnvironmentGlobalActor::ChangeQuality(bool IsHighQuality)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EnvironmentGlobalActor", "ChangeQuality");

	Params::EnvironmentGlobalActor_ChangeQuality Parms{};

	Parms.IsHighQuality = IsHighQuality;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function MarvelLevel.FillColorBox.GeneratePaintSceneRebuildData
// (Event, Public, BlueprintEvent)
// Parameters:
// struct FPaintSceneReconnectRebuildData  ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FPaintSceneReconnectRebuildData AFillColorBox::GeneratePaintSceneRebuildData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FillColorBox", "GeneratePaintSceneRebuildData");

	Params::FillColorBox_GeneratePaintSceneRebuildData Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function MarvelLevel.FillColorBox.GetItemsState
// (Final, Native, Protected)
// Parameters:
// int32                                   InArrayLength                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<int32>                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<int32> AFillColorBox::GetItemsState(const int32 InArrayLength)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FillColorBox", "GetItemsState");

	Params::FillColorBox_GetItemsState Parms{};

	Parms.InArrayLength = InArrayLength;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function MarvelLevel.FillColorBox.InitializeItems
// (Final, Native, Protected)
// Parameters:
// int32                                   InArrayLength                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFillColorBox::InitializeItems(const int32 InArrayLength)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FillColorBox", "InitializeItems");

	Params::FillColorBox_InitializeItems Parms{};

	Parms.InArrayLength = InArrayLength;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function MarvelLevel.FillColorBox.OnRep_FillColorStateList
// (Final, Native, Public)

void AFillColorBox::OnRep_FillColorStateList()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FillColorBox", "OnRep_FillColorStateList");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function MarvelLevel.FillColorBox.ReceiveDataForPy
// (Event, Public, BlueprintEvent)

void AFillColorBox::ReceiveDataForPy()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FillColorBox", "ReceiveDataForPy");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MarvelLevel.FillColorBox.RewindForReplayForPy
// (Event, Public, BlueprintEvent)

void AFillColorBox::RewindForReplayForPy()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FillColorBox", "RewindForReplayForPy");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MarvelLevel.FillColorBox.UpdateItemState
// (Final, Native, Protected)
// Parameters:
// TArray<int32>                           ArrayIndexList                                         (ConstParm, Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// int32                                   NewState                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFillColorBox::UpdateItemState(const TArray<int32>& ArrayIndexList, const int32 NewState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FillColorBox", "UpdateItemState");

	Params::FillColorBox_UpdateItemState Parms{};

	Parms.ArrayIndexList = std::move(ArrayIndexList);
	Parms.NewState = NewState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function MarvelLevel.FillColorPoint.FillColor
// (Event, Public, BlueprintEvent)
// Parameters:
// EBattleSide                             BattleSide                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFillColorPoint::FillColor(EBattleSide BattleSide)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FillColorPoint", "FillColor");

	Params::FillColorPoint_FillColor Parms{};

	Parms.BattleSide = BattleSide;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MarvelLevel.LevelAudioActor.PyGetDefaultAkComponent
// (Event, Public, BlueprintEvent)
// Parameters:
// class UAkComponent*                     ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UAkComponent* ALevelAudioActor::PyGetDefaultAkComponent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LevelAudioActor", "PyGetDefaultAkComponent");

	Params::LevelAudioActor_PyGetDefaultAkComponent Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function MarvelLevel.LevelBlockActor.UpdateMaskFilter
// (Final, Native, Public, BlueprintCallable)

void ALevelBlockActor::UpdateMaskFilter()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LevelBlockActor", "UpdateMaskFilter");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function MarvelLevel.LevelCustomEventSubsystem.GetLevelCustomEventSubsystem
// (Final, Native, Static, Public)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ULevelCustomEventSubsystem*       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ULevelCustomEventSubsystem* ULevelCustomEventSubsystem::GetLevelCustomEventSubsystem(const class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LevelCustomEventSubsystem", "GetLevelCustomEventSubsystem");

	Params::LevelCustomEventSubsystem_GetLevelCustomEventSubsystem Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function MarvelLevel.LevelFunctionLibrary.DestroyWorldNetDrive
// (Final, Native, Static, Public)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULevelFunctionLibrary::DestroyWorldNetDrive(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LevelFunctionLibrary", "DestroyWorldNetDrive");

	Params::LevelFunctionLibrary_DestroyWorldNetDrive Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function MarvelLevel.LevelFunctionLibrary.DestroyWorldNetDriver
// (Final, Native, Static, Public)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULevelFunctionLibrary::DestroyWorldNetDriver(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LevelFunctionLibrary", "DestroyWorldNetDriver");

	Params::LevelFunctionLibrary_DestroyWorldNetDriver Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function MarvelLevel.LevelFunctionLibrary.FindDeathCollectionIndex
// (Final, Native, Static, Public)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 ULevelFunctionLibrary::FindDeathCollectionIndex(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LevelFunctionLibrary", "FindDeathCollectionIndex");

	Params::LevelFunctionLibrary_FindDeathCollectionIndex Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function MarvelLevel.LevelFunctionLibrary.GetAllActorsWithTagInWorld
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FName>                     Tags                                                   (ConstParm, Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// TMap<class FName, struct FActorsWithSameOneTag>OutActors                                              (Parm, OutParm, NativeAccessSpecifierPublic)

void ULevelFunctionLibrary::GetAllActorsWithTagInWorld(class UObject* WorldContextObject, const TArray<class FName>& Tags, TMap<class FName, struct FActorsWithSameOneTag>* OutActors)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LevelFunctionLibrary", "GetAllActorsWithTagInWorld");

	Params::LevelFunctionLibrary_GetAllActorsWithTagInWorld Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Tags = std::move(Tags);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutActors != nullptr)
		*OutActors = std::move(Parms.OutActors);
}


// Function MarvelLevel.LevelFunctionLibrary.GetSequenceLength
// (Final, Native, Static, Public)
// Parameters:
// class ULevelSequence*                   LevelSequence                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float ULevelFunctionLibrary::GetSequenceLength(class ULevelSequence* LevelSequence)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LevelFunctionLibrary", "GetSequenceLength");

	Params::LevelFunctionLibrary_GetSequenceLength Parms{};

	Parms.LevelSequence = LevelSequence;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function MarvelLevel.LevelFunctionLibrary.GetSequencePlayerCurrentTime
// (Final, Native, Static, Public)
// Parameters:
// class ULevelSequencePlayer*             LevelSequencePlayer                                    (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float ULevelFunctionLibrary::GetSequencePlayerCurrentTime(class ULevelSequencePlayer* LevelSequencePlayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LevelFunctionLibrary", "GetSequencePlayerCurrentTime");

	Params::LevelFunctionLibrary_GetSequencePlayerCurrentTime Parms{};

	Parms.LevelSequencePlayer = LevelSequencePlayer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function MarvelLevel.LevelFunctionLibrary.LevelSetClientTravel
// (Final, Native, Static, Public)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           NextURLString                                          (ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULevelFunctionLibrary::LevelSetClientTravel(class UObject* WorldContextObject, const class FString& NextURLString)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LevelFunctionLibrary", "LevelSetClientTravel");

	Params::LevelFunctionLibrary_LevelSetClientTravel Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.NextURLString = std::move(NextURLString);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function MarvelLevel.LevelFunctionLibrary.MeshData
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UStaticMeshComponent*             StaticMeshComponent                                    (ConstParm, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FVector>                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FVector> ULevelFunctionLibrary::MeshData(const class UStaticMeshComponent* StaticMeshComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LevelFunctionLibrary", "MeshData");

	Params::LevelFunctionLibrary_MeshData Parms{};

	Parms.StaticMeshComponent = StaticMeshComponent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function MarvelLevel.LevelFunctionLibrary.ModifyLevelFoliageMaterial
// (Final, Native, Static, Public)

void ULevelFunctionLibrary::ModifyLevelFoliageMaterial()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LevelFunctionLibrary", "ModifyLevelFoliageMaterial");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function MarvelLevel.LevelFunctionLibrary.SequencePlayerJumpTo
// (Final, Native, Static, Public)
// Parameters:
// class ULevelSequencePlayer*             LevelSequencePlayer                                    (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TargetTime                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULevelFunctionLibrary::SequencePlayerJumpTo(class ULevelSequencePlayer* LevelSequencePlayer, float TargetTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LevelFunctionLibrary", "SequencePlayerJumpTo");

	Params::LevelFunctionLibrary_SequencePlayerJumpTo Parms{};

	Parms.LevelSequencePlayer = LevelSequencePlayer;
	Parms.TargetTime = TargetTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function MarvelLevel.MarvelLevelSummonedBase.SetTriggerRepCheck
// (Final, Native, Public, BlueprintCallable)

void AMarvelLevelSummonedBase::SetTriggerRepCheck()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MarvelLevelSummonedBase", "SetTriggerRepCheck");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function MarvelLevel.LevelGravityElevator.GetPathVelocity
// (Native, Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// struct FVector                          InVelocity                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*              UpdatedComponent                                       (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          InGravity                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   DeltaTime                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EMovementMode                           MovementMode                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector ALevelGravityElevator::GetPathVelocity(const struct FVector& InVelocity, class UPrimitiveComponent* UpdatedComponent, const struct FVector& InGravity, float DeltaTime, EMovementMode MovementMode) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LevelGravityElevator", "GetPathVelocity");

	Params::LevelGravityElevator_GetPathVelocity Parms{};

	Parms.InVelocity = std::move(InVelocity);
	Parms.UpdatedComponent = UpdatedComponent;
	Parms.InGravity = std::move(InGravity);
	Parms.DeltaTime = DeltaTime;
	Parms.MovementMode = MovementMode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function MarvelLevel.LevelGravityZoneEffectTemplate.IsDispelledByAbility
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FGameplayTagContainer            AbilityTags                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ULevelGravityZoneEffectTemplate::IsDispelledByAbility(const struct FGameplayTagContainer& AbilityTags)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LevelGravityZoneEffectTemplate", "IsDispelledByAbility");

	Params::LevelGravityZoneEffectTemplate_IsDispelledByAbility Parms{};

	Parms.AbilityTags = std::move(AbilityTags);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function MarvelLevel.LevelLightControlActor.HideLights
// (Final, Native, Public, BlueprintCallable)

void ALevelLightControlActor::HideLights()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LevelLightControlActor", "HideLights");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function MarvelLevel.LevelLightControlActor.Initialize
// (Final, Native, Public, BlueprintCallable)

void ALevelLightControlActor::Initialize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LevelLightControlActor", "Initialize");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function MarvelLevel.LevelLightControlActor.StartChangeLights
// (Final, Native, Public, BlueprintCallable)

void ALevelLightControlActor::StartChangeLights()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LevelLightControlActor", "StartChangeLights");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function MarvelLevel.LevelLightControlActor.StopChangeLights
// (Final, Native, Public, BlueprintCallable)

void ALevelLightControlActor::StopChangeLights()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LevelLightControlActor", "StopChangeLights");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function MarvelLevel.LevelPackageRulesFuncLibrary.UpdatePackageDataTables
// (Final, Native, Static, Public, BlueprintCallable)

void ULevelPackageRulesFuncLibrary::UpdatePackageDataTables()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LevelPackageRulesFuncLibrary", "UpdatePackageDataTables");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function MarvelLevel.LevelStaticMeshActor.MeshData
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UStaticMeshComponent*             StaticMeshComponent                                    (ConstParm, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FVector>                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FVector> ALevelStaticMeshActor::MeshData(const class UStaticMeshComponent* StaticMeshComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LevelStaticMeshActor", "MeshData");

	Params::LevelStaticMeshActor_MeshData Parms{};

	Parms.StaticMeshComponent = StaticMeshComponent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function MarvelLevel.LevelTransportPipe.GetKnockUp
// (Native, Event, Public, HasOutParams, BlueprintEvent, Const)
// Parameters:
// struct FPhysicForceMove                 OutPhysicKnockUp                                       (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ALevelTransportPipe::GetKnockUp(struct FPhysicForceMove* OutPhysicKnockUp) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LevelTransportPipe", "GetKnockUp");

	Params::LevelTransportPipe_GetKnockUp Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutPhysicKnockUp != nullptr)
		*OutPhysicKnockUp = std::move(Parms.OutPhysicKnockUp);

	return Parms.ReturnValue;
}


// Function MarvelLevel.LevelTransportPipe.GetPathVelocity
// (Native, Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// struct FVector                          InVelocity                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*              UpdatedComponent                                       (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          InGravity                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   DeltaTime                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EMovementMode                           MovementMode                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector ALevelTransportPipe::GetPathVelocity(const struct FVector& InVelocity, class UPrimitiveComponent* UpdatedComponent, const struct FVector& InGravity, float DeltaTime, EMovementMode MovementMode) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LevelTransportPipe", "GetPathVelocity");

	Params::LevelTransportPipe_GetPathVelocity Parms{};

	Parms.InVelocity = std::move(InVelocity);
	Parms.UpdatedComponent = UpdatedComponent;
	Parms.InGravity = std::move(InGravity);
	Parms.DeltaTime = DeltaTime;
	Parms.MovementMode = MovementMode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function MarvelLevel.MarvelAudioCondition.PyPostEditChange
// (Native, Event, Public, BlueprintEvent)

void UMarvelAudioCondition::PyPostEditChange()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MarvelAudioCondition", "PyPostEditChange");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function MarvelLevel.MarvelLevelAnimActionComponent.OnApplyHit
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// class AActor*                           InSourceAvatar                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMarvelLevelAnimActionComponent::OnApplyHit(class AActor* InSourceAvatar)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MarvelLevelAnimActionComponent", "OnApplyHit");

	Params::MarvelLevelAnimActionComponent_OnApplyHit Parms{};

	Parms.InSourceAvatar = InSourceAvatar;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function MarvelLevel.MarvelLevelAnimActionComponent.OnLinkClientGCBreak
// (Final, Native, Public)

void UMarvelLevelAnimActionComponent::OnLinkClientGCBreak()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MarvelLevelAnimActionComponent", "OnLinkClientGCBreak");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function MarvelLevel.MarvelLevelAnimActionComponent.OnLinkGCBreak
// (Final, Native, Public, HasOutParams)
// Parameters:
// struct FChaosBreakEvent                 BreakEvent                                             (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void UMarvelLevelAnimActionComponent::OnLinkGCBreak(const struct FChaosBreakEvent& BreakEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MarvelLevelAnimActionComponent", "OnLinkGCBreak");

	Params::MarvelLevelAnimActionComponent_OnLinkGCBreak Parms{};

	Parms.BreakEvent = std::move(BreakEvent);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function MarvelLevel.MarvelLevelAnimActionComponent.OnLinkGCIgnoreBreak
// (Final, Native, Public, HasOutParams)
// Parameters:
// int32                                   Index_0                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ServerTime                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMarvelLevelAnimActionComponent::OnLinkGCIgnoreBreak(const int32& Index_0, const float& ServerTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MarvelLevelAnimActionComponent", "OnLinkGCIgnoreBreak");

	Params::MarvelLevelAnimActionComponent_OnLinkGCIgnoreBreak Parms{};

	Parms.Index_0 = Index_0;
	Parms.ServerTime = ServerTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function MarvelLevel.MarvelLevelAnimActionComponent.OnMovementBaseChanged
// (Final, Native, Public, HasOutParams)
// Parameters:
// class UPrimitiveComponent*              NewBase                                                (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult                       FloorHitResult                                         (Parm, OutParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

void UMarvelLevelAnimActionComponent::OnMovementBaseChanged(class UPrimitiveComponent* NewBase, struct FHitResult* FloorHitResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MarvelLevelAnimActionComponent", "OnMovementBaseChanged");

	Params::MarvelLevelAnimActionComponent_OnMovementBaseChanged Parms{};

	Parms.NewBase = NewBase;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (FloorHitResult != nullptr)
		*FloorHitResult = std::move(Parms.FloorHitResult);
}


// Function MarvelLevel.MarvelLevelAnimActionComponent.OnRep_ReplicatedActionIndex
// (Final, Native, Public)

void UMarvelLevelAnimActionComponent::OnRep_ReplicatedActionIndex()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MarvelLevelAnimActionComponent", "OnRep_ReplicatedActionIndex");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function MarvelLevel.MarvelLevelAnimActionComponent.OnServerSimulateMontageSectionEnded
// (Final, Native, Public)

void UMarvelLevelAnimActionComponent::OnServerSimulateMontageSectionEnded()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MarvelLevelAnimActionComponent", "OnServerSimulateMontageSectionEnded");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function MarvelLevel.MarvelLevelAnimActionComponent.ResetForLevelSwitch
// (Net, NetReliable, Native, Event, NetMulticast, Public)

void UMarvelLevelAnimActionComponent::ResetForLevelSwitch()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MarvelLevelAnimActionComponent", "ResetForLevelSwitch");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function MarvelLevel.MarvelLevelAnimActor.OnAllRequiredMapLoaded
// (Final, Native, Protected)

void AMarvelLevelAnimActor::OnAllRequiredMapLoaded()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MarvelLevelAnimActor", "OnAllRequiredMapLoaded");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function MarvelLevel.MarvelRuleCondition.PyPostEditChange
// (Native, Event, Public, BlueprintEvent)

void UMarvelRuleCondition::PyPostEditChange()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MarvelRuleCondition", "PyPostEditChange");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function MarvelLevel.MarvelRuleConfig.PyPostEditChange
// (Native, Event, Public, BlueprintEvent)

void UMarvelRuleConfig::PyPostEditChange()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MarvelRuleConfig", "PyPostEditChange");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function MarvelLevel.PlayerStateTrainComponent.BindMainAttack
// (Final, Native, Public)

void UPlayerStateTrainComponent::BindMainAttack()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerStateTrainComponent", "BindMainAttack");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function MarvelLevel.PlayerStateTrainComponent.ClearMainAttackData
// (Final, Native, Public)

void UPlayerStateTrainComponent::ClearMainAttackData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerStateTrainComponent", "ClearMainAttackData");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function MarvelLevel.PlayerStateTrainComponent.OnActorDeath
// (Final, Native, Public, HasOutParams)
// Parameters:
// class AActor*                           Source                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           Target                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FAttributeModifierHandle         ModifierParameterHandle                                (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGlobalEventExtraData            ExtraData                                              (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UPlayerStateTrainComponent::OnActorDeath(class AActor* Source, class AActor* Target, const struct FAttributeModifierHandle& ModifierParameterHandle, const struct FGlobalEventExtraData& ExtraData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerStateTrainComponent", "OnActorDeath");

	Params::PlayerStateTrainComponent_OnActorDeath Parms{};

	Parms.Source = Source;
	Parms.Target = Target;
	Parms.ModifierParameterHandle = std::move(ModifierParameterHandle);
	Parms.ExtraData = std::move(ExtraData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function MarvelLevel.PlayerStateTrainComponent.OnActorTakeDamage
// (Final, Native, Public, HasOutParams)
// Parameters:
// class AActor*                           InInstigator                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           InTarget                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FAttributeModifierHandle         ModifierParameterHandle                                (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGlobalEventExtraData            ExtraData                                              (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UPlayerStateTrainComponent::OnActorTakeDamage(class AActor* InInstigator, class AActor* InTarget, const struct FAttributeModifierHandle& ModifierParameterHandle, const struct FGlobalEventExtraData& ExtraData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerStateTrainComponent", "OnActorTakeDamage");

	Params::PlayerStateTrainComponent_OnActorTakeDamage Parms{};

	Parms.InInstigator = InInstigator;
	Parms.InTarget = InTarget;
	Parms.ModifierParameterHandle = std::move(ModifierParameterHandle);
	Parms.ExtraData = std::move(ExtraData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function MarvelLevel.PlayerStateTrainComponent.OnRep_MainAttackHit
// (Final, Native, Public)

void UPlayerStateTrainComponent::OnRep_MainAttackHit()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerStateTrainComponent", "OnRep_MainAttackHit");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function MarvelLevel.PlayerStateTrainComponent.OnRep_MainAttackMiss
// (Final, Native, Public)

void UPlayerStateTrainComponent::OnRep_MainAttackMiss()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerStateTrainComponent", "OnRep_MainAttackMiss");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function MarvelLevel.PlayerStateTrainComponent.OnTargetActorRecycleAgentTask
// (Final, Native, Public, HasOutParams)
// Parameters:
// class AActor*                           Source                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UMarvelGameplayAbility*           SourceAbility                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FMarvelTargetActorGenerateInfo   GenerateInfo                                           (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FEndAgentTaskInfo                EndAgentTaskInfo                                       (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UPlayerStateTrainComponent::OnTargetActorRecycleAgentTask(class AActor* Source, class UMarvelGameplayAbility* SourceAbility, const struct FMarvelTargetActorGenerateInfo& GenerateInfo, const struct FEndAgentTaskInfo& EndAgentTaskInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerStateTrainComponent", "OnTargetActorRecycleAgentTask");

	Params::PlayerStateTrainComponent_OnTargetActorRecycleAgentTask Parms{};

	Parms.Source = Source;
	Parms.SourceAbility = SourceAbility;
	Parms.GenerateInfo = std::move(GenerateInfo);
	Parms.EndAgentTaskInfo = std::move(EndAgentTaskInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function MarvelLevel.PlayerStateTrainComponent.OnWeaponAmmoUse
// (Final, Native, Public, HasOutParams)
// Parameters:
// class AActor*                           Source                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           Target                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   AbilityID                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bHit                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsCritHit                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGlobalEventExtraData            ExtraData                                              (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UPlayerStateTrainComponent::OnWeaponAmmoUse(class AActor* Source, class AActor* Target, int32 AbilityID, bool bHit, bool bIsCritHit, const struct FGlobalEventExtraData& ExtraData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerStateTrainComponent", "OnWeaponAmmoUse");

	Params::PlayerStateTrainComponent_OnWeaponAmmoUse Parms{};

	Parms.Source = Source;
	Parms.Target = Target;
	Parms.AbilityID = AbilityID;
	Parms.bHit = bHit;
	Parms.bIsCritHit = bIsCritHit;
	Parms.ExtraData = std::move(ExtraData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function MarvelLevel.PlayerStateTrainComponent.UnbindMainAttack
// (Final, Native, Public)

void UPlayerStateTrainComponent::UnbindMainAttack()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerStateTrainComponent", "UnbindMainAttack");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function MarvelLevel.SpringFestivalStatComponent.AddPlayerStat
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// int32                                   UID                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   StatIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USpringFestivalStatComponent::AddPlayerStat(int32 UID, int32 StatIndex, int32 Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SpringFestivalStatComponent", "AddPlayerStat");

	Params::SpringFestivalStatComponent_AddPlayerStat Parms{};

	Parms.UID = UID;
	Parms.StatIndex = StatIndex;
	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function MarvelLevel.SpringFestivalStatComponent.OnRep_PlayerStats
// (Native, Event, Protected, BlueprintEvent)

void USpringFestivalStatComponent::OnRep_PlayerStats()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SpringFestivalStatComponent", "OnRep_PlayerStats");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function MarvelLevel.SpringFestivalStatComponent.RegisterPlayerStat
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// int32                                   UID                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   StatCount                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USpringFestivalStatComponent::RegisterPlayerStat(int32 UID, int32 StatCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SpringFestivalStatComponent", "RegisterPlayerStat");

	Params::SpringFestivalStatComponent_RegisterPlayerStat Parms{};

	Parms.UID = UID;
	Parms.StatCount = StatCount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function MarvelLevel.SpringFestivalStatComponent.SetPlayerStat
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// int32                                   UID                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   StatIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USpringFestivalStatComponent::SetPlayerStat(int32 UID, int32 StatIndex, int32 Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SpringFestivalStatComponent", "SetPlayerStat");

	Params::SpringFestivalStatComponent_SetPlayerStat Parms{};

	Parms.UID = UID;
	Parms.StatIndex = StatIndex;
	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function MarvelLevel.SpringFestivalStatComponent.UnregisterPlayerStat
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// int32                                   UID                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USpringFestivalStatComponent::UnregisterPlayerStat(int32 UID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SpringFestivalStatComponent", "UnregisterPlayerStat");

	Params::SpringFestivalStatComponent_UnregisterPlayerStat Parms{};

	Parms.UID = UID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function MarvelLevel.Summoned_20020001.K2_SetReplicatingMovement
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    NewReplicate                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASummoned_20020001::K2_SetReplicatingMovement(bool NewReplicate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Summoned_20020001", "K2_SetReplicatingMovement");

	Params::Summoned_20020001_K2_SetReplicatingMovement Parms{};

	Parms.NewReplicate = NewReplicate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function MarvelLevel.TurnOnLevelTimerNode.TurnOnLevelTimer
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UActorComponent*                  WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           Name_0                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   DelayTime                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bLooping                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   LoopTime                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTurnOnLevelTimerNode*            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTurnOnLevelTimerNode* UTurnOnLevelTimerNode::TurnOnLevelTimer(const class UActorComponent* WorldContextObject, const class FString& Name_0, float DelayTime, bool bLooping, float LoopTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TurnOnLevelTimerNode", "TurnOnLevelTimer");

	Params::TurnOnLevelTimerNode_TurnOnLevelTimer Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Name_0 = std::move(Name_0);
	Parms.DelayTime = DelayTime;
	Parms.bLooping = bLooping;
	Parms.LoopTime = LoopTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function MarvelLevel.TurnOnLevelTimerNode.DelayFinish
// (Final, Native, Private)

void UTurnOnLevelTimerNode::DelayFinish()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TurnOnLevelTimerNode", "DelayFinish");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function MarvelLevel.TurnOnLevelTimerNode.OnGSEndPlay
// (Final, Native, Private)
// Parameters:
// class AActor*                           InSource                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EEndPlayReason                          Reason                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTurnOnLevelTimerNode::OnGSEndPlay(class AActor* InSource, EEndPlayReason Reason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TurnOnLevelTimerNode", "OnGSEndPlay");

	Params::TurnOnLevelTimerNode_OnGSEndPlay Parms{};

	Parms.InSource = InSource;
	Parms.Reason = Reason;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function MarvelLevel.TurnOnLevelTimerNode.RepeatLoopFinish
// (Final, Native, Private)

void UTurnOnLevelTimerNode::RepeatLoopFinish()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TurnOnLevelTimerNode", "RepeatLoopFinish");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}

}

