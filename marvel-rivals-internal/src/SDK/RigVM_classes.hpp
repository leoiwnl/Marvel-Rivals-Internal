#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: RigVM

#include "Basic.hpp"

#include "CoreUObject_classes.hpp"
#include "RigVM_structs.hpp"
#include "Engine_classes.hpp"
#include "DeveloperSettings_classes.hpp"


namespace SDK
{

// Class RigVM.RigVMGraphFunctionHost
// 0x0000 (0x0030 - 0x0030)
class IRigVMGraphFunctionHost final : public IInterface
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RigVMGraphFunctionHost">();
	}
	static class IRigVMGraphFunctionHost* GetDefaultObj()
	{
		return GetDefaultObjImpl<IRigVMGraphFunctionHost>();
	}
};

// Class RigVM.RigVMBlueprintGeneratedClass
// 0x0028 (0x0418 - 0x03F0)
class URigVMBlueprintGeneratedClass : public UBlueprintGeneratedClass
{
public:
	uint8                                         Pad_3F0[0x8];                                      // 0x03F0(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRigVMGraphFunctionStore               GraphFunctionStore;                                // 0x03F8(0x0020)(NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RigVMBlueprintGeneratedClass">();
	}
	static class URigVMBlueprintGeneratedClass* GetDefaultObj()
	{
		return GetDefaultObjImpl<URigVMBlueprintGeneratedClass>();
	}
};

// Class RigVM.RigVM
// 0x0280 (0x02B0 - 0x0030)
class URigVM : public UObject
{
public:
	class URigVMMemoryStorage*                    WorkMemoryStorageObject;                           // 0x0030(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class URigVMMemoryStorage*                    LiteralMemoryStorageObject;                        // 0x0038(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class URigVMMemoryStorage*                    DebugMemoryStorageObject;                          // 0x0040(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_48[0x20];                                      // 0x0048(0x0020)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRigVMByteCode                         ByteCodeStorage;                                   // 0x0068(0x00A0)(HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_108[0x8];                                      // 0x0108(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRigVMInstructionArray                 Instructions;                                      // 0x0110(0x0010)(Transient, NativeAccessSpecifierPrivate)
	uint8                                         Pad_120[0x8];                                      // 0x0120(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           FunctionNamesStorage;                              // 0x0128(0x0010)(ZeroConstructor, NativeAccessSpecifierPrivate)
	uint8                                         Pad_138[0x38];                                     // 0x0138(0x0038)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FRigVMParameter>                Parameters;                                        // 0x0170(0x0010)(ZeroConstructor, NativeAccessSpecifierPrivate)
	TMap<class FName, int32>                      ParametersNameMap;                                 // 0x0180(0x0050)(NativeAccessSpecifierPrivate)
	uint8                                         Pad_1D0[0x98];                                     // 0x01D0(0x0098)(Fixing Size After Last Property [ Dumper-7 ])
	class URigVM*                                 DeferredVMToCopy;                                  // 0x0268(0x0008)(ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_270[0x40];                                     // 0x0270(0x0040)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	int32 AddRigVMFunction(class UScriptStruct* InRigVMStruct, const class FName& InMethodName);
	bool Execute(struct FRigVMExtendedExecuteContext* Context, const class FName& InEntryName);
	bool GetParameterValueBool(const class FName& InParameterName, int32 InArrayIndex);
	double GetParameterValueDouble(const class FName& InParameterName, int32 InArrayIndex);
	float GetParameterValueFloat(const class FName& InParameterName, int32 InArrayIndex);
	int32 GetParameterValueInt(const class FName& InParameterName, int32 InArrayIndex);
	class FName GetParameterValueName(const class FName& InParameterName, int32 InArrayIndex);
	struct FQuat GetParameterValueQuat(const class FName& InParameterName, int32 InArrayIndex);
	class FString GetParameterValueString(const class FName& InParameterName, int32 InArrayIndex);
	struct FTransform GetParameterValueTransform(const class FName& InParameterName, int32 InArrayIndex);
	struct FVector GetParameterValueVector(const class FName& InParameterName, int32 InArrayIndex);
	struct FVector2D GetParameterValueVector2D(const class FName& InParameterName, int32 InArrayIndex);
	void SetParameterValueBool(const class FName& InParameterName, bool InValue, int32 InArrayIndex);
	void SetParameterValueDouble(const class FName& InParameterName, double InValue, int32 InArrayIndex);
	void SetParameterValueFloat(const class FName& InParameterName, float InValue, int32 InArrayIndex);
	void SetParameterValueInt(const class FName& InParameterName, int32 InValue, int32 InArrayIndex);
	void SetParameterValueName(const class FName& InParameterName, const class FName& InValue, int32 InArrayIndex);
	void SetParameterValueQuat(const class FName& InParameterName, const struct FQuat& InValue, int32 InArrayIndex);
	void SetParameterValueString(const class FName& InParameterName, const class FString& InValue, int32 InArrayIndex);
	void SetParameterValueTransform(const class FName& InParameterName, const struct FTransform& InValue, int32 InArrayIndex);
	void SetParameterValueVector(const class FName& InParameterName, const struct FVector& InValue, int32 InArrayIndex);
	void SetParameterValueVector2D(const class FName& InParameterName, const struct FVector2D& InValue, int32 InArrayIndex);

	class FString GetRigVMFunctionName(int32 InFunctionIndex) const;
	struct FRigVMStatistics GetStatistics() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RigVM">();
	}
	static class URigVM* GetDefaultObj()
	{
		return GetDefaultObjImpl<URigVM>();
	}
};

// Class RigVM.NameSpacedUserData
// 0x00D8 (0x0108 - 0x0030)
class UNameSpacedUserData : public UAssetUserData
{
public:
	class FString                                 Namespace;                                         // 0x0030(0x0010)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_40[0xC8];                                      // 0x0040(0x00C8)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"NameSpacedUserData">();
	}
	static class UNameSpacedUserData* GetDefaultObj()
	{
		return GetDefaultObjImpl<UNameSpacedUserData>();
	}
};

// Class RigVM.RigVMNativized
// 0x0028 (0x02D8 - 0x02B0)
class URigVMNativized final : public URigVM
{
public:
	uint8                                         Pad_2B0[0x28];                                     // 0x02B0(0x0028)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RigVMNativized">();
	}
	static class URigVMNativized* GetDefaultObj()
	{
		return GetDefaultObjImpl<URigVMNativized>();
	}
};

// Class RigVM.DataAssetLink
// 0x0008 (0x0110 - 0x0108)
class UDataAssetLink final : public UNameSpacedUserData
{
public:
	class UDataAsset*                             DataAsset;                                         // 0x0108(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	void SetDataAsset(class UDataAsset* InDataAsset);

	class UDataAsset* GetDataAsset() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DataAssetLink">();
	}
	static class UDataAssetLink* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDataAssetLink>();
	}
};

// Class RigVM.RigVMMemoryStorageGeneratorClass
// 0x0040 (0x02C0 - 0x0280)
class URigVMMemoryStorageGeneratorClass final : public UClass
{
public:
	uint8                                         Pad_280[0x40];                                     // 0x0280(0x0040)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RigVMMemoryStorageGeneratorClass">();
	}
	static class URigVMMemoryStorageGeneratorClass* GetDefaultObj()
	{
		return GetDefaultObjImpl<URigVMMemoryStorageGeneratorClass>();
	}
};

// Class RigVM.RigVMMemoryStorage
// 0x0000 (0x0030 - 0x0030)
class URigVMMemoryStorage final : public UObject
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RigVMMemoryStorage">();
	}
	static class URigVMMemoryStorage* GetDefaultObj()
	{
		return GetDefaultObjImpl<URigVMMemoryStorage>();
	}
};

// Class RigVM.RigVMUserWorkflowOptions
// 0x0078 (0x00A8 - 0x0030)
class URigVMUserWorkflowOptions : public UObject
{
public:
	class UObject*                                Subject;                                           // 0x0030(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FRigVMUserWorkflow                     Workflow;                                          // 0x0038(0x0060)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_98[0x10];                                      // 0x0098(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void ReportError(const class FString& InMessage);
	void ReportInfo(const class FString& InMessage);
	void ReportWarning(const class FString& InMessage);

	bool IsValid() const;
	bool RequiresDialog() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RigVMUserWorkflowOptions">();
	}
	static class URigVMUserWorkflowOptions* GetDefaultObj()
	{
		return GetDefaultObjImpl<URigVMUserWorkflowOptions>();
	}
};

// Class RigVM.RigVMHost
// 0x0318 (0x0348 - 0x0030)
class URigVMHost : public UObject
{
public:
	uint8                                         Pad_30[0x8];                                       // 0x0030(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRigVMRuntimeSettings                  VMRuntimeSettings;                                 // 0x0038(0x0018)(NativeAccessSpecifierPublic)
	uint8                                         Pad_50[0x10];                                      // 0x0050(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	class URigVM*                                 VM;                                                // 0x0060(0x0008)(ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FRigVMExtendedExecuteContext           ExtendedExecuteContext;                            // 0x0068(0x01C0)(NativeAccessSpecifierPrivate)
	struct FRigVMDrawContainer                    DrawContainer;                                     // 0x0228(0x0018)(NativeAccessSpecifierPublic)
	uint8                                         Pad_240[0x18];                                     // 0x0240(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           EventQueue;                                        // 0x0258(0x0010)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	uint8                                         Pad_268[0x90];                                     // 0x0268(0x0090)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UAssetUserData*>                 AssetUserData;                                     // 0x02F8(0x0010)(Edit, ExportObject, ZeroConstructor, ContainsInstancedReference, AdvancedDisplay, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	uint8                                         Pad_308[0x40];                                     // 0x0308(0x0040)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static TArray<class URigVMHost*> FindRigVMHosts(class UObject* Outer_0, TSubclassOf<class URigVMHost> OptionalClass);

	bool Execute(const class FName& InEventName);
	bool ExecuteEvent(const class FName& InEventName);
	struct FRigVMExtendedExecuteContext GetExtendedExecuteContext();
	class URigVM* GetVM();
	bool RemoveRunOnceEvent(const class FName& InEventName);
	void RequestInit();
	void RequestRunOnceEvent(const class FName& InEventName, int32 InEventIndex);
	void SetAbsoluteAndDeltaTime(float InAbsoluteTime, float InDeltaTime);
	void SetAbsoluteTime(float InAbsoluteTime, bool InSetDeltaTimeZero);
	void SetDeltaTime(float InDeltaTime);
	void SetFramesPerSecond(float InFramesPerSecond);
	bool SetVariableFromString(const class FName& InVariableName, const class FString& InValue);

	bool CanExecute() const;
	float GetAbsoluteTime() const;
	float GetCurrentFramesPerSecond() const;
	float GetDeltaTime() const;
	TArray<class FName> GetScriptAccessibleVariables() const;
	const TArray<class FName> GetSupportedEvents() const;
	class FString GetVariableAsString(const class FName& InVariableName) const;
	class FName GetVariableType(const class FName& InVariableName) const;
	bool SupportsEvent(const class FName& InEventName) const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RigVMHost">();
	}
	static class URigVMHost* GetDefaultObj()
	{
		return GetDefaultObjImpl<URigVMHost>();
	}
};

// Class RigVM.RigVMEditorSettings
// 0x0000 (0x0048 - 0x0048)
class URigVMEditorSettings : public UDeveloperSettings
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RigVMEditorSettings">();
	}
	static class URigVMEditorSettings* GetDefaultObj()
	{
		return GetDefaultObjImpl<URigVMEditorSettings>();
	}
};

}

