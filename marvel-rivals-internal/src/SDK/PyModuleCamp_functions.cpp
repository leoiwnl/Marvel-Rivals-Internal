#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PyModuleCamp

#include "Basic.hpp"

#include "PyModuleCamp_classes.hpp"
#include "PyModuleCamp_parameters.hpp"


namespace SDK
{

// PythonFunction PyModuleCamp.PyModuleCamp.ReceiveBeginPlay
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent)

void APyModuleCamp::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyModuleCamp", "ReceiveBeginPlay");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyModuleCamp.PyModuleCamp.ReceiveEndPlay
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// EEndPlayReason                          EndPlayReason                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APyModuleCamp::ReceiveEndPlay(EEndPlayReason EndPlayReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyModuleCamp", "ReceiveEndPlay");

	Params::PyModuleCamp_ReceiveEndPlay Parms{};

	Parms.EndPlayReason = EndPlayReason;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyModuleCamp.PyModuleCamp.S_Activate
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void APyModuleCamp::S_Activate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyModuleCamp", "S_Activate");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyModuleCamp.PyModuleCamp.ControlRangeCheck
// (Native, Public, BlueprintCallable)
// Parameters:
// bool                                    Active                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APyModuleCamp::ControlRangeCheck(bool Active)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyModuleCamp", "ControlRangeCheck");

	Params::PyModuleCamp_ControlRangeCheck Parms{};

	Parms.Active = Active;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyModuleCamp.PyModuleCamp.OnPlayerEnterCamp
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   UID                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APyModuleCamp::OnPlayerEnterCamp(int32 UID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyModuleCamp", "OnPlayerEnterCamp");

	Params::PyModuleCamp_OnPlayerEnterCamp Parms{};

	Parms.UID = UID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyModuleCamp.PyModuleCamp.OnPlayerExitCamp
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   UID                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APyModuleCamp::OnPlayerExitCamp(int32 UID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyModuleCamp", "OnPlayerExitCamp");

	Params::PyModuleCamp_OnPlayerExitCamp Parms{};

	Parms.UID = UID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyModuleCamp.PyModuleCamp.IsCampActivate
// (Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool APyModuleCamp::IsCampActivate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyModuleCamp", "IsCampActivate");

	Params::PyModuleCamp_IsCampActivate Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// PythonFunction PyModuleCamp.PyModuleCamp.ServerUpdate
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void APyModuleCamp::ServerUpdate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyModuleCamp", "ServerUpdate");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyModuleCamp.PyModuleCamp.CampMoveFollowPlayer
// (Native, Public, BlueprintCallable)
// Parameters:
// float                                   DurationTime                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsHidden                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   PlayerUID                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APyModuleCamp::CampMoveFollowPlayer(float DurationTime, bool IsHidden, int32 PlayerUID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyModuleCamp", "CampMoveFollowPlayer");

	Params::PyModuleCamp_CampMoveFollowPlayer Parms{};

	Parms.DurationTime = DurationTime;
	Parms.IsHidden = IsHidden;
	Parms.PlayerUID = PlayerUID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyModuleCamp.PyModuleCamp.CampStopMoveFollowPlayer
// (Native, Public, BlueprintCallable)

void APyModuleCamp::CampStopMoveFollowPlayer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyModuleCamp", "CampStopMoveFollowPlayer");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyModuleCamp.PyModuleCamp.Update
// (Native, Public, BlueprintCallable)

void APyModuleCamp::Update()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyModuleCamp", "Update");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyModuleCamp.PyModuleCamp.SetMoveSpeed
// (Native, Public, BlueprintCallable)
// Parameters:
// float                                   NewSpeed                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APyModuleCamp::SetMoveSpeed(float NewSpeed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyModuleCamp", "SetMoveSpeed");

	Params::PyModuleCamp_SetMoveSpeed Parms{};

	Parms.NewSpeed = NewSpeed;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyModuleCamp.PyModuleCamp.FollowTraceMoveStart
// (Native, Public, BlueprintCallable)
// Parameters:
// class FString                           TraceName                                              (Parm, ZeroConstructor, HasGetValueTypeHash)
// float                                   StartPercent                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APyModuleCamp::FollowTraceMoveStart(const class FString& TraceName, float StartPercent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyModuleCamp", "FollowTraceMoveStart");

	Params::PyModuleCamp_FollowTraceMoveStart Parms{};

	Parms.TraceName = std::move(TraceName);
	Parms.StartPercent = StartPercent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyModuleCamp.PyModuleCamp.GetCurLength
// (Native, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

float APyModuleCamp::GetCurLength()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyModuleCamp", "GetCurLength");

	Params::PyModuleCamp_GetCurLength Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// PythonFunction PyModuleCamp.PyModuleCamp.ReachCheckPoint
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           EventName                                              (Parm, ZeroConstructor, HasGetValueTypeHash)

void APyModuleCamp::ReachCheckPoint(const class FString& EventName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyModuleCamp", "ReachCheckPoint");

	Params::PyModuleCamp_ReachCheckPoint Parms{};

	Parms.EventName = std::move(EventName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}

}

