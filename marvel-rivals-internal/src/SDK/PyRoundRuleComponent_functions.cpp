#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PyRoundRuleComponent

#include "Basic.hpp"

#include "PyRoundRuleComponent_classes.hpp"


namespace SDK
{

// PythonFunction PyRoundRuleComponent.PyRoundRuleComponent.OnRep_RemainingTime
// (Native, Public, BlueprintCallable)

void UPyRoundRuleComponent::OnRep_RemainingTime()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyRoundRuleComponent", "OnRep_RemainingTime");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyRoundRuleComponent.PyRoundRuleComponent.OnRep_PauseRemainingTime
// (Native, Public, BlueprintCallable)

void UPyRoundRuleComponent::OnRep_PauseRemainingTime()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyRoundRuleComponent", "OnRep_PauseRemainingTime");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}

}

