#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PyMarvelGameInstance

#include "Basic.hpp"

#include "PyMarvelGameInstance_classes.hpp"
#include "PyMarvelGameInstance_parameters.hpp"


namespace SDK
{

// PythonFunction PyMarvelGameInstance.PyMarvelGameInstance.GetClientPort
// (Native, Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

int32 UPyMarvelGameInstance::GetClientPort()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyMarvelGameInstance", "GetClientPort");

	Params::PyMarvelGameInstance_GetClientPort Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// PythonFunction PyMarvelGameInstance.PyMarvelGameInstance.ReceiveInit
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent)

void UPyMarvelGameInstance::ReceiveInit()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyMarvelGameInstance", "ReceiveInit");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyMarvelGameInstance.PyMarvelGameInstance.UpdateReplayEnv
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent)

void UPyMarvelGameInstance::UpdateReplayEnv()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyMarvelGameInstance", "UpdateReplayEnv");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyMarvelGameInstance.PyMarvelGameInstance.CallEngineQuit
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           sReason                                                (Parm, ZeroConstructor, HasGetValueTypeHash)

void UPyMarvelGameInstance::CallEngineQuit(const class FString& sReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyMarvelGameInstance", "CallEngineQuit");

	Params::PyMarvelGameInstance_CallEngineQuit Parms{};

	Parms.sReason = std::move(sReason);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyMarvelGameInstance.PyMarvelGameInstance.ReceiveOnStart
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent)

void UPyMarvelGameInstance::ReceiveOnStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyMarvelGameInstance", "ReceiveOnStart");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyMarvelGameInstance.PyMarvelGameInstance.OnFrameEnd
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   FrameTime                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPyMarvelGameInstance::OnFrameEnd(float FrameTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyMarvelGameInstance", "OnFrameEnd");

	Params::PyMarvelGameInstance_OnFrameEnd Parms{};

	Parms.FrameTime = FrameTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyMarvelGameInstance.PyMarvelGameInstance.FakeTick
// (Native, Public, BlueprintCallable)

void UPyMarvelGameInstance::FakeTick()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyMarvelGameInstance", "FakeTick");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyMarvelGameInstance.PyMarvelGameInstance.ReceiveOnLoadComplete
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   LoadTime                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           MapName                                                (Parm, ZeroConstructor, HasGetValueTypeHash)

void UPyMarvelGameInstance::ReceiveOnLoadComplete(const float LoadTime, const class FString& MapName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyMarvelGameInstance", "ReceiveOnLoadComplete");

	Params::PyMarvelGameInstance_ReceiveOnLoadComplete Parms{};

	Parms.LoadTime = LoadTime;
	Parms.MapName = std::move(MapName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyMarvelGameInstance.PyMarvelGameInstance.ReceiveShutdown
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent)

void UPyMarvelGameInstance::ReceiveShutdown()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyMarvelGameInstance", "ReceiveShutdown");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyMarvelGameInstance.PyMarvelGameInstance.ReceiveDemoPlaybackFailure
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Error                                                  (Parm, ZeroConstructor, HasGetValueTypeHash)

void UPyMarvelGameInstance::ReceiveDemoPlaybackFailure(const class FString& Error)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyMarvelGameInstance", "ReceiveDemoPlaybackFailure");

	Params::PyMarvelGameInstance_ReceiveDemoPlaybackFailure Parms{};

	Parms.Error = std::move(Error);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyMarvelGameInstance.PyMarvelGameInstance.ReceiveSwitchEnvFailure
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Error                                                  (Parm, ZeroConstructor, HasGetValueTypeHash)

void UPyMarvelGameInstance::ReceiveSwitchEnvFailure(const class FString& Error)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyMarvelGameInstance", "ReceiveSwitchEnvFailure");

	Params::PyMarvelGameInstance_ReceiveSwitchEnvFailure Parms{};

	Parms.Error = std::move(Error);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyMarvelGameInstance.PyMarvelGameInstance.OnDDosChecked
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Error                                                  (Parm, ZeroConstructor, HasGetValueTypeHash)

void UPyMarvelGameInstance::OnDDosChecked(const class FString& Error)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyMarvelGameInstance", "OnDDosChecked");

	Params::PyMarvelGameInstance_OnDDosChecked Parms{};

	Parms.Error = std::move(Error);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyMarvelGameInstance.PyMarvelGameInstance.ReceiveNetworkReplayVersion
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Error                                                  (Parm, ZeroConstructor, HasGetValueTypeHash)

void UPyMarvelGameInstance::ReceiveNetworkReplayVersion(const class FString& Error)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyMarvelGameInstance", "ReceiveNetworkReplayVersion");

	Params::PyMarvelGameInstance_ReceiveNetworkReplayVersion Parms{};

	Parms.Error = std::move(Error);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyMarvelGameInstance.PyMarvelGameInstance.WriteReplayLoadingInfo
// (Native, Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)

class FString UPyMarvelGameInstance::WriteReplayLoadingInfo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyMarvelGameInstance", "WriteReplayLoadingInfo");

	Params::PyMarvelGameInstance_WriteReplayLoadingInfo Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// PythonFunction PyMarvelGameInstance.PyMarvelGameInstance.ProcessReplayLoadingInfo
// (Native, Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           SpecificData                                           (Parm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           Error                                                  (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)

void UPyMarvelGameInstance::ProcessReplayLoadingInfo(const class FString& SpecificData, class FString* Error)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyMarvelGameInstance", "ProcessReplayLoadingInfo");

	Params::PyMarvelGameInstance_ProcessReplayLoadingInfo Parms{};

	Parms.SpecificData = std::move(SpecificData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Error != nullptr)
		*Error = std::move(Parms.Error);
}


// PythonFunction PyMarvelGameInstance.PyMarvelGameInstance.UploadDrpfData
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           DrpfType                                               (Parm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           DrpfData                                               (Parm, ZeroConstructor, HasGetValueTypeHash)

void UPyMarvelGameInstance::UploadDrpfData(const class FString& DrpfType, const class FString& DrpfData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyMarvelGameInstance", "UploadDrpfData");

	Params::PyMarvelGameInstance_UploadDrpfData Parms{};

	Parms.DrpfType = std::move(DrpfType);
	Parms.DrpfData = std::move(DrpfData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyMarvelGameInstance.PyMarvelGameInstance.ReqServerBuildSettings
// (Native, Public, BlueprintCallable)

void UPyMarvelGameInstance::ReqServerBuildSettings()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyMarvelGameInstance", "ReqServerBuildSettings");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyMarvelGameInstance.PyMarvelGameInstance.ReceiveOnAfterForkInChild
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent)

void UPyMarvelGameInstance::ReceiveOnAfterForkInChild()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyMarvelGameInstance", "ReceiveOnAfterForkInChild");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyMarvelGameInstance.PyMarvelGameInstance.OnPostGC
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent)

void UPyMarvelGameInstance::OnPostGC()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyMarvelGameInstance", "OnPostGC");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyMarvelGameInstance.PyMarvelGameInstance.OnPreGarbageCollect
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent)

void UPyMarvelGameInstance::OnPreGarbageCollect()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyMarvelGameInstance", "OnPreGarbageCollect");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyMarvelGameInstance.PyMarvelGameInstance.PyIsSystemSwitchOpenedByID
// (Native, Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   RowID                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UPyMarvelGameInstance::PyIsSystemSwitchOpenedByID(int32 RowID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyMarvelGameInstance", "PyIsSystemSwitchOpenedByID");

	Params::PyMarvelGameInstance_PyIsSystemSwitchOpenedByID Parms{};

	Parms.RowID = RowID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}

}

