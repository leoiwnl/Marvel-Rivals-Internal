#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PySignalHandlerActor

#include "Basic.hpp"

#include "PySignalHandlerActor_classes.hpp"
#include "PySignalHandlerActor_parameters.hpp"


namespace SDK
{

// PythonFunction PySignalHandlerActor.PySignalHandlerActor.ReceiveBeginPlay
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent)

void APySignalHandlerActor::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PySignalHandlerActor", "ReceiveBeginPlay");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PySignalHandlerActor.PySignalHandlerActor.ReceiveEndPlay
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// EEndPlayReason                          EndPlayReason                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APySignalHandlerActor::ReceiveEndPlay(EEndPlayReason EndPlayReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PySignalHandlerActor", "ReceiveEndPlay");

	Params::PySignalHandlerActor_ReceiveEndPlay Parms{};

	Parms.EndPlayReason = EndPlayReason;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PySignalHandlerActor.PySignalHandlerActor.SetRequestResult
// (Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FSignalResult                    Result                                                 (ConstParm, Parm, OutParm, ReferenceParm)

void APySignalHandlerActor::SetRequestResult(const struct FSignalResult& Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PySignalHandlerActor", "SetRequestResult");

	Params::PySignalHandlerActor_SetRequestResult Parms{};

	Parms.Result = std::move(Result);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PySignalHandlerActor.PySignalHandlerActor.SetAbilityID
// (Native, Public, BlueprintCallable)
// Parameters:
// int32                                   InAbilityId                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APySignalHandlerActor::SetAbilityID(int32 InAbilityId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PySignalHandlerActor", "SetAbilityID");

	Params::PySignalHandlerActor_SetAbilityID Parms{};

	Parms.InAbilityId = InAbilityId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PySignalHandlerActor.PySignalHandlerActor.CancelSignal
// (Native, Public, BlueprintCallable)
// Parameters:
// bool                                    is_cancel                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APySignalHandlerActor::CancelSignal(bool is_cancel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PySignalHandlerActor", "CancelSignal");

	Params::PySignalHandlerActor_CancelSignal Parms{};

	Parms.is_cancel = is_cancel;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PySignalHandlerActor.PySignalHandlerActor.SetBeCancelled
// (Native, Public, BlueprintCallable)
// Parameters:
// bool                                    IsBeCancelled                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APySignalHandlerActor::SetBeCancelled(bool IsBeCancelled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PySignalHandlerActor", "SetBeCancelled");

	Params::PySignalHandlerActor_SetBeCancelled Parms{};

	Parms.IsBeCancelled = IsBeCancelled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PySignalHandlerActor.PySignalHandlerActor.OnRep_BeCancelled
// (Native, Public, BlueprintCallable)

void APySignalHandlerActor::OnRep_BeCancelled()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PySignalHandlerActor", "OnRep_BeCancelled");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PySignalHandlerActor.PySignalHandlerActor.StartHandlerSignal
// (Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FSignalResult                    Result                                                 (ConstParm, Parm, OutParm, ReferenceParm)

void APySignalHandlerActor::StartHandlerSignal(const struct FSignalResult& Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PySignalHandlerActor", "StartHandlerSignal");

	Params::PySignalHandlerActor_StartHandlerSignal Parms{};

	Parms.Result = std::move(Result);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PySignalHandlerActor.PySignalHandlerActor.EndHandlerSignal
// (Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FSignalResult                    Result                                                 (ConstParm, Parm, OutParm, ReferenceParm)

void APySignalHandlerActor::EndHandlerSignal(const struct FSignalResult& Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PySignalHandlerActor", "EndHandlerSignal");

	Params::PySignalHandlerActor_EndHandlerSignal Parms{};

	Parms.Result = std::move(Result);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PySignalHandlerActor.PySignalHandlerActor.OnSummonedEndAgentTask
// (Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                           InActor                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void APySignalHandlerActor::OnSummonedEndAgentTask(class AActor* InActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PySignalHandlerActor", "OnSummonedEndAgentTask");

	Params::PySignalHandlerActor_OnSummonedEndAgentTask Parms{};

	Parms.InActor = InActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PySignalHandlerActor.PySignalHandlerActor.OnComOwnerChanged
// (Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                           InActor                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void APySignalHandlerActor::OnComOwnerChanged(class AActor* InActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PySignalHandlerActor", "OnComOwnerChanged");

	Params::PySignalHandlerActor_OnComOwnerChanged Parms{};

	Parms.InActor = InActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PySignalHandlerActor.PySignalHandlerActor.OnNewCharacterBeginPlay
// (Native, Public, BlueprintCallable)

void APySignalHandlerActor::OnNewCharacterBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PySignalHandlerActor", "OnNewCharacterBeginPlay");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PySignalHandlerActor.PySignalHandlerActor.SetIsFallOff
// (Native, Public, BlueprintCallable)
// Parameters:
// bool                                    IsFallOff_0                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APySignalHandlerActor::SetIsFallOff(bool IsFallOff_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PySignalHandlerActor", "SetIsFallOff");

	Params::PySignalHandlerActor_SetIsFallOff Parms{};

	Parms.IsFallOff_0 = IsFallOff_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PySignalHandlerActor.PySignalHandlerActor.OnRep_IsFallOff
// (Native, Public, BlueprintCallable)

void APySignalHandlerActor::OnRep_IsFallOff()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PySignalHandlerActor", "OnRep_IsFallOff");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PySignalHandlerActor.PySignalHandlerActor.CanHandlerSignal
// (Native, Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool APySignalHandlerActor::CanHandlerSignal()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PySignalHandlerActor", "CanHandlerSignal");

	Params::PySignalHandlerActor_CanHandlerSignal Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// PythonFunction PySignalHandlerActor.PySignalHandlerActor.ReceiveDestroyed
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent)

void APySignalHandlerActor::ReceiveDestroyed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PySignalHandlerActor", "ReceiveDestroyed");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PySignalHandlerActor.PySignalHandlerActor.SetResponsableState
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsResponsable                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APySignalHandlerActor::SetResponsableState(bool IsResponsable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PySignalHandlerActor", "SetResponsableState");

	Params::PySignalHandlerActor_SetResponsableState Parms{};

	Parms.IsResponsable = IsResponsable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PySignalHandlerActor.PySignalHandlerActor.SetActive
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bInActive                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APySignalHandlerActor::SetActive(bool bInActive)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PySignalHandlerActor", "SetActive");

	Params::PySignalHandlerActor_SetActive Parms{};

	Parms.bInActive = bInActive;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}

}

