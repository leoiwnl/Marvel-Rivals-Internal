#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AkAudio

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "MovieScene_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// Enum AkAudio.EAkResult
// NumValues: 0x003B
enum class EAkResult : uint8
{
	NotImplemented                           = 0,
	Success                                  = 1,
	Fail                                     = 2,
	PartialSuccess                           = 3,
	NotCompatible                            = 4,
	AlreadyConnected                         = 5,
	InvalidFile                              = 7,
	AudioFileHeaderTooLarge                  = 8,
	MaxReached                               = 9,
	InvalidID                                = 14,
	IDNotFound                               = 15,
	InvalidInstanceID                        = 16,
	NoMoreData                               = 17,
	InvalidStateGroup                        = 20,
	ChildAlreadyHasAParent                   = 21,
	InvalidLanguage                          = 22,
	CannotAddItseflAsAChild                  = 23,
	InvalidParameter                         = 31,
	ElementAlreadyInList                     = 35,
	PathNotFound                             = 36,
	PathNoVertices                           = 37,
	PathNotRunning                           = 38,
	PathNotPaused                            = 39,
	PathNodeAlreadyInList                    = 40,
	PathNodeNotInList                        = 41,
	DataNeeded                               = 43,
	NoDataNeeded                             = 44,
	DataReady                                = 45,
	NoDataReady                              = 46,
	InsufficientMemory                       = 52,
	Cancelled                                = 53,
	UnknownBankID                            = 54,
	BankReadError                            = 56,
	InvalidSwitchType                        = 57,
	FormatNotReady                           = 63,
	WrongBankVersion                         = 64,
	FileNotFound                             = 66,
	DeviceNotReady                           = 67,
	BankAlreadyLoaded                        = 69,
	RenderedFX                               = 71,
	ProcessNeeded                            = 72,
	ProcessDone                              = 73,
	MemManagerNotInitialized                 = 74,
	StreamMgrNotInitialized                  = 75,
	SSEInstructionsNotSupported              = 76,
	Busy                                     = 77,
	UnsupportedChannelConfig                 = 78,
	PluginMediaNotAvailable                  = 79,
	MustBeVirtualized                        = 80,
	CommandTooLarge                          = 81,
	RejectedByFilter                         = 82,
	InvalidCustomPlatformName                = 83,
	DLLCannotLoad                            = 84,
	DLLPathNotFound                          = 85,
	NoJavaVM                                 = 86,
	OpenSLError                              = 87,
	PluginNotRegistered                      = 88,
	DataAlignmentError                       = 89,
	EAkResult_MAX                            = 90,
};

// Enum AkAudio.EAkCallbackType
// NumValues: 0x000E
enum class EAkCallbackType : uint8
{
	EndOfEvent                               = 0,
	Marker                                   = 2,
	Duration                                 = 3,
	Starvation                               = 5,
	MusicPlayStarted                         = 7,
	MusicSyncBeat                            = 8,
	MusicSyncBar                             = 9,
	MusicSyncEntry                           = 10,
	MusicSyncExit                            = 11,
	MusicSyncGrid                            = 12,
	MusicSyncUserCue                         = 13,
	MusicSyncPoint                           = 14,
	MIDIEvent                                = 16,
	EAkCallbackType_MAX                      = 17,
};

// Enum AkAudio.EAkAndroidAudioAPI
// NumValues: 0x0003
enum class EAkAndroidAudioAPI : uint8
{
	AAudio                                   = 0,
	OpenSL_ES                                = 1,
	EAkAndroidAudioAPI_MAX                   = 2,
};

// Enum AkAudio.EAkAudioSessionCategory
// NumValues: 0x0004
enum class EAkAudioSessionCategory : uint32
{
	Ambient                                  = 0,
	SoloAmbient                              = 1,
	PlayAndRecord                            = 2,
	EAkAudioSessionCategory_MAX              = 3,
};

// Enum AkAudio.EAkAudioSessionCategoryOptions
// NumValues: 0x0005
enum class EAkAudioSessionCategoryOptions : uint8
{
	MixWithOthers                            = 0,
	DuckOthers                               = 1,
	AllowBluetooth                           = 2,
	DefaultToSpeaker                         = 3,
	EAkAudioSessionCategoryOptions_MAX       = 4,
};

// Enum AkAudio.EAkAudioSessionMode
// NumValues: 0x0008
enum class EAkAudioSessionMode : uint32
{
	Default                                  = 0,
	VoiceChat                                = 1,
	GameChat                                 = 2,
	VideoRecording                           = 3,
	Measurement                              = 4,
	MoviePlayback                            = 5,
	VideoChat                                = 6,
	EAkAudioSessionMode_MAX                  = 7,
};

// Enum AkAudio.EReflectionFilterBits
// NumValues: 0x0004
enum class EReflectionFilterBits : uint8
{
	Wall                                     = 0,
	Ceiling                                  = 1,
	Floor                                    = 2,
	EReflectionFilterBits_MAX                = 3,
};

// Enum AkAudio.EAkAudioContext
// NumValues: 0x0005
enum class EAkAudioContext : uint8
{
	Foreign                                  = 0,
	GameplayAudio                            = 1,
	EditorAudio                              = 2,
	AlwaysActive                             = 3,
	EAkAudioContext_MAX                      = 4,
};

// Enum AkAudio.PanningRule
// NumValues: 0x0003
enum class EPanningRule : uint8
{
	PanningRule_Speakers                     = 0,
	PanningRule_Headphones                   = 1,
	PanningRule_MAX                          = 2,
};

// Enum AkAudio.AkAcousticPortalState
// NumValues: 0x0003
enum class EAkAcousticPortalState : uint8
{
	Closed                                   = 0,
	Open                                     = 1,
	AkAcousticPortalState_MAX                = 2,
};

// Enum AkAudio.AkChannelConfiguration
// NumValues: 0x001C
enum class EAkChannelConfiguration : uint8
{
	Ak_Parent                                = 0,
	Ak_MainMix                               = 1,
	Ak_Passthrough                           = 2,
	Ak_LFE                                   = 3,
	AK_Audio_Objects                         = 4,
	Ak_1_0                                   = 5,
	Ak_2_0                                   = 6,
	Ak_2_1                                   = 7,
	Ak_3_0                                   = 8,
	Ak_3_1                                   = 9,
	Ak_4_0                                   = 10,
	Ak_4_1                                   = 11,
	Ak_5_0                                   = 12,
	Ak_5_1                                   = 13,
	Ak_7_1                                   = 14,
	Ak_5_1_2                                 = 15,
	Ak_7_1_2                                 = 16,
	Ak_7_1_4                                 = 17,
	Ak_Auro_9_1                              = 18,
	Ak_Auro_10_1                             = 19,
	Ak_Auro_11_1                             = 20,
	Ak_Auro_13_1                             = 21,
	Ak_Ambisonics_1st_order                  = 22,
	Ak_Ambisonics_2nd_order                  = 23,
	Ak_Ambisonics_3rd_order                  = 24,
	Ak_Ambisonics_4th_order                  = 25,
	Ak_Ambisonics_5th_order                  = 26,
	AkChannelConfiguration_MAX               = 27,
};

// Enum AkAudio.AkSpeakerConfiguration
// NumValues: 0x0011
enum class EAkSpeakerConfiguration : uint32
{
	Ak_Speaker_Front_Left                    = 1,
	Ak_Speaker_Front_Right                   = 2,
	Ak_Speaker_Front_Center                  = 4,
	Ak_Speaker_Low_Frequency                 = 8,
	Ak_Speaker_Back_Left                     = 16,
	Ak_Speaker_Back_Right                    = 32,
	Ak_Speaker_Back_Center                   = 256,
	Ak_Speaker_Side_Left                     = 512,
	Ak_Speaker_Side_Right                    = 1024,
	Ak_Speaker_Top                           = 2048,
	Ak_Speaker_Height_Front_Left             = 4096,
	Ak_Speaker_Height_Front_Center           = 8192,
	Ak_Speaker_Height_Front_Right            = 16384,
	Ak_Speaker_Height_Back_Left              = 32768,
	Ak_Speaker_Height_Back_Center            = 65536,
	Ak_Speaker_Height_Back_Right             = 131072,
	Ak_Speaker_MAX                           = 131073,
};

// Enum AkAudio.AkMultiPositionType
// NumValues: 0x0004
enum class EAkMultiPositionType : uint8
{
	SingleSource                             = 0,
	MultiSources                             = 1,
	MultiDirections                          = 2,
	AkMultiPositionType_MAX                  = 3,
};

// Enum AkAudio.AkActionOnEventType
// NumValues: 0x0006
enum class EAkActionOnEventType : uint8
{
	Stop                                     = 0,
	Pause                                    = 1,
	Resume                                   = 2,
	Break                                    = 3,
	ReleaseEnvelope                          = 4,
	AkActionOnEventType_MAX                  = 5,
};

// Enum AkAudio.EAkCurveInterpolation
// NumValues: 0x000C
enum class EAkCurveInterpolation : uint8
{
	Log3                                     = 0,
	Sine                                     = 1,
	Log1                                     = 2,
	InvSCurve                                = 3,
	Linear                                   = 4,
	SCurve                                   = 5,
	Exp1                                     = 6,
	SineRecip                                = 7,
	Exp3                                     = 8,
	LastFadeCurve                            = 8,
	Constant                                 = 9,
	EAkCurveInterpolation_MAX                = 10,
};

// Enum AkAudio.ERTPCValueType
// NumValues: 0x0006
enum class ERTPCValueType : uint8
{
	Default                                  = 0,
	Global                                   = 1,
	GameObject                               = 2,
	PlayingID                                = 3,
	Unavailable                              = 4,
	ERTPCValueType_MAX                       = 5,
};

// Enum AkAudio.EAkMidiEventType
// NumValues: 0x000C
enum class EAkMidiEventType : uint8
{
	AkMidiEventTypeInvalid                   = 0,
	AkMidiEventTypeNoteOff                   = 128,
	AkMidiEventTypeNoteOn                    = 144,
	AkMidiEventTypeNoteAftertouch            = 160,
	AkMidiEventTypeController                = 176,
	AkMidiEventTypeProgramChange             = 192,
	AkMidiEventTypeChannelAftertouch         = 208,
	AkMidiEventTypePitchBend                 = 224,
	AkMidiEventTypeSysex                     = 240,
	AkMidiEventTypeEscape                    = 247,
	AkMidiEventTypeMeta                      = 255,
	EAkMidiEventType_MAX                     = 256,
};

// Enum AkAudio.EAkMidiCcValues
// NumValues: 0x0062
enum class EAkMidiCcValues : uint8
{
	AkMidiCcBankSelectCoarse                 = 0,
	AkMidiCcModWheelCoarse                   = 1,
	AkMidiCcBreathCtrlCoarse                 = 2,
	AkMidiCcCtrl3Coarse                      = 3,
	AkMidiCcFootPedalCoarse                  = 4,
	AkMidiCcPortamentoCoarse                 = 5,
	AkMidiCcDataEntryCoarse                  = 6,
	AkMidiCcVolumeCoarse                     = 7,
	AkMidiCcBalanceCoarse                    = 8,
	AkMidiCcCtrl9Coarse                      = 9,
	AkMidiCcPanPositionCoarse                = 10,
	AkMidiCcExpressionCoarse                 = 11,
	AkMidiCcEffectCtrl1Coarse                = 12,
	AkMidiCcEffectCtrl2Coarse                = 13,
	AkMidiCcCtrl14Coarse                     = 14,
	AkMidiCcCtrl15Coarse                     = 15,
	AkMidiCcGenSlider1                       = 16,
	AkMidiCcGenSlider2                       = 17,
	AkMidiCcGenSlider3                       = 18,
	AkMidiCcGenSlider4                       = 19,
	AkMidiCcCtrl20Coarse                     = 20,
	AkMidiCcCtrl21Coarse                     = 21,
	AkMidiCcCtrl22Coarse                     = 22,
	AkMidiCcCtrl23Coarse                     = 23,
	AkMidiCcCtrl24Coarse                     = 24,
	AkMidiCcCtrl25Coarse                     = 25,
	AkMidiCcCtrl26Coarse                     = 26,
	AkMidiCcCtrl27Coarse                     = 27,
	AkMidiCcCtrl28Coarse                     = 28,
	AkMidiCcCtrl29Coarse                     = 29,
	AkMidiCcCtrl30Coarse                     = 30,
	AkMidiCcCtrl31Coarse                     = 31,
	AkMidiCcBankSelectFine                   = 32,
	AkMidiCcModWheelFine                     = 33,
	AkMidiCcBreathCtrlFine                   = 34,
	AkMidiCcCtrl3Fine                        = 35,
	AkMidiCcFootPedalFine                    = 36,
	AkMidiCcPortamentoFine                   = 37,
	AkMidiCcDataEntryFine                    = 38,
	AkMidiCcVolumeFine                       = 39,
	AkMidiCcBalanceFine                      = 40,
	AkMidiCcCtrl9Fine                        = 41,
	AkMidiCcPanPositionFine                  = 42,
	AkMidiCcExpressionFine                   = 43,
	AkMidiCcEffectCtrl1Fine                  = 44,
	AkMidiCcEffectCtrl2Fine                  = 45,
	AkMidiCcCtrl14Fine                       = 46,
	AkMidiCcCtrl15Fine                       = 47,
	AkMidiCcCtrl20Fine                       = 52,
	AkMidiCcCtrl21Fine                       = 53,
	AkMidiCcCtrl22Fine                       = 54,
	AkMidiCcCtrl23Fine                       = 55,
	AkMidiCcCtrl24Fine                       = 56,
	AkMidiCcCtrl25Fine                       = 57,
	AkMidiCcCtrl26Fine                       = 58,
	AkMidiCcCtrl27Fine                       = 59,
	AkMidiCcCtrl28Fine                       = 60,
	AkMidiCcCtrl29Fine                       = 61,
	AkMidiCcCtrl30Fine                       = 62,
	AkMidiCcCtrl31Fine                       = 63,
	AkMidiCcHoldPedal                        = 64,
	AkMidiCcPortamentoOnOff                  = 65,
	AkMidiCcSustenutoPedal                   = 66,
	AkMidiCcSoftPedal                        = 67,
	AkMidiCcLegatoPedal                      = 68,
	AkMidiCcHoldPedal2                       = 69,
	AkMidiCcSoundVariation                   = 70,
	AkMidiCcSoundTimbre                      = 71,
	AkMidiCcSoundReleaseTime                 = 72,
	AkMidiCcSoundAttackTime                  = 73,
	AkMidiCcSoundBrightness                  = 74,
	AkMidiCcSoundCtrl6                       = 75,
	AkMidiCcSoundCtrl7                       = 76,
	AkMidiCcSoundCtrl8                       = 77,
	AkMidiCcSoundCtrl9                       = 78,
	AkMidiCcSoundCtrl10                      = 79,
	AkMidiCcGeneralButton1                   = 80,
	AkMidiCcGeneralButton2                   = 81,
	AkMidiCcGeneralButton3                   = 82,
	AkMidiCcGeneralButton4                   = 83,
	AkMidiCcReverbLevel                      = 91,
	AkMidiCcTremoloLevel                     = 92,
	AkMidiCcChorusLevel                      = 93,
	AkMidiCcCelesteLevel                     = 94,
	AkMidiCcPhaserLevel                      = 95,
	AkMidiCcDataButtonP1                     = 96,
	AkMidiCcDataButtonM1                     = 97,
	AkMidiCcNonRegisterCoarse                = 98,
	AkMidiCcNonRegisterFine                  = 99,
	AkMidiCcAllSoundOff                      = 120,
	AkMidiCcAllControllersOff                = 121,
	AkMidiCcLocalKeyboard                    = 122,
	AkMidiCcAllNotesOff                      = 123,
	AkMidiCcOmniModeOff                      = 124,
	AkMidiCcOmniModeOn                       = 125,
	AkMidiCcOmniMonophonicOn                 = 126,
	AkMidiCcOmniPolyphonicOn                 = 127,
	EAkMidiCcValues_MAX                      = 128,
};

// Enum AkAudio.AkCodecId
// NumValues: 0x000A
enum class EAkCodecId : uint8
{
	None                                     = 0,
	PCM                                      = 1,
	ADPCM                                    = 2,
	XMA                                      = 3,
	Vorbis                                   = 4,
	ATRAC9                                   = 12,
	OpusNX                                   = 17,
	AkOpus                                   = 19,
	AkOpusWEM                                = 20,
	AkCodecId_MAX                            = 21,
};

// Enum AkAudio.AkMeshType
// NumValues: 0x0003
enum class EAkMeshType : uint8
{
	StaticMesh                               = 0,
	CollisionMesh                            = 1,
	AkMeshType_MAX                           = 2,
};

// Enum AkAudio.EAkPanningRule
// NumValues: 0x0003
enum class EAkPanningRule : uint32
{
	Speakers                                 = 0,
	Headphones                               = 1,
	EAkPanningRule_MAX                       = 2,
};

// Enum AkAudio.EAkChannelConfigType
// NumValues: 0x0004
enum class EAkChannelConfigType : uint32
{
	Anonymous                                = 0,
	Standard                                 = 1,
	Ambisonic                                = 2,
	EAkChannelConfigType_MAX                 = 3,
};

// Enum AkAudio.EAkChannelMask
// NumValues: 0x0011
enum class EAkChannelMask : uint8
{
	FrontLeft                                = 0,
	FrontRight                               = 1,
	FrontCenter                              = 2,
	LowFrequency                             = 3,
	BackLeft                                 = 4,
	BackRight                                = 5,
	BackCenter                               = 8,
	SideLeft                                 = 9,
	SideRight                                = 10,
	Top                                      = 11,
	HeightFrontLeft                          = 12,
	HeightFrontCenter                        = 13,
	HeightFrontRight                         = 14,
	HeightBackLeft                           = 15,
	HeightBackCenter                         = 16,
	HeightBackRight                          = 17,
	EAkChannelMask_MAX                       = 18,
};

// Enum AkAudio.EAkCommSystem
// NumValues: 0x0003
enum class EAkCommSystem : uint32
{
	Socket                                   = 0,
	HTCS                                     = 1,
	EAkCommSystem_MAX                        = 2,
};

// Enum AkAudio.EAkCollisionChannel
// NumValues: 0x000A
enum class EAkCollisionChannel : uint8
{
	EAKCC_WorldStatic                        = 0,
	EAKCC_WorldDynamic                       = 1,
	EAKCC_Pawn                               = 2,
	EAKCC_Visibility                         = 3,
	EAKCC_Camera                             = 4,
	EAKCC_PhysicsBody                        = 5,
	EAKCC_Vehicle                            = 6,
	EAKCC_Destructible                       = 7,
	EAKCC_UseIntegrationSettingsDefault      = 8,
	EAKCC_MAX                                = 9,
};

// Enum AkAudio.EAkUnrealAudioRouting
// NumValues: 0x0007
enum class EAkUnrealAudioRouting : uint32
{
	Custom                                   = 0,
	Separate                                 = 1,
	AudioLink                                = 2,
	AudioMixer                               = 3,
	EnableWwiseOnly                          = 4,
	EnableUnrealOnly                         = 5,
	EAkUnrealAudioRouting_MAX                = 6,
};

// Enum AkAudio.EAkFitToGeometryMode
// NumValues: 0x0004
enum class EAkFitToGeometryMode : uint8
{
	OrientedBox                              = 0,
	AlignedBox                               = 1,
	ConvexPolyhedron                         = 2,
	EAkFitToGeometryMode_MAX                 = 3,
};

// ScriptStruct AkAudio.AkAdvancedInitializationSettings
// 0x0030 (0x0030 - 0x0000)
struct FAkAdvancedInitializationSettings
{
public:
	uint32                                        IO_MemorySize;                                     // 0x0000(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint32                                        IO_Granularity;                                    // 0x0004(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         TargetAutoStreamBufferLength;                      // 0x0008(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          UseStreamCache;                                    // 0x000C(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	uint32                                        MaximumPinnedBytesInCache;                         // 0x0010(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          EnableGameSyncPreparation;                         // 0x0014(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	uint32                                        ContinuousPlaybackLookAhead;                       // 0x0018(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint32                                        MonitorQueuePoolSize;                              // 0x001C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint32                                        MaximumHardwareTimeoutMs;                          // 0x0020(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          DebugOutOfRangeCheckEnabled;                       // 0x0024(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         DebugOutOfRangeLimit;                              // 0x0028(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint32                                        VmPageSize;                                        // 0x002C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct AkAudio.AkAdvancedInitializationSettingsWithMultiCoreRendering
// 0x000C (0x003C - 0x0030)
struct FAkAdvancedInitializationSettingsWithMultiCoreRendering : public FAkAdvancedInitializationSettings
{
public:
	bool                                          EnableMultiCoreRendering;                          // 0x0030(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	uint32                                        MaxNumJobWorkers;                                  // 0x0034(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint32                                        JobWorkerMaxExecutionTimeUSec;                     // 0x0038(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct AkAudio.AkAndroidAdvancedInitializationSettings
// 0x0008 (0x0044 - 0x003C)
struct FAkAndroidAdvancedInitializationSettings final : public FAkAdvancedInitializationSettingsWithMultiCoreRendering
{
public:
	uint32                                        AudioAPI;                                          // 0x003C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          RoundFrameSizeToHardwareSize;                      // 0x0040(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bVerboseSink;                                      // 0x0041(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_42[0x2];                                       // 0x0042(0x0002)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct AkAudio.AkGeometrySurfacePropertiesToMap
// 0x0038 (0x0038 - 0x0000)
struct FAkGeometrySurfacePropertiesToMap final
{
public:
	TSoftObjectPtr<class UAkAcousticTexture>      AcousticTexture;                                   // 0x0000(0x0030)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         OcclusionValue;                                    // 0x0030(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct AkAudio.AKWaapiJsonObject
// 0x0010 (0x0010 - 0x0000)
struct alignas(0x08) FAKWaapiJsonObject final
{
public:
	uint8                                         Pad_0[0x10];                                       // 0x0000(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct AkAudio.AkMidiEventBase
// 0x0002 (0x0002 - 0x0000)
struct FAkMidiEventBase
{
public:
	EAkMidiEventType                              Type;                                              // 0x0000(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Chan;                                              // 0x0001(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct AkAudio.AkMidiGeneric
// 0x0002 (0x0004 - 0x0002)
struct FAkMidiGeneric final : public FAkMidiEventBase
{
public:
	uint8                                         Param1;                                            // 0x0002(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Param2;                                            // 0x0003(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct AkAudio.AkWaapiSubscriptionId
// 0x0008 (0x0008 - 0x0000)
struct alignas(0x08) FAkWaapiSubscriptionId final
{
public:
	uint8                                         Pad_0[0x8];                                        // 0x0000(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct AkAudio.AkAudioSession
// 0x000C (0x000C - 0x0000)
struct FAkAudioSession final
{
public:
	EAkAudioSessionCategory                       AudioSessionCategory;                              // 0x0000(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint32                                        AudioSessionCategoryOptions;                       // 0x0004(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EAkAudioSessionMode                           AudioSessionMode;                                  // 0x0008(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct AkAudio.AkChannelMask
// 0x0004 (0x0004 - 0x0000)
struct FAkChannelMask final
{
public:
	int32                                         ChannelMask;                                       // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct AkAudio.AkOutputSettings
// 0x0010 (0x0010 - 0x0000)
struct FAkOutputSettings final
{
public:
	class UAkAudioDeviceShareSet*                 AudioDeviceShareSet;                               // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         IdDevice;                                          // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EPanningRule                                  PanRule;                                           // 0x000C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EAkChannelConfiguration                       ChannelConfig;                                     // 0x000D(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_E[0x2];                                        // 0x000E(0x0002)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct AkAudio.AkMidiNoteOnOff
// 0x0002 (0x0004 - 0x0002)
struct FAkMidiNoteOnOff final : public FAkMidiEventBase
{
public:
	uint8                                         Note;                                              // 0x0002(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Velocity;                                          // 0x0003(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct AkAudio.AkMidiCc
// 0x0002 (0x0004 - 0x0002)
struct FAkMidiCc final : public FAkMidiEventBase
{
public:
	EAkMidiCcValues                               Cc;                                                // 0x0002(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Value;                                             // 0x0003(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct AkAudio.AkMidiPitchBend
// 0x0006 (0x0008 - 0x0002)
struct FAkMidiPitchBend final : public FAkMidiEventBase
{
public:
	uint8                                         ValueLsb;                                          // 0x0002(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         ValueMsb;                                          // 0x0003(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         FullValue;                                         // 0x0004(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct AkAudio.AkMidiNoteAftertouch
// 0x0002 (0x0004 - 0x0002)
struct FAkMidiNoteAftertouch final : public FAkMidiEventBase
{
public:
	uint8                                         Note;                                              // 0x0002(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Value;                                             // 0x0003(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct AkAudio.AkMidiChannelAftertouch
// 0x0001 (0x0003 - 0x0002)
struct FAkMidiChannelAftertouch final : public FAkMidiEventBase
{
public:
	uint8                                         Value;                                             // 0x0002(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct AkAudio.AkMidiProgramChange
// 0x0001 (0x0003 - 0x0002)
struct FAkMidiProgramChange final : public FAkMidiEventBase
{
public:
	uint8                                         ProgramNum;                                        // 0x0002(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct AkAudio.AkSegmentInfo
// 0x0024 (0x0024 - 0x0000)
struct FAkSegmentInfo final
{
public:
	int32                                         CurrentPosition;                                   // 0x0000(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         PreEntryDuration;                                  // 0x0004(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ActiveDuration;                                    // 0x0008(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         PostExitDuration;                                  // 0x000C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         RemainingLookAheadTime;                            // 0x0010(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         BeatDuration;                                      // 0x0014(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         BarDuration;                                       // 0x0018(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         GridDuration;                                      // 0x001C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         GridOffset;                                        // 0x0020(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct AkAudio.AkExternalSourceInfo
// 0x0038 (0x0038 - 0x0000)
struct FAkExternalSourceInfo final
{
public:
	class FString                                 ExternalSrcName;                                   // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EAkCodecId                                    CodecID;                                           // 0x0010(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Filename;                                          // 0x0018(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkExternalMediaAsset*                  ExternalSourceAsset;                               // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          IsStreamed;                                        // 0x0030(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct AkAudio.AkReflectImageParam
// 0x0038 (0x0038 - 0x0000)
struct alignas(0x08) FAkReflectImageParam final
{
public:
	uint8                                         Pad_0[0x38];                                       // 0x0000(0x0038)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct AkAudio.AkGeometrySurfaceOverride
// 0x0018 (0x0018 - 0x0000)
struct FAkGeometrySurfaceOverride final
{
public:
	class UAkAcousticTexture*                     AcousticTexture;                                   // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bEnableOcclusionOverride;                          // 0x0008(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         OcclusionValue;                                    // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SurfaceArea;                                       // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct AkAudio.AkAcousticSurface
// 0x0018 (0x0018 - 0x0000)
struct FAkAcousticSurface final
{
public:
	uint32                                        Texture;                                           // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Occlusion;                                         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Name;                                              // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct AkAudio.AkTriangle
// 0x0008 (0x0008 - 0x0000)
struct FAkTriangle final
{
public:
	uint16                                        Point0;                                            // 0x0000(0x0002)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint16                                        Point1;                                            // 0x0002(0x0002)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint16                                        Point2;                                            // 0x0004(0x0002)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint16                                        Surface;                                           // 0x0006(0x0002)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct AkAudio.AkGeometryData
// 0x0050 (0x0050 - 0x0000)
struct FAkGeometryData final
{
public:
	TArray<struct FVector>                        Vertices;                                          // 0x0000(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FAkAcousticSurface>             Surfaces;                                          // 0x0010(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FAkTriangle>                    Triangles;                                         // 0x0020(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class UPhysicalMaterial*>              ToOverrideAcousticTexture;                         // 0x0030(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class UPhysicalMaterial*>              ToOverrideOcclusion;                               // 0x0040(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// ScriptStruct AkAudio.AkHololensAdvancedInitializationSettings
// 0x0004 (0x0040 - 0x003C)
struct FAkHololensAdvancedInitializationSettings final : public FAkAdvancedInitializationSettingsWithMultiCoreRendering
{
public:
	bool                                          UseHeadMountedDisplayAudioDevice;                  // 0x003C(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct AkAudio.AkMainOutputSettings
// 0x0028 (0x0028 - 0x0000)
struct FAkMainOutputSettings final
{
public:
	class FString                                 AudioDeviceShareSet;                               // 0x0000(0x0010)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint32                                        DeviceID;                                          // 0x0010(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EAkPanningRule                                PanningRule;                                       // 0x0014(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EAkChannelConfigType                          ChannelConfigType;                                 // 0x0018(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint32                                        ChannelMask;                                       // 0x001C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint32                                        NumberOfChannels;                                  // 0x0020(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct AkAudio.AkSpatialAudioSettings
// 0x0028 (0x0028 - 0x0000)
struct FAkSpatialAudioSettings final
{
public:
	uint32                                        MaxSoundPropagationDepth;                          // 0x0000(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MovementThreshold;                                 // 0x0004(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint32                                        NumberOfPrimaryRays;                               // 0x0008(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint32                                        ReflectionOrder;                                   // 0x000C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint32                                        DiffractionOrder;                                  // 0x0010(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint32                                        DiffractionOnReflectionsOrder;                     // 0x0014(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaximumPathLength;                                 // 0x0018(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CPULimitPercentage;                                // 0x001C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint32                                        LoadBalancingSpread;                               // 0x0020(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          EnableGeometricDiffractionAndTransmission;         // 0x0024(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          CalcEmitterVirtualPosition;                        // 0x0025(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_26[0x2];                                       // 0x0026(0x0002)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct AkAudio.AkCommunicationSettings
// 0x0018 (0x0018 - 0x0000)
struct FAkCommunicationSettings
{
public:
	uint32                                        PoolSize;                                          // 0x0000(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint16                                        DiscoveryBroadcastPort;                            // 0x0004(0x0002)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint16                                        CommandPort;                                       // 0x0006(0x0002)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 NetworkName;                                       // 0x0008(0x0010)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct AkAudio.AkCommunicationSettingsWithSystemInitialization
// 0x0008 (0x0020 - 0x0018)
struct FAkCommunicationSettingsWithSystemInitialization final : public FAkCommunicationSettings
{
public:
	bool                                          InitializeSystemComms;                             // 0x0018(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct AkAudio.AkCommunicationSettingsWithCommSelection
// 0x0008 (0x0020 - 0x0018)
struct FAkCommunicationSettingsWithCommSelection final : public FAkCommunicationSettings
{
public:
	EAkCommSystem                                 CommunicationSystem;                               // 0x0018(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct AkAudio.AkCommonInitializationSettings
// 0x0068 (0x0068 - 0x0000)
struct FAkCommonInitializationSettings
{
public:
	uint32                                        MaximumNumberOfMemoryPools;                        // 0x0000(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint32                                        MaximumNumberOfPositioningPaths;                   // 0x0004(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint32                                        CommandQueueSize;                                  // 0x0008(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint32                                        SamplesPerFrame;                                   // 0x000C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAkMainOutputSettings                  MainOutputSettings;                                // 0x0010(0x0028)(Edit, NativeAccessSpecifierPublic)
	float                                         StreamingLookAheadRatio;                           // 0x0038(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint16                                        NumberOfRefillsInVoice;                            // 0x003C(0x0002)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3E[0x2];                                       // 0x003E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAkSpatialAudioSettings                SpatialAudioSettings;                              // 0x0040(0x0028)(Edit, NoDestructor, NativeAccessSpecifierPublic)
};

// ScriptStruct AkAudio.AkCommonInitializationSettingsWithSampleRate
// 0x0008 (0x0070 - 0x0068)
struct FAkCommonInitializationSettingsWithSampleRate final : public FAkCommonInitializationSettings
{
public:
	uint32                                        SampleRate;                                        // 0x0068(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct AkAudio.AkIOSAdvancedInitializationSettings
// 0x0000 (0x003C - 0x003C)
struct FAkIOSAdvancedInitializationSettings final : public FAkAdvancedInitializationSettingsWithMultiCoreRendering
{
};

// ScriptStruct AkAudio.AkBoolPropertyToControl
// 0x0010 (0x0010 - 0x0000)
struct FAkBoolPropertyToControl final
{
public:
	class FString                                 ItemProperty;                                      // 0x0000(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct AkAudio.AkPropertyToControl
// 0x0010 (0x0010 - 0x0000)
struct FAkPropertyToControl final
{
public:
	class FString                                 ItemProperty;                                      // 0x0000(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct AkAudio.AkPS5AdvancedInitializationSettings
// 0x0014 (0x0050 - 0x003C)
struct FAkPS5AdvancedInitializationSettings final : public FAkAdvancedInitializationSettingsWithMultiCoreRendering
{
public:
	bool                                          UseHardwareCodecLowLatencyMode;                    // 0x003C(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bVorbisHwAcceleration;                             // 0x003D(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bEnable3DAudioSync;                                // 0x003E(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3F[0x1];                                       // 0x003F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	uint32                                        uNumOperationsForHwMixing;                         // 0x0040(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bPlotQueueLevel;                                   // 0x0044(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	uint32                                        NumAudioOut2Ports;                                 // 0x0048(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint32                                        NumAudioOut2ObjectPorts;                           // 0x004C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct AkAudio.AkReverbDescriptor
// 0x0028 (0x0028 - 0x0000)
struct FAkReverbDescriptor final
{
public:
	uint8                                         Pad_0[0x18];                                       // 0x0000(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    Primitive;                                         // 0x0018(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_20[0x8];                                       // 0x0020(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct AkAudio.AkAcousticTextureParams
// 0x0030 (0x0030 - 0x0000)
struct FAkAcousticTextureParams final
{
public:
	struct FVector4                               AbsorptionValues;                                  // 0x0000(0x0020)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_20[0x10];                                      // 0x0020(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct AkAudio.AkWwiseObjectDetails
// 0x0030 (0x0030 - 0x0000)
struct FAkWwiseObjectDetails final
{
public:
	class FString                                 ItemName;                                          // 0x0000(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ItemPath;                                          // 0x0010(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ItemId;                                            // 0x0020(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct AkAudio.AkWwiseItemToControl
// 0x0040 (0x0040 - 0x0000)
struct FAkWwiseItemToControl final
{
public:
	struct FAkWwiseObjectDetails                  ItemPicked;                                        // 0x0000(0x0030)(Edit, EditConst, NativeAccessSpecifierPublic)
	class FString                                 ItemPath;                                          // 0x0030(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct AkAudio.AkSurfaceEdgeVerts
// 0x0030 (0x0030 - 0x0000)
struct alignas(0x08) FAkSurfaceEdgeVerts final
{
public:
	uint8                                         Pad_0[0x30];                                       // 0x0000(0x0030)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct AkAudio.AkSurfaceEdgeInfo
// 0x0050 (0x0050 - 0x0000)
struct alignas(0x08) FAkSurfaceEdgeInfo final
{
public:
	uint8                                         Pad_0[0x50];                                       // 0x0000(0x0050)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct AkAudio.AkSurfacePoly
// 0x0018 (0x0018 - 0x0000)
struct FAkSurfacePoly final
{
public:
	class UAkAcousticTexture*                     Texture;                                           // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Occlusion;                                         // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          EnableSurface;                                     // 0x000C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         SurfaceArea;                                       // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct AkAudio.AkWaapiFieldNames
// 0x0010 (0x0010 - 0x0000)
struct FAkWaapiFieldNames final
{
public:
	class FString                                 FieldName;                                         // 0x0000(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct AkAudio.AkWaapiUri
// 0x0010 (0x0010 - 0x0000)
struct FAkWaapiUri final
{
public:
	class FString                                 Uri;                                               // 0x0000(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct AkAudio.AkWindowsAdvancedInitializationSettings
// 0x0008 (0x0044 - 0x003C)
struct FAkWindowsAdvancedInitializationSettings final : public FAkAdvancedInitializationSettingsWithMultiCoreRendering
{
public:
	bool                                          UseHeadMountedDisplayAudioDevice;                  // 0x003C(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	uint32                                        MaxSystemAudioObjects;                             // 0x0040(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct AkAudio.AkWinGDKAdvancedInitializationSettings
// 0x0008 (0x0044 - 0x003C)
struct FAkWinGDKAdvancedInitializationSettings final : public FAkAdvancedInitializationSettingsWithMultiCoreRendering
{
public:
	bool                                          UseHeadMountedDisplayAudioDevice;                  // 0x003C(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	uint32                                        uMaxSystemAudioObjects;                            // 0x0040(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct AkAudio.AkXSXAdvancedInitializationSettings
// 0x000C (0x0048 - 0x003C)
struct FAkXSXAdvancedInitializationSettings final : public FAkAdvancedInitializationSettingsWithMultiCoreRendering
{
public:
	uint16                                        MaximumNumberOfXMAVoices;                          // 0x003C(0x0002)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          UseHardwareCodecLowLatencyMode;                    // 0x003E(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3F[0x1];                                       // 0x003F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	uint16                                        MaximumNumberOfOpusVoices;                         // 0x0040(0x0002)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_42[0x2];                                       // 0x0042(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	uint32                                        uMaxSystemAudioObjects;                            // 0x0044(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct AkAudio.AkXSXApuHeapInitializationSettings
// 0x0008 (0x0008 - 0x0000)
struct FAkXSXApuHeapInitializationSettings final
{
public:
	uint32                                        CachedSize;                                        // 0x0000(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint32                                        NonCachedSize;                                     // 0x0004(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct AkAudio.MovieSceneAkAudioEventTemplate
// 0x0008 (0x0028 - 0x0020)
struct FMovieSceneAkAudioEventTemplate final : public FMovieSceneEvalTemplate
{
public:
	class UMovieSceneAkAudioEventSection*         Section;                                           // 0x0020(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct AkAudio.MovieSceneAkAudioRTPCTemplate
// 0x0008 (0x0028 - 0x0020)
struct FMovieSceneAkAudioRTPCTemplate final : public FMovieSceneEvalTemplate
{
public:
	class UMovieSceneAkAudioRTPCSection*          Section;                                           // 0x0020(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct AkAudio.MovieSceneTangentDataSerializationHelper
// 0x0014 (0x0014 - 0x0000)
struct FMovieSceneTangentDataSerializationHelper final
{
public:
	float                                         ArriveTangent;                                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         LeaveTangent;                                      // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ERichCurveTangentWeightMode                   TangentWeightMode;                                 // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ArriveTangentWeight;                               // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         LeaveTangentWeight;                                // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct AkAudio.MovieSceneFloatValueSerializationHelper
// 0x001C (0x001C - 0x0000)
struct FMovieSceneFloatValueSerializationHelper final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ERichCurveInterpMode                          InterpMode;                                        // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ERichCurveTangentMode                         TangentMode;                                       // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMovieSceneTangentDataSerializationHelper Tangent;                                           // 0x0008(0x0014)(NoDestructor, NativeAccessSpecifierPublic)
};

// ScriptStruct AkAudio.MovieSceneFloatChannelSerializationHelper
// 0x0030 (0x0030 - 0x0000)
struct FMovieSceneFloatChannelSerializationHelper final
{
public:
	ERichCurveExtrapolation                       PreInfinityExtrap;                                 // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ERichCurveExtrapolation                       PostInfinityExtrap;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 Times;                                             // 0x0008(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FMovieSceneFloatValueSerializationHelper> Values;                                            // 0x0018(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
	float                                         DefaultValue;                                      // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bHasDefaultValue;                                  // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

}

