#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: DataBaseConditions

#include "Basic.hpp"


namespace SDK::Params
{

// PythonFunction DataBaseConditions.BeAfterSpecialBuff.GetConditionHeroIDsAny
// 0x0050 (0x0050 - 0x0000)
struct BeAfterSpecialBuff_GetConditionHeroIDsAny final
{
public:
	TSet<class FString>                           ReturnValue;                                       // 0x0000(0x0050)(Parm, OutParm, ReturnParm)
};

// PythonFunction DataBaseConditions.BeInSpecialBuff.GetConditionHeroIDsAll
// 0x0050 (0x0050 - 0x0000)
struct BeInSpecialBuff_GetConditionHeroIDsAll final
{
public:
	TSet<class FString>                           ReturnValue;                                       // 0x0000(0x0050)(Parm, OutParm, ReturnParm)
};

// PythonFunction DataBaseConditions.CheckBeInChange.GetConditionHeroIDsAll
// 0x0050 (0x0050 - 0x0000)
struct CheckBeInChange_GetConditionHeroIDsAll final
{
public:
	TSet<class FString>                           ReturnValue;                                       // 0x0000(0x0050)(Parm, OutParm, ReturnParm)
};

// PythonFunction DataBaseConditions.BeWithOtherHero.GetConditionHeroIDsAll
// 0x0050 (0x0050 - 0x0000)
struct BeWithOtherHero_GetConditionHeroIDsAll final
{
public:
	TSet<class FString>                           ReturnValue;                                       // 0x0000(0x0050)(Parm, OutParm, ReturnParm)
};

// PythonFunction DataBaseConditions.BeWithOtherHero.GetConditionHeroIDsAny
// 0x0050 (0x0050 - 0x0000)
struct BeWithOtherHero_GetConditionHeroIDsAny final
{
public:
	TSet<class FString>                           ReturnValue;                                       // 0x0000(0x0050)(Parm, OutParm, ReturnParm)
};

// PythonFunction DataBaseConditions.MapCondition.GetConditionMapIDsAll
// 0x0050 (0x0050 - 0x0000)
struct MapCondition_GetConditionMapIDsAll final
{
public:
	TSet<class FString>                           ReturnValue;                                       // 0x0000(0x0050)(Parm, OutParm, ReturnParm)
};

}

