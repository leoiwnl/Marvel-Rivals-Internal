#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PyShowActorBase

#include "Basic.hpp"

#include "PyShowActorBase_classes.hpp"
#include "PyShowActorBase_parameters.hpp"


namespace SDK
{

// PythonFunction PyShowActorBase.PyShowActorBase.OnLikeFXFinished
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void APyShowActorBase::OnLikeFXFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyShowActorBase", "OnLikeFXFinished");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyShowActorBase.PyShowActorBase.OnMVPFinished
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void APyShowActorBase::OnMVPFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyShowActorBase", "OnMVPFinished");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyShowActorBase.PyShowActorBase.OnRotatioFinished
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void APyShowActorBase::OnRotatioFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyShowActorBase", "OnRotatioFinished");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyShowActorBase.PyShowActorBase.OnHalfPersonalityFinished
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void APyShowActorBase::OnHalfPersonalityFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyShowActorBase", "OnHalfPersonalityFinished");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyShowActorBase.PyShowActorBase.OnStandPersonalityFinished
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void APyShowActorBase::OnStandPersonalityFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyShowActorBase", "OnStandPersonalityFinished");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyShowActorBase.PyShowActorBase.OnHalf2StandFinished
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void APyShowActorBase::OnHalf2StandFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyShowActorBase", "OnHalf2StandFinished");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyShowActorBase.PyShowActorBase.OnStandHalf2Finished
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void APyShowActorBase::OnStandHalf2Finished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyShowActorBase", "OnStandHalf2Finished");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyShowActorBase.PyShowActorBase.OnHoverStandFinished
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void APyShowActorBase::OnHoverStandFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyShowActorBase", "OnHoverStandFinished");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyShowActorBase.PyShowActorBase.OnHoverIdleFinished
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void APyShowActorBase::OnHoverIdleFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyShowActorBase", "OnHoverIdleFinished");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyShowActorBase.PyShowActorBase.OnCardPoseFinished
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void APyShowActorBase::OnCardPoseFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyShowActorBase", "OnCardPoseFinished");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyShowActorBase.PyShowActorBase.OnLevelSequenceFinished
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ULevelSequence*                   LevelSequence                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void APyShowActorBase::OnLevelSequenceFinished(class ULevelSequence* LevelSequence)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyShowActorBase", "OnLevelSequenceFinished");

	Params::PyShowActorBase_OnLevelSequenceFinished Parms{};

	Parms.LevelSequence = LevelSequence;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyShowActorBase.PyShowActorBase.SetBindingTagInLevelSequenceActor
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ALevelSequenceActor*              ls_actor                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void APyShowActorBase::SetBindingTagInLevelSequenceActor(class ALevelSequenceActor* ls_actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyShowActorBase", "SetBindingTagInLevelSequenceActor");

	Params::PyShowActorBase_SetBindingTagInLevelSequenceActor Parms{};

	Parms.ls_actor = ls_actor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyShowActorBase.PyShowActorBase.PlayHeroGaller_HoverStand
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsPlay_HoverStand                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APyShowActorBase::PlayHeroGaller_HoverStand(bool IsPlay_HoverStand)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyShowActorBase", "PlayHeroGaller_HoverStand");

	Params::PyShowActorBase_PlayHeroGaller_HoverStand Parms{};

	Parms.IsPlay_HoverStand = IsPlay_HoverStand;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyShowActorBase.PyShowActorBase.PlayHeroGaller_CardPose
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsPlay_CardPose                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APyShowActorBase::PlayHeroGaller_CardPose(bool IsPlay_CardPose)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyShowActorBase", "PlayHeroGaller_CardPose");

	Params::PyShowActorBase_PlayHeroGaller_CardPose Parms{};

	Parms.IsPlay_CardPose = IsPlay_CardPose;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyShowActorBase.PyShowActorBase.PlayHeroGallerAnim
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void APyShowActorBase::PlayHeroGallerAnim()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyShowActorBase", "PlayHeroGallerAnim");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyShowActorBase.PyShowActorBase.PlayLikeFX
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void APyShowActorBase::PlayLikeFX()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyShowActorBase", "PlayLikeFX");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyShowActorBase.PyShowActorBase.PlayLikeSwitchAnim
// (Native, Public, BlueprintCallable)

void APyShowActorBase::PlayLikeSwitchAnim()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyShowActorBase", "PlayLikeSwitchAnim");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyShowActorBase.PyShowActorBase.RePlayLikeAnim
// (Native, Public, BlueprintCallable)

void APyShowActorBase::RePlayLikeAnim()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyShowActorBase", "RePlayLikeAnim");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyShowActorBase.PyShowActorBase.PlayLikeAnim
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void APyShowActorBase::PlayLikeAnim()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyShowActorBase", "PlayLikeAnim");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyShowActorBase.PyShowActorBase.StopTMVPAnim
// (Native, Public, BlueprintCallable)

void APyShowActorBase::StopTMVPAnim()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyShowActorBase", "StopTMVPAnim");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyShowActorBase.PyShowActorBase.PlayMVPAnim
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ULevelSequence*                   MVPLevelSequence                                       (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void APyShowActorBase::PlayMVPAnim(class ULevelSequence* MVPLevelSequence)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyShowActorBase", "PlayMVPAnim");

	Params::PyShowActorBase_PlayMVPAnim Parms{};

	Parms.MVPLevelSequence = MVPLevelSequence;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyShowActorBase.PyShowActorBase.OnPlayEmoteAnimItem
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           ItemId                                                 (Parm, ZeroConstructor, HasGetValueTypeHash)

void APyShowActorBase::OnPlayEmoteAnimItem(const class FString& ItemId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyShowActorBase", "OnPlayEmoteAnimItem");

	Params::PyShowActorBase_OnPlayEmoteAnimItem Parms{};

	Parms.ItemId = std::move(ItemId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyShowActorBase.PyShowActorBase.PlayEmoteAnim
// (Native, Public, BlueprintCallable)
// Parameters:
// class FString                           ItemId                                                 (Parm, ZeroConstructor, HasGetValueTypeHash)

void APyShowActorBase::PlayEmoteAnim(const class FString& ItemId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyShowActorBase", "PlayEmoteAnim");

	Params::PyShowActorBase_PlayEmoteAnim Parms{};

	Parms.ItemId = std::move(ItemId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyShowActorBase.PyShowActorBase.StopTurnAnim
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void APyShowActorBase::StopTurnAnim()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyShowActorBase", "StopTurnAnim");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyShowActorBase.PyShowActorBase.PlayTurnAnim
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void APyShowActorBase::PlayTurnAnim()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyShowActorBase", "PlayTurnAnim");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyShowActorBase.PyShowActorBase.JumpHalfIdle
// (Native, Public, BlueprintCallable)

void APyShowActorBase::JumpHalfIdle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyShowActorBase", "JumpHalfIdle");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyShowActorBase.PyShowActorBase.JumpStandIdle
// (Native, Public, BlueprintCallable)

void APyShowActorBase::JumpStandIdle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyShowActorBase", "JumpStandIdle");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyShowActorBase.PyShowActorBase.PlayToggleAnim
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsToggleHalf_0                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsHalfToHalf_0                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsDynamic                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APyShowActorBase::PlayToggleAnim(bool IsToggleHalf_0, bool IsHalfToHalf_0, bool IsDynamic)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyShowActorBase", "PlayToggleAnim");

	Params::PyShowActorBase_PlayToggleAnim Parms{};

	Parms.IsToggleHalf_0 = IsToggleHalf_0;
	Parms.IsHalfToHalf_0 = IsHalfToHalf_0;
	Parms.IsDynamic = IsDynamic;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyShowActorBase.PyShowActorBase.PlayShowAnim
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsPlay                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APyShowActorBase::PlayShowAnim(bool IsPlay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyShowActorBase", "PlayShowAnim");

	Params::PyShowActorBase_PlayShowAnim Parms{};

	Parms.IsPlay = IsPlay;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyShowActorBase.PyShowActorBase.SetIsPlayIdleAnim
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsPlayIdleAnim                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APyShowActorBase::SetIsPlayIdleAnim(bool IsPlayIdleAnim)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyShowActorBase", "SetIsPlayIdleAnim");

	Params::PyShowActorBase_SetIsPlayIdleAnim Parms{};

	Parms.IsPlayIdleAnim = IsPlayIdleAnim;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyShowActorBase.PyShowActorBase.LoadRimlightDetailOutlineFinished
// (Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                          OverlayMaterial                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void APyShowActorBase::LoadRimlightDetailOutlineFinished(class UObject* OverlayMaterial)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyShowActorBase", "LoadRimlightDetailOutlineFinished");

	Params::PyShowActorBase_LoadRimlightDetailOutlineFinished Parms{};

	Parms.OverlayMaterial = OverlayMaterial;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyShowActorBase.PyShowActorBase.SetMeshRotation
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Yaw                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsReset                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APyShowActorBase::SetMeshRotation(float Yaw, bool IsReset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyShowActorBase", "SetMeshRotation");

	Params::PyShowActorBase_SetMeshRotation Parms{};

	Parms.Yaw = Yaw;
	Parms.IsReset = IsReset;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyShowActorBase.PyShowActorBase.OnRotatioAngleSignChange
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   ChangesNum                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APyShowActorBase::OnRotatioAngleSignChange(int32 ChangesNum)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyShowActorBase", "OnRotatioAngleSignChange");

	Params::PyShowActorBase_OnRotatioAngleSignChange Parms{};

	Parms.ChangesNum = ChangesNum;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyShowActorBase.PyShowActorBase.OnMeshRotation
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Yaw                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   AnglePerSecond                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APyShowActorBase::OnMeshRotation(float Yaw, float AnglePerSecond)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyShowActorBase", "OnMeshRotation");

	Params::PyShowActorBase_OnMeshRotation Parms{};

	Parms.Yaw = Yaw;
	Parms.AnglePerSecond = AnglePerSecond;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyShowActorBase.PyShowActorBase.SetMeshsVisibleByTag
// (Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<class USkeletalMeshComponent*>   MeshList                                               (ConstParm, Parm, OutParm, ReferenceParm)
// struct FGameplayTagContainer            MeshTag                                                (ConstParm, Parm, OutParm, ReferenceParm)
// bool                                    Visible                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APyShowActorBase::SetMeshsVisibleByTag(const TArray<class USkeletalMeshComponent*>& MeshList, const struct FGameplayTagContainer& MeshTag, bool Visible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyShowActorBase", "SetMeshsVisibleByTag");

	Params::PyShowActorBase_SetMeshsVisibleByTag Parms{};

	Parms.MeshList = std::move(MeshList);
	Parms.MeshTag = std::move(MeshTag);
	Parms.Visible = Visible;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyShowActorBase.PyShowActorBase.SetMeshVisibleByTag
// (Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class USkeletalMeshComponent*           Mesh                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FGameplayTagContainer            MeshTag                                                (ConstParm, Parm, OutParm, ReferenceParm)
// bool                                    Visible                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APyShowActorBase::SetMeshVisibleByTag(class USkeletalMeshComponent* Mesh, const struct FGameplayTagContainer& MeshTag, bool Visible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyShowActorBase", "SetMeshVisibleByTag");

	Params::PyShowActorBase_SetMeshVisibleByTag Parms{};

	Parms.Mesh = Mesh;
	Parms.MeshTag = std::move(MeshTag);
	Parms.Visible = Visible;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyShowActorBase.PyShowActorBase.SetMeshsVisible
// (Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    Visible                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<class USkeletalMeshComponent*>   MeshList                                               (ConstParm, Parm, OutParm, ReferenceParm)

void APyShowActorBase::SetMeshsVisible(bool Visible, const TArray<class USkeletalMeshComponent*>& MeshList)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyShowActorBase", "SetMeshsVisible");

	Params::PyShowActorBase_SetMeshsVisible Parms{};

	Parms.Visible = Visible;
	Parms.MeshList = std::move(MeshList);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyShowActorBase.PyShowActorBase.SetMeshVisible
// (Native, Public, BlueprintCallable)
// Parameters:
// bool                                    Visible                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class USkeletalMeshComponent*           Mesh                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void APyShowActorBase::SetMeshVisible(bool Visible, class USkeletalMeshComponent* Mesh)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyShowActorBase", "SetMeshVisible");

	Params::PyShowActorBase_SetMeshVisible Parms{};

	Parms.Visible = Visible;
	Parms.Mesh = Mesh;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyShowActorBase.PyShowActorBase.SetComponentsVisibleByTag
// (Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<class USceneComponent*>          ComponentList                                          (ConstParm, Parm, OutParm, ReferenceParm)
// struct FGameplayTagContainer            ComponentTag                                           (ConstParm, Parm, OutParm, ReferenceParm)
// bool                                    Visible                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APyShowActorBase::SetComponentsVisibleByTag(const TArray<class USceneComponent*>& ComponentList, const struct FGameplayTagContainer& ComponentTag, bool Visible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyShowActorBase", "SetComponentsVisibleByTag");

	Params::PyShowActorBase_SetComponentsVisibleByTag Parms{};

	Parms.ComponentList = std::move(ComponentList);
	Parms.ComponentTag = std::move(ComponentTag);
	Parms.Visible = Visible;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyShowActorBase.PyShowActorBase.SetComponentVisibleByTag
// (Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class USceneComponent*                  Component                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FGameplayTagContainer            ComponentTag                                           (ConstParm, Parm, OutParm, ReferenceParm)
// bool                                    Visible                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APyShowActorBase::SetComponentVisibleByTag(class USceneComponent* Component, const struct FGameplayTagContainer& ComponentTag, bool Visible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyShowActorBase", "SetComponentVisibleByTag");

	Params::PyShowActorBase_SetComponentVisibleByTag Parms{};

	Parms.Component = Component;
	Parms.ComponentTag = std::move(ComponentTag);
	Parms.Visible = Visible;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyShowActorBase.PyShowActorBase.SetComponentsVisible
// (Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    Visible                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<class USceneComponent*>          ComponentList                                          (ConstParm, Parm, OutParm, ReferenceParm)

void APyShowActorBase::SetComponentsVisible(bool Visible, const TArray<class USceneComponent*>& ComponentList)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyShowActorBase", "SetComponentsVisible");

	Params::PyShowActorBase_SetComponentsVisible Parms{};

	Parms.Visible = Visible;
	Parms.ComponentList = std::move(ComponentList);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyShowActorBase.PyShowActorBase.SetComponentVisible
// (Native, Public, BlueprintCallable)
// Parameters:
// bool                                    Visible                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class USceneComponent*                  Component                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void APyShowActorBase::SetComponentVisible(bool Visible, class USceneComponent* Component)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyShowActorBase", "SetComponentVisible");

	Params::PyShowActorBase_SetComponentVisible Parms{};

	Parms.Visible = Visible;
	Parms.Component = Component;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyShowActorBase.PyShowActorBase.ToggleCameraBlur
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bUseCameraBlur                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APyShowActorBase::ToggleCameraBlur(bool bUseCameraBlur)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyShowActorBase", "ToggleCameraBlur");

	Params::PyShowActorBase_ToggleCameraBlur Parms{};

	Parms.bUseCameraBlur = bUseCameraBlur;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyShowActorBase.PyShowActorBase.SetEnabledPostProcess
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsEnabledPostProcess_0                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APyShowActorBase::SetEnabledPostProcess(bool IsEnabledPostProcess_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyShowActorBase", "SetEnabledPostProcess");

	Params::PyShowActorBase_SetEnabledPostProcess Parms{};

	Parms.IsEnabledPostProcess_0 = IsEnabledPostProcess_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyShowActorBase.PyShowActorBase.SetMeshsPhysicsBlendWeight
// (Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class USkeletalMeshComponent*           Mesh                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// TArray<class FName>                     BoneNameList                                           (ConstParm, Parm, OutParm, ReferenceParm)
// bool                                    bIncludeSelf                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   PhysicsBlendWeight                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APyShowActorBase::SetMeshsPhysicsBlendWeight(class USkeletalMeshComponent* Mesh, const TArray<class FName>& BoneNameList, bool bIncludeSelf, float PhysicsBlendWeight)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyShowActorBase", "SetMeshsPhysicsBlendWeight");

	Params::PyShowActorBase_SetMeshsPhysicsBlendWeight Parms{};

	Parms.Mesh = Mesh;
	Parms.BoneNameList = std::move(BoneNameList);
	Parms.bIncludeSelf = bIncludeSelf;
	Parms.PhysicsBlendWeight = PhysicsBlendWeight;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyShowActorBase.PyShowActorBase.ResetAllPhysicsBlendWeightToMin
// (Native, Public, BlueprintCallable)
// Parameters:
// float                                   MinWeight                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APyShowActorBase::ResetAllPhysicsBlendWeightToMin(float MinWeight)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyShowActorBase", "ResetAllPhysicsBlendWeightToMin");

	Params::PyShowActorBase_ResetAllPhysicsBlendWeightToMin Parms{};

	Parms.MinWeight = MinWeight;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyShowActorBase.PyShowActorBase.ResetAllPhysicsBlendWeight
// (Native, Public, BlueprintCallable)
// Parameters:
// float                                   BlendWeight                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APyShowActorBase::ResetAllPhysicsBlendWeight(float BlendWeight)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyShowActorBase", "ResetAllPhysicsBlendWeight");

	Params::PyShowActorBase_ResetAllPhysicsBlendWeight Parms{};

	Parms.BlendWeight = BlendWeight;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyShowActorBase.PyShowActorBase.StopAllPhysicsBlendWeight
// (Native, Public, BlueprintCallable)

void APyShowActorBase::StopAllPhysicsBlendWeight()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyShowActorBase", "StopAllPhysicsBlendWeight");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyShowActorBase.PyShowActorBase.ReversePhysicsBlendWeight
// (Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class USkeletalMeshComponent*           Mesh                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// TArray<class FName>                     BoneNameList                                           (ConstParm, Parm, OutParm, ReferenceParm)
// bool                                    bIncludeSelf                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APyShowActorBase::ReversePhysicsBlendWeight(class USkeletalMeshComponent* Mesh, const TArray<class FName>& BoneNameList, bool bIncludeSelf)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyShowActorBase", "ReversePhysicsBlendWeight");

	Params::PyShowActorBase_ReversePhysicsBlendWeight Parms{};

	Parms.Mesh = Mesh;
	Parms.BoneNameList = std::move(BoneNameList);
	Parms.bIncludeSelf = bIncludeSelf;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyShowActorBase.PyShowActorBase.ForwardPhysicsBlendWeight
// (Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class USkeletalMeshComponent*           Mesh                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// TArray<class FName>                     BoneNameList                                           (ConstParm, Parm, OutParm, ReferenceParm)
// bool                                    bIncludeSelf                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APyShowActorBase::ForwardPhysicsBlendWeight(class USkeletalMeshComponent* Mesh, const TArray<class FName>& BoneNameList, bool bIncludeSelf)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyShowActorBase", "ForwardPhysicsBlendWeight");

	Params::PyShowActorBase_ForwardPhysicsBlendWeight Parms{};

	Parms.Mesh = Mesh;
	Parms.BoneNameList = std::move(BoneNameList);
	Parms.bIncludeSelf = bIncludeSelf;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyShowActorBase.PyShowActorBase.OnANSSetAllBodiesBelowSimulatePhysicsEnd
// (Native, Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USkeletalMeshComponent*           Mesh                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class FName                             BoneName                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bSimulatePhysics                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bIncludeSelf                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool APyShowActorBase::OnANSSetAllBodiesBelowSimulatePhysicsEnd(class USkeletalMeshComponent* Mesh, class FName BoneName, bool bSimulatePhysics, bool bIncludeSelf)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyShowActorBase", "OnANSSetAllBodiesBelowSimulatePhysicsEnd");

	Params::PyShowActorBase_OnANSSetAllBodiesBelowSimulatePhysicsEnd Parms{};

	Parms.Mesh = Mesh;
	Parms.BoneName = BoneName;
	Parms.bSimulatePhysics = bSimulatePhysics;
	Parms.bIncludeSelf = bIncludeSelf;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// PythonFunction PyShowActorBase.PyShowActorBase.OnANSSetAllBodiesBelowSimulatePhysicsBegin
// (Native, Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USkeletalMeshComponent*           Mesh                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class FName                             BoneName                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bSimulatePhysics                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bIncludeSelf                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool APyShowActorBase::OnANSSetAllBodiesBelowSimulatePhysicsBegin(class USkeletalMeshComponent* Mesh, class FName BoneName, bool bSimulatePhysics, bool bIncludeSelf)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyShowActorBase", "OnANSSetAllBodiesBelowSimulatePhysicsBegin");

	Params::PyShowActorBase_OnANSSetAllBodiesBelowSimulatePhysicsBegin Parms{};

	Parms.Mesh = Mesh;
	Parms.BoneName = BoneName;
	Parms.bSimulatePhysics = bSimulatePhysics;
	Parms.bIncludeSelf = bIncludeSelf;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// PythonFunction PyShowActorBase.PyShowActorBase.AutoReversePhysicsBlendWeight
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USkeletalMeshComponent*           Mesh                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// TArray<class FName>                     BoneNameList                                           (ConstParm, Parm, OutParm, ReferenceParm)
// bool                                    bIncludeSelf                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APyShowActorBase::AutoReversePhysicsBlendWeight(class USkeletalMeshComponent* Mesh, const TArray<class FName>& BoneNameList, bool bIncludeSelf)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyShowActorBase", "AutoReversePhysicsBlendWeight");

	Params::PyShowActorBase_AutoReversePhysicsBlendWeight Parms{};

	Parms.Mesh = Mesh;
	Parms.BoneNameList = std::move(BoneNameList);
	Parms.bIncludeSelf = bIncludeSelf;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyShowActorBase.PyShowActorBase.AutoForwardPhysicsBlendWeight
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USkeletalMeshComponent*           Mesh                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// TArray<class FName>                     BoneNameList                                           (ConstParm, Parm, OutParm, ReferenceParm)
// bool                                    bIncludeSelf                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APyShowActorBase::AutoForwardPhysicsBlendWeight(class USkeletalMeshComponent* Mesh, const TArray<class FName>& BoneNameList, bool bIncludeSelf)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyShowActorBase", "AutoForwardPhysicsBlendWeight");

	Params::PyShowActorBase_AutoForwardPhysicsBlendWeight Parms{};

	Parms.Mesh = Mesh;
	Parms.BoneNameList = std::move(BoneNameList);
	Parms.bIncludeSelf = bIncludeSelf;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyShowActorBase.PyShowActorBase.OnMeshPhysicsEnable
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bEnable                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APyShowActorBase::OnMeshPhysicsEnable(bool bEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyShowActorBase", "OnMeshPhysicsEnable");

	Params::PyShowActorBase_OnMeshPhysicsEnable Parms{};

	Parms.bEnable = bEnable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyShowActorBase.PyShowActorBase.SetCustomBoneChain
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USkeletalMeshComponent*           Mesh                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// TArray<struct FShowActorCustomPhysicsBlendConfig>PhysicsConfigs                                         (ConstParm, Parm, OutParm, ReferenceParm)

void APyShowActorBase::SetCustomBoneChain(class USkeletalMeshComponent* Mesh, const TArray<struct FShowActorCustomPhysicsBlendConfig>& PhysicsConfigs)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyShowActorBase", "SetCustomBoneChain");

	Params::PyShowActorBase_SetCustomBoneChain Parms{};

	Parms.Mesh = Mesh;
	Parms.PhysicsConfigs = std::move(PhysicsConfigs);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyShowActorBase.PyShowActorBase.CallExtensionFunction
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           func_name                                              (Parm, ZeroConstructor, HasGetValueTypeHash)

void APyShowActorBase::CallExtensionFunction(const class FString& func_name)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyShowActorBase", "CallExtensionFunction");

	Params::PyShowActorBase_CallExtensionFunction Parms{};

	Parms.func_name = std::move(func_name);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyShowActorBase.PyShowActorBase.SetShowActorStageChanged
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EShowActorStage                         ShowActorStage_0                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APyShowActorBase::SetShowActorStageChanged(EShowActorStage ShowActorStage_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyShowActorBase", "SetShowActorStageChanged");

	Params::PyShowActorBase_SetShowActorStageChanged Parms{};

	Parms.ShowActorStage_0 = ShowActorStage_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyShowActorBase.PyShowActorBase.SetComponentVisibility
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Visible                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APyShowActorBase::SetComponentVisibility(bool Visible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyShowActorBase", "SetComponentVisibility");

	Params::PyShowActorBase_SetComponentVisibility Parms{};

	Parms.Visible = Visible;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyShowActorBase.PyShowActorBase.SetVisible
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Visible                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APyShowActorBase::SetVisible(bool Visible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyShowActorBase", "SetVisible");

	Params::PyShowActorBase_SetVisible Parms{};

	Parms.Visible = Visible;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyShowActorBase.PyShowActorBase.OnAutoPlayShowAnim
// (Native, Public, BlueprintCallable)

void APyShowActorBase::OnAutoPlayShowAnim()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyShowActorBase", "OnAutoPlayShowAnim");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyShowActorBase.PyShowActorBase.OnReceiveAnyInputInThisFrame
// (Native, Public, BlueprintCallable)

void APyShowActorBase::OnReceiveAnyInputInThisFrame()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyShowActorBase", "OnReceiveAnyInputInThisFrame");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyShowActorBase.PyShowActorBase.LoadShowAssetsFinished
// (Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<class UObject*>                  Assets                                                 (ConstParm, Parm, OutParm, ReferenceParm)

void APyShowActorBase::LoadShowAssetsFinished(const TArray<class UObject*>& Assets)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyShowActorBase", "LoadShowAssetsFinished");

	Params::PyShowActorBase_LoadShowAssetsFinished Parms{};

	Parms.Assets = std::move(Assets);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyShowActorBase.PyShowActorBase.GetSoftReferenceAssets
// (Native, Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FSoftObjectPath>          ReturnValue                                            (Parm, OutParm, ReturnParm)

TArray<struct FSoftObjectPath> APyShowActorBase::GetSoftReferenceAssets()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyShowActorBase", "GetSoftReferenceAssets");

	Params::PyShowActorBase_GetSoftReferenceAssets Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// PythonFunction PyShowActorBase.PyShowActorBase.LoadSoftReferenceAssets
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent)

void APyShowActorBase::LoadSoftReferenceAssets()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyShowActorBase", "LoadSoftReferenceAssets");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyShowActorBase.PyShowActorBase.ShowActorBeginPlay
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void APyShowActorBase::ShowActorBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyShowActorBase", "ShowActorBeginPlay");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyShowActorBase.PyShowActorBase.ReceiveDestroyed
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent)

void APyShowActorBase::ReceiveDestroyed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyShowActorBase", "ReceiveDestroyed");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyShowActorBase.PyShowActorBase.ReceiveInit
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent)

void APyShowActorBase::ReceiveInit()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyShowActorBase", "ReceiveInit");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyShowActorBase.PyShowActorBase.ReceiveTick
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APyShowActorBase::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyShowActorBase", "ReceiveTick");

	Params::PyShowActorBase_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyShowActorBase.PyShowActorBase.ReceiveEndPlay
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// EEndPlayReason                          EndPlayReason                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APyShowActorBase::ReceiveEndPlay(EEndPlayReason EndPlayReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyShowActorBase", "ReceiveEndPlay");

	Params::PyShowActorBase_ReceiveEndPlay Parms{};

	Parms.EndPlayReason = EndPlayReason;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyShowActorBase.PyShowActorBase.ReceiveBeginPlay
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent)

void APyShowActorBase::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyShowActorBase", "ReceiveBeginPlay");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}

}

