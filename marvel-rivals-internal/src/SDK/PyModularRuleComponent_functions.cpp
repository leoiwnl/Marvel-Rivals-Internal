#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PyModularRuleComponent

#include "Basic.hpp"

#include "PyModularRuleComponent_classes.hpp"
#include "PyModularRuleComponent_parameters.hpp"


namespace SDK
{

// PythonFunction PyModularRuleComponent.PyModularRuleComponent.OnMapLoaded
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void UPyModularRuleComponent::OnMapLoaded()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyModularRuleComponent", "OnMapLoaded");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyModularRuleComponent.PyModularRuleComponent.OnLevelStart
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void UPyModularRuleComponent::OnLevelStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyModularRuleComponent", "OnLevelStart");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyModularRuleComponent.PyModularRuleComponent.OnPrepareStartStart
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void UPyModularRuleComponent::OnPrepareStartStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyModularRuleComponent", "OnPrepareStartStart");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyModularRuleComponent.PyModularRuleComponent.OnFightStart
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void UPyModularRuleComponent::OnFightStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyModularRuleComponent", "OnFightStart");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyModularRuleComponent.PyModularRuleComponent.OnCampStart
// (Native, Public, BlueprintCallable)
// Parameters:
// class FString                           Name_0                                                 (Parm, ZeroConstructor, HasGetValueTypeHash)
// EBattleSide                             AttackSide                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   RemainTime                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPyModularRuleComponent::OnCampStart(const class FString& Name_0, EBattleSide AttackSide, int32 RemainTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyModularRuleComponent", "OnCampStart");

	Params::PyModularRuleComponent_OnCampStart Parms{};

	Parms.Name_0 = std::move(Name_0);
	Parms.AttackSide = AttackSide;
	Parms.RemainTime = RemainTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyModularRuleComponent.PyModularRuleComponent.GetCurrentCamp
// (Native, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class AActor*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash)

class AActor* UPyModularRuleComponent::GetCurrentCamp()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyModularRuleComponent", "GetCurrentCamp");

	Params::PyModularRuleComponent_GetCurrentCamp Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// PythonFunction PyModularRuleComponent.PyModularRuleComponent.GetCampByName
// (Native, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                           CampName                                               (Parm, ZeroConstructor, HasGetValueTypeHash)
// class AActor*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash)

class AActor* UPyModularRuleComponent::GetCampByName(const class FString& CampName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyModularRuleComponent", "GetCampByName");

	Params::PyModularRuleComponent_GetCampByName Parms{};

	Parms.CampName = std::move(CampName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// PythonFunction PyModularRuleComponent.PyModularRuleComponent.SetSelectHeroAllowedAnytime
// (Native, Public, BlueprintCallable)

void UPyModularRuleComponent::SetSelectHeroAllowedAnytime()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyModularRuleComponent", "SetSelectHeroAllowedAnytime");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyModularRuleComponent.PyModularRuleComponent.SetSelectHeroAllowedWhenDead
// (Native, Public, BlueprintCallable)

void UPyModularRuleComponent::SetSelectHeroAllowedWhenDead()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyModularRuleComponent", "SetSelectHeroAllowedWhenDead");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyModularRuleComponent.PyModularRuleComponent.SetSelectHeroAllowedWhenInBirthbaseOrDead
// (Native, Public, BlueprintCallable)

void UPyModularRuleComponent::SetSelectHeroAllowedWhenInBirthbaseOrDead()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyModularRuleComponent", "SetSelectHeroAllowedWhenInBirthbaseOrDead");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyModularRuleComponent.PyModularRuleComponent.SetSelectHeroNotAllowed
// (Native, Public, BlueprintCallable)

void UPyModularRuleComponent::SetSelectHeroNotAllowed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyModularRuleComponent", "SetSelectHeroNotAllowed");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyModularRuleComponent.PyModularRuleComponent.SetDefaultHeroID
// (Native, Public, BlueprintCallable)
// Parameters:
// int32                                   HeroID                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPyModularRuleComponent::SetDefaultHeroID(int32 HeroID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyModularRuleComponent", "SetDefaultHeroID");

	Params::PyModularRuleComponent_SetDefaultHeroID Parms{};

	Parms.HeroID = HeroID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyModularRuleComponent.PyModularRuleComponent.SetBattleSideDefaultHeroID
// (Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TMap<EBattleSide, int32>                DefaultHeroMap                                         (ConstParm, Parm, OutParm, ReferenceParm)

void UPyModularRuleComponent::SetBattleSideDefaultHeroID(const TMap<EBattleSide, int32>& DefaultHeroMap)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyModularRuleComponent", "SetBattleSideDefaultHeroID");

	Params::PyModularRuleComponent_SetBattleSideDefaultHeroID Parms{};

	Parms.DefaultHeroMap = std::move(DefaultHeroMap);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyModularRuleComponent.PyModularRuleComponent.SetAllPlayerHeroByHeroId
// (Native, Public, BlueprintCallable)
// Parameters:
// int32                                   HeroID                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPyModularRuleComponent::SetAllPlayerHeroByHeroId(int32 HeroID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyModularRuleComponent", "SetAllPlayerHeroByHeroId");

	Params::PyModularRuleComponent_SetAllPlayerHeroByHeroId Parms{};

	Parms.HeroID = HeroID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyModularRuleComponent.PyModularRuleComponent.SetSidePlayerHeroByHeroId
// (Native, Public, BlueprintCallable)
// Parameters:
// int32                                   AttackSideHeroID                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   DefendSideHeroID                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPyModularRuleComponent::SetSidePlayerHeroByHeroId(int32 AttackSideHeroID, int32 DefendSideHeroID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyModularRuleComponent", "SetSidePlayerHeroByHeroId");

	Params::PyModularRuleComponent_SetSidePlayerHeroByHeroId Parms{};

	Parms.AttackSideHeroID = AttackSideHeroID;
	Parms.DefendSideHeroID = DefendSideHeroID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyModularRuleComponent.PyModularRuleComponent.SetPlayerHeroByHeroId
// (Native, Public, BlueprintCallable)
// Parameters:
// int32                                   UID                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   HeroID                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPyModularRuleComponent::SetPlayerHeroByHeroId(int32 UID, int32 HeroID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyModularRuleComponent", "SetPlayerHeroByHeroId");

	Params::PyModularRuleComponent_SetPlayerHeroByHeroId Parms{};

	Parms.UID = UID;
	Parms.HeroID = HeroID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyModularRuleComponent.PyModularRuleComponent.GetPayLoadProgress
// (Native, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

float UPyModularRuleComponent::GetPayLoadProgress()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyModularRuleComponent", "GetPayLoadProgress");

	Params::PyModularRuleComponent_GetPayLoadProgress Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// PythonFunction PyModularRuleComponent.PyModularRuleComponent.SideGetPoints
// (Native, Public, BlueprintCallable)
// Parameters:
// EBattleSide                             BattleSide                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Score                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPyModularRuleComponent::SideGetPoints(EBattleSide BattleSide, float Score)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyModularRuleComponent", "SideGetPoints");

	Params::PyModularRuleComponent_SideGetPoints Parms{};

	Parms.BattleSide = BattleSide;
	Parms.Score = Score;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyModularRuleComponent.PyModularRuleComponent.CheckSideScore
// (Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// float                                   Score                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UPyModularRuleComponent::CheckSideScore(float Score)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyModularRuleComponent", "CheckSideScore");

	Params::PyModularRuleComponent_CheckSideScore Parms{};

	Parms.Score = Score;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// PythonFunction PyModularRuleComponent.PyModularRuleComponent.GetScoreSide
// (Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// float                                   Score                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EBattleSide                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

EBattleSide UPyModularRuleComponent::GetScoreSide(float Score)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyModularRuleComponent", "GetScoreSide");

	Params::PyModularRuleComponent_GetScoreSide Parms{};

	Parms.Score = Score;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// PythonFunction PyModularRuleComponent.PyModularRuleComponent.EscortTouchProgressCheck
// (Native, Public, BlueprintCallable)
// Parameters:
// float                                   Progress                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EBattleSide                             AttackSide                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPyModularRuleComponent::EscortTouchProgressCheck(float Progress, EBattleSide AttackSide)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyModularRuleComponent", "EscortTouchProgressCheck");

	Params::PyModularRuleComponent_EscortTouchProgressCheck Parms{};

	Parms.Progress = Progress;
	Parms.AttackSide = AttackSide;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyModularRuleComponent.PyModularRuleComponent.OnSpawnCharacterBP
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AMarvelBaseCharacter*             Character                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UPyModularRuleComponent::OnSpawnCharacterBP(class AMarvelBaseCharacter* Character)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyModularRuleComponent", "OnSpawnCharacterBP");

	Params::PyModularRuleComponent_OnSpawnCharacterBP Parms{};

	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyModularRuleComponent.PyModularRuleComponent.AddBuffToPlayer
// (Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   BuffID                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<int32>                           ActorList                                              (ConstParm, Parm, OutParm, ReferenceParm)

void UPyModularRuleComponent::AddBuffToPlayer(int32 BuffID, const TArray<int32>& ActorList)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyModularRuleComponent", "AddBuffToPlayer");

	Params::PyModularRuleComponent_AddBuffToPlayer Parms{};

	Parms.BuffID = BuffID;
	Parms.ActorList = std::move(ActorList);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyModularRuleComponent.PyModularRuleComponent.RemoveBuffToPlayer
// (Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   BuffID                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<int32>                           PlayerUIDList                                          (ConstParm, Parm, OutParm, ReferenceParm)

void UPyModularRuleComponent::RemoveBuffToPlayer(int32 BuffID, const TArray<int32>& PlayerUIDList)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyModularRuleComponent", "RemoveBuffToPlayer");

	Params::PyModularRuleComponent_RemoveBuffToPlayer Parms{};

	Parms.BuffID = BuffID;
	Parms.PlayerUIDList = std::move(PlayerUIDList);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyModularRuleComponent.PyModularRuleComponent.RespawnPlayer
// (Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<int32>                           ActorList                                              (ConstParm, Parm, OutParm, ReferenceParm)

void UPyModularRuleComponent::RespawnPlayer(const TArray<int32>& ActorList)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyModularRuleComponent", "RespawnPlayer");

	Params::PyModularRuleComponent_RespawnPlayer Parms{};

	Parms.ActorList = std::move(ActorList);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyModularRuleComponent.PyModularRuleComponent.GetAllPlayer
// (Native, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// TArray<int32>                           ReturnValue                                            (Parm, OutParm, ReturnParm)

TArray<int32> UPyModularRuleComponent::GetAllPlayer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyModularRuleComponent", "GetAllPlayer");

	Params::PyModularRuleComponent_GetAllPlayer Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// PythonFunction PyModularRuleComponent.PyModularRuleComponent.GetPlayerDeathCount
// (Native, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   UID                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

int32 UPyModularRuleComponent::GetPlayerDeathCount(int32 UID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyModularRuleComponent", "GetPlayerDeathCount");

	Params::PyModularRuleComponent_GetPlayerDeathCount Parms{};

	Parms.UID = UID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// PythonFunction PyModularRuleComponent.PyModularRuleComponent.SetInstantReborn
// (Native, Public, BlueprintCallable)

void UPyModularRuleComponent::SetInstantReborn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyModularRuleComponent", "SetInstantReborn");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyModularRuleComponent.PyModularRuleComponent.OnPlayerAbilityHit
// (Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<int32>                           PlayerList                                             (ConstParm, Parm, OutParm, ReferenceParm)
// TArray<int32>                           AbilityList                                            (ConstParm, Parm, OutParm, ReferenceParm)
// class FString                           EventName                                              (Parm, ZeroConstructor, HasGetValueTypeHash)

void UPyModularRuleComponent::OnPlayerAbilityHit(const TArray<int32>& PlayerList, const TArray<int32>& AbilityList, const class FString& EventName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyModularRuleComponent", "OnPlayerAbilityHit");

	Params::PyModularRuleComponent_OnPlayerAbilityHit Parms{};

	Parms.PlayerList = std::move(PlayerList);
	Parms.AbilityList = std::move(AbilityList);
	Parms.EventName = std::move(EventName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyModularRuleComponent.PyModularRuleComponent.OnActorWeaponAmmoUse
// (Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AActor*                           Source                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Target                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// int32                                   AbilityID                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bHit                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bIsCritHit                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGlobalEventExtraData            ExtraData                                              (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor)

void UPyModularRuleComponent::OnActorWeaponAmmoUse(class AActor* Source, class AActor* Target, int32 AbilityID, bool bHit, bool bIsCritHit, const struct FGlobalEventExtraData& ExtraData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyModularRuleComponent", "OnActorWeaponAmmoUse");

	Params::PyModularRuleComponent_OnActorWeaponAmmoUse Parms{};

	Parms.Source = Source;
	Parms.Target = Target;
	Parms.AbilityID = AbilityID;
	Parms.bHit = bHit;
	Parms.bIsCritHit = bIsCritHit;
	Parms.ExtraData = std::move(ExtraData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyModularRuleComponent.PyModularRuleComponent.AddCharHealthAttr
// (Native, Public, BlueprintCallable)
// Parameters:
// int32                                   PlayerUID                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   PercentValue                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   FixedValue                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPyModularRuleComponent::AddCharHealthAttr(int32 PlayerUID, float PercentValue, float FixedValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyModularRuleComponent", "AddCharHealthAttr");

	Params::PyModularRuleComponent_AddCharHealthAttr Parms{};

	Parms.PlayerUID = PlayerUID;
	Parms.PercentValue = PercentValue;
	Parms.FixedValue = FixedValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyModularRuleComponent.PyModularRuleComponent.ReduceCharHealthAttr
// (Native, Public, BlueprintCallable)
// Parameters:
// int32                                   PlayerUID                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   PercentValue                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   FixedValue                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPyModularRuleComponent::ReduceCharHealthAttr(int32 PlayerUID, float PercentValue, float FixedValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyModularRuleComponent", "ReduceCharHealthAttr");

	Params::PyModularRuleComponent_ReduceCharHealthAttr Parms{};

	Parms.PlayerUID = PlayerUID;
	Parms.PercentValue = PercentValue;
	Parms.FixedValue = FixedValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyModularRuleComponent.PyModularRuleComponent.SetBirthBaseState
// (Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TMap<class FString, bool>               BirthbaseState                                         (ConstParm, Parm, OutParm, ReferenceParm)

void UPyModularRuleComponent::SetBirthBaseState(const TMap<class FString, bool>& BirthbaseState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyModularRuleComponent", "SetBirthBaseState");

	Params::PyModularRuleComponent_SetBirthBaseState Parms{};

	Parms.BirthbaseState = std::move(BirthbaseState);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyModularRuleComponent.PyModularRuleComponent.SetBirthBaseOpen
// (Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TMap<class FString, bool>               BirthbaseState                                         (ConstParm, Parm, OutParm, ReferenceParm)

void UPyModularRuleComponent::SetBirthBaseOpen(const TMap<class FString, bool>& BirthbaseState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyModularRuleComponent", "SetBirthBaseOpen");

	Params::PyModularRuleComponent_SetBirthBaseOpen Parms{};

	Parms.BirthbaseState = std::move(BirthbaseState);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyModularRuleComponent.PyModularRuleComponent.EndWithResult
// (Native, Public, BlueprintCallable)
// Parameters:
// EBattleSide                             WinnerSide                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPyModularRuleComponent::EndWithResult(EBattleSide WinnerSide)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyModularRuleComponent", "EndWithResult");

	Params::PyModularRuleComponent_EndWithResult Parms{};

	Parms.WinnerSide = WinnerSide;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyModularRuleComponent.PyModularRuleComponent.UILoaded
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void UPyModularRuleComponent::UILoaded()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyModularRuleComponent", "UILoaded");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyModularRuleComponent.PyModularRuleComponent.BindPlayerDeathEvent
// (Native, Public, BlueprintCallable)
// Parameters:
// int32                                   PlayerUID                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           EventName                                              (Parm, ZeroConstructor, HasGetValueTypeHash)

void UPyModularRuleComponent::BindPlayerDeathEvent(int32 PlayerUID, const class FString& EventName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyModularRuleComponent", "BindPlayerDeathEvent");

	Params::PyModularRuleComponent_BindPlayerDeathEvent Parms{};

	Parms.PlayerUID = PlayerUID;
	Parms.EventName = std::move(EventName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyModularRuleComponent.PyModularRuleComponent.OpenSelectHeroPanel
// (Native, Public, BlueprintCallable)
// Parameters:
// int32                                   UID                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPyModularRuleComponent::OpenSelectHeroPanel(int32 UID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyModularRuleComponent", "OpenSelectHeroPanel");

	Params::PyModularRuleComponent_OpenSelectHeroPanel Parms{};

	Parms.UID = UID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyModularRuleComponent.PyModularRuleComponent.SetModularHeroID
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   HeroID                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPyModularRuleComponent::SetModularHeroID(int32 HeroID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyModularRuleComponent", "SetModularHeroID");

	Params::PyModularRuleComponent_SetModularHeroID Parms{};

	Parms.HeroID = HeroID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyModularRuleComponent.PyModularRuleComponent.ClearPlayerAbilityCD
// (Native, Public, BlueprintCallable)
// Parameters:
// class AMarvelBaseCharacter*             Character                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UPyModularRuleComponent::ClearPlayerAbilityCD(class AMarvelBaseCharacter* Character)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyModularRuleComponent", "ClearPlayerAbilityCD");

	Params::PyModularRuleComponent_ClearPlayerAbilityCD Parms{};

	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyModularRuleComponent.PyModularRuleComponent.ChargePlayerAbility
// (Native, Public, BlueprintCallable)
// Parameters:
// class AMarvelBaseCharacter*             Character                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UPyModularRuleComponent::ChargePlayerAbility(class AMarvelBaseCharacter* Character)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyModularRuleComponent", "ChargePlayerAbility");

	Params::PyModularRuleComponent_ChargePlayerAbility Parms{};

	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyModularRuleComponent.PyModularRuleComponent.MonitorPlayerDamage
// (Native, Public, BlueprintCallable)
// Parameters:
// class AMarvelBaseCharacter*             Character                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UPyModularRuleComponent::MonitorPlayerDamage(class AMarvelBaseCharacter* Character)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyModularRuleComponent", "MonitorPlayerDamage");

	Params::PyModularRuleComponent_MonitorPlayerDamage Parms{};

	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyModularRuleComponent.PyModularRuleComponent.ApplyDamageTrigger
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Source                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Target                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// float                                   Damage                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   AbilityID                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPyModularRuleComponent::ApplyDamageTrigger(class AActor* Source, class AActor* Target, float Damage, int32 AbilityID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyModularRuleComponent", "ApplyDamageTrigger");

	Params::PyModularRuleComponent_ApplyDamageTrigger Parms{};

	Parms.Source = Source;
	Parms.Target = Target;
	Parms.Damage = Damage;
	Parms.AbilityID = AbilityID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyModularRuleComponent.PyModularRuleComponent.MonitorPlayerTreat
// (Native, Public, BlueprintCallable)
// Parameters:
// class AMarvelBaseCharacter*             Character                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UPyModularRuleComponent::MonitorPlayerTreat(class AMarvelBaseCharacter* Character)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyModularRuleComponent", "MonitorPlayerTreat");

	Params::PyModularRuleComponent_MonitorPlayerTreat Parms{};

	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyModularRuleComponent.PyModularRuleComponent.ApplyTreatTrigger
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Source                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Target                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// float                                   Treat                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   AbilityID                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPyModularRuleComponent::ApplyTreatTrigger(class AActor* Source, class AActor* Target, float Treat, int32 AbilityID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyModularRuleComponent", "ApplyTreatTrigger");

	Params::PyModularRuleComponent_ApplyTreatTrigger Parms{};

	Parms.Source = Source;
	Parms.Target = Target;
	Parms.Treat = Treat;
	Parms.AbilityID = AbilityID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyModularRuleComponent.PyModularRuleComponent.MonitorPlayerBuff
// (Native, Public, BlueprintCallable)
// Parameters:
// class AMarvelBaseCharacter*             Character                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UPyModularRuleComponent::MonitorPlayerBuff(class AMarvelBaseCharacter* Character)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyModularRuleComponent", "MonitorPlayerBuff");

	Params::PyModularRuleComponent_MonitorPlayerBuff Parms{};

	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyModularRuleComponent.PyModularRuleComponent.ApplyBuffTrigger
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Source                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Target                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// int32                                   BuffID                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPyModularRuleComponent::ApplyBuffTrigger(class AActor* Source, class AActor* Target, int32 BuffID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyModularRuleComponent", "ApplyBuffTrigger");

	Params::PyModularRuleComponent_ApplyBuffTrigger Parms{};

	Parms.Source = Source;
	Parms.Target = Target;
	Parms.BuffID = BuffID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}

}

