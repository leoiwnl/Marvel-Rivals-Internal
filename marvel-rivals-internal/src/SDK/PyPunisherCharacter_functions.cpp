#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PyPunisherCharacter

#include "Basic.hpp"

#include "PyPunisherCharacter_classes.hpp"
#include "PyPunisherCharacter_parameters.hpp"


namespace SDK
{

// PythonFunction PyPunisherCharacter.PyPunisherChildActor.ReceivePoolBeginPlay
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent)

void APyPunisherChildActor::ReceivePoolBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyPunisherChildActor", "ReceivePoolBeginPlay");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyPunisherCharacter.PyPunisherChildActor.OnGenericGameplayTagUpdate
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayTag                     InTag                                                  (ConstParm, Parm, NoDestructor, HasGetValueTypeHash)
// int32                                   Count                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APyPunisherChildActor::OnGenericGameplayTagUpdate(const struct FGameplayTag& InTag, int32 Count)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyPunisherChildActor", "OnGenericGameplayTagUpdate");

	Params::PyPunisherChildActor_OnGenericGameplayTagUpdate Parms{};

	Parms.InTag = std::move(InTag);
	Parms.Count = Count;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyPunisherCharacter.PyPunisherCharacter.ReceiveBeginPlay
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent)

void APyPunisherCharacter::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyPunisherCharacter", "ReceiveBeginPlay");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyPunisherCharacter.PyPunisherCharacter.SetGatlingMaterialVisible
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bVisible                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APyPunisherCharacter::SetGatlingMaterialVisible(bool bVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyPunisherCharacter", "SetGatlingMaterialVisible");

	Params::PyPunisherCharacter_SetGatlingMaterialVisible Parms{};

	Parms.bVisible = bVisible;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyPunisherCharacter.PyPunisherCharacter.OnRep_IsUsingGatling
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent)

void APyPunisherCharacter::OnRep_IsUsingGatling()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyPunisherCharacter", "OnRep_IsUsingGatling");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyPunisherCharacter.PyUIController_PunisherAbilities.Construct
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent)

void UPyUIController_PunisherAbilities::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyUIController_PunisherAbilities", "Construct");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyPunisherCharacter.PyUIController_PunisherAbilities.Destruct
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent)

void UPyUIController_PunisherAbilities::Destruct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyUIController_PunisherAbilities", "Destruct");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}

}

