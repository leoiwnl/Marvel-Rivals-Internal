#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PyWidget_SettingBase

#include "Basic.hpp"

#include "PyWidget_SettingBase_classes.hpp"
#include "PyWidget_SettingBase_parameters.hpp"


namespace SDK
{

// PythonFunction PyWidget_SettingBase.PyWidget_Setting_DrawBtn.OnInitialized
// (BlueprintCosmetic, Native, Event, Protected, BlueprintCallable, BlueprintEvent)

void UPyWidget_Setting_DrawBtn::OnInitialized()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyWidget_Setting_DrawBtn", "OnInitialized");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyWidget_SettingBase.PyWidget_Corona_Item.Construct
// (BlueprintCosmetic, Native, Event, Protected, BlueprintCallable, BlueprintEvent)

void UPyWidget_Corona_Item::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyWidget_Corona_Item", "Construct");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyWidget_SettingBase.PyWidget_Setting_SwitchButton.OnInitialized
// (BlueprintCosmetic, Native, Event, Protected, BlueprintCallable, BlueprintEvent)

void UPyWidget_Setting_SwitchButton::OnInitialized()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyWidget_Setting_SwitchButton", "OnInitialized");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyWidget_SettingBase.PyWidget_Setting_SwitchButton.PreConstruct
// (BlueprintCosmetic, Native, Event, Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPyWidget_Setting_SwitchButton::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyWidget_Setting_SwitchButton", "PreConstruct");

	Params::PyWidget_Setting_SwitchButton_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyWidget_SettingBase.PyWidget_Setting_SwitchButton.Construct
// (BlueprintCosmetic, Native, Event, Protected, BlueprintCallable, BlueprintEvent)

void UPyWidget_Setting_SwitchButton::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyWidget_Setting_SwitchButton", "Construct");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyWidget_SettingBase.PyWidget_Setting_SwitchButton.SWITCH
// (Native, Public, BlueprintCallable)
// Parameters:
// int32                                   is_open                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPyWidget_Setting_SwitchButton::SWITCH(int32 is_open)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyWidget_Setting_SwitchButton", "SWITCH");

	Params::PyWidget_Setting_SwitchButton_SWITCH Parms{};

	Parms.is_open = is_open;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyWidget_SettingBase.PyWidget_Setting_SwitchButton.ShowSwitchBg
// (Native, Public, BlueprintCallable)
// Parameters:
// int32                                   is_open                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPyWidget_Setting_SwitchButton::ShowSwitchBg(int32 is_open)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyWidget_Setting_SwitchButton", "ShowSwitchBg");

	Params::PyWidget_Setting_SwitchButton_ShowSwitchBg Parms{};

	Parms.is_open = is_open;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyWidget_SettingBase.PyWidget_Setting_SwitchShiftButton.OnInitialized
// (BlueprintCosmetic, Native, Event, Protected, BlueprintCallable, BlueprintEvent)

void UPyWidget_Setting_SwitchShiftButton::OnInitialized()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyWidget_Setting_SwitchShiftButton", "OnInitialized");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyWidget_SettingBase.PyWidget_Setting_SwitchShiftButton.PreConstruct
// (BlueprintCosmetic, Native, Event, Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPyWidget_Setting_SwitchShiftButton::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyWidget_Setting_SwitchShiftButton", "PreConstruct");

	Params::PyWidget_Setting_SwitchShiftButton_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyWidget_SettingBase.PyWidget_Setting_SwitchShiftButton.Construct
// (BlueprintCosmetic, Native, Event, Protected, BlueprintCallable, BlueprintEvent)

void UPyWidget_Setting_SwitchShiftButton::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyWidget_Setting_SwitchShiftButton", "Construct");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyWidget_SettingBase.PyWidget_Setting_SwitchShiftButton.SetTabID
// (Native, Public, BlueprintCallable)
// Parameters:
// int32                                   TabId                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPyWidget_Setting_SwitchShiftButton::SetTabID(int32 TabId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyWidget_Setting_SwitchShiftButton", "SetTabID");

	Params::PyWidget_Setting_SwitchShiftButton_SetTabID Parms{};

	Parms.TabId = TabId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyWidget_SettingBase.PyWidget_Setting_Key.OnKeyDown
// (BlueprintCosmetic, Native, Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (Parm, IsPlainOldData, NoDestructor)
// struct FKeyEvent                        InKeyEvent                                             (Parm)
// struct FEventReply                      ReturnValue                                            (Parm, OutParm, ReturnParm)

struct FEventReply UPyWidget_Setting_Key::OnKeyDown(const struct FGeometry& MyGeometry, const struct FKeyEvent& InKeyEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyWidget_Setting_Key", "OnKeyDown");

	Params::PyWidget_Setting_Key_OnKeyDown Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InKeyEvent = std::move(InKeyEvent);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// PythonFunction PyWidget_SettingBase.PyWidget_Setting_Key.PreConstruct
// (BlueprintCosmetic, Native, Event, Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPyWidget_Setting_Key::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyWidget_Setting_Key", "PreConstruct");

	Params::PyWidget_Setting_Key_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyWidget_SettingBase.PyWidget_Setting_Key.OnInitialized
// (BlueprintCosmetic, Native, Event, Protected, BlueprintCallable, BlueprintEvent)

void UPyWidget_Setting_Key::OnInitialized()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyWidget_Setting_Key", "OnInitialized");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyWidget_SettingBase.PyWidget_Setting_Key.Construct
// (BlueprintCosmetic, Native, Event, Protected, BlueprintCallable, BlueprintEvent)

void UPyWidget_Setting_Key::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyWidget_Setting_Key", "Construct");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyWidget_SettingBase.PyWidget_Setting_Key.SetTextIcon
// (Native, Public, BlueprintCallable)

void UPyWidget_Setting_Key::SetTextIcon()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyWidget_Setting_Key", "SetTextIcon");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyWidget_SettingBase.PyWidget_Setting_Key.SetKeyAsset
// (Native, Public, BlueprintCallable)
// Parameters:
// class UMarvelKeyUIAsset*                InKeyAsset                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UPyWidget_Setting_Key::SetKeyAsset(class UMarvelKeyUIAsset* InKeyAsset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyWidget_Setting_Key", "SetKeyAsset");

	Params::PyWidget_Setting_Key_SetKeyAsset Parms{};

	Parms.InKeyAsset = InKeyAsset;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyWidget_SettingBase.PyWidget_Setting_Key.SetInputChord
// (Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FInputChord                      Chord_0                                                (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)

void UPyWidget_Setting_Key::SetInputChord(const struct FInputChord& Chord_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyWidget_Setting_Key", "SetInputChord");

	Params::PyWidget_Setting_Key_SetInputChord Parms{};

	Parms.Chord_0 = std::move(Chord_0);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyWidget_SettingBase.PyWidget_Setting_Key.SetKey
// (Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FKey                             InKey                                                  (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UPyWidget_Setting_Key::SetKey(const struct FKey& InKey)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyWidget_Setting_Key", "SetKey");

	Params::PyWidget_Setting_Key_SetKey Parms{};

	Parms.InKey = std::move(InKey);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// PythonFunction PyWidget_SettingBase.PyWidget_Setting_Key.SetMouseKey
// (Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FKey                             InKey                                                  (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)

void UPyWidget_Setting_Key::SetMouseKey(const struct FKey& InKey)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyWidget_Setting_Key", "SetMouseKey");

	Params::PyWidget_Setting_Key_SetMouseKey Parms{};

	Parms.InKey = std::move(InKey);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyWidget_SettingBase.PyWidget_Setting_Key.SetActionMapping
// (Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FInputActionKeyMapping           ActionMap                                              (ConstParm, Parm, OutParm, ReferenceParm)

void UPyWidget_Setting_Key::SetActionMapping(const struct FInputActionKeyMapping& ActionMap)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyWidget_Setting_Key", "SetActionMapping");

	Params::PyWidget_Setting_Key_SetActionMapping Parms{};

	Parms.ActionMap = std::move(ActionMap);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyWidget_SettingBase.PyWidget_Setting_Key.SetAxisMapping
// (Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FInputAxisKeyMapping             AxisMap                                                (ConstParm, Parm, OutParm, ReferenceParm)

void UPyWidget_Setting_Key::SetAxisMapping(const struct FInputAxisKeyMapping& AxisMap)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyWidget_Setting_Key", "SetAxisMapping");

	Params::PyWidget_Setting_Key_SetAxisMapping Parms{};

	Parms.AxisMap = std::move(AxisMap);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyWidget_SettingBase.PyWidget_Setting_Key.ConstructChordString
// (Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FInputChord                      Input                                                  (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)

class FString UPyWidget_Setting_Key::ConstructChordString(const struct FInputChord& Input)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyWidget_Setting_Key", "ConstructChordString");

	Params::PyWidget_Setting_Key_ConstructChordString Parms{};

	Parms.Input = std::move(Input);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// PythonFunction PyWidget_SettingBase.PyWidget_Setting_Key.ConstructActionString
// (Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FInputActionKeyMapping           Input                                                  (ConstParm, Parm, OutParm, ReferenceParm)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)

class FString UPyWidget_Setting_Key::ConstructActionString(const struct FInputActionKeyMapping& Input)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyWidget_Setting_Key", "ConstructActionString");

	Params::PyWidget_Setting_Key_ConstructActionString Parms{};

	Parms.Input = std::move(Input);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// PythonFunction PyWidget_SettingBase.PyWidget_Setting_Key.ConstructAxisString
// (Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FInputAxisKeyMapping             Input                                                  (ConstParm, Parm, OutParm, ReferenceParm)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)

class FString UPyWidget_Setting_Key::ConstructAxisString(const struct FInputAxisKeyMapping& Input)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyWidget_Setting_Key", "ConstructAxisString");

	Params::PyWidget_Setting_Key_ConstructAxisString Parms{};

	Parms.Input = std::move(Input);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// PythonFunction PyWidget_SettingBase.PyWidget_Setting_Key.SetText
// (Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FText                             KeyText                                                (Parm)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UPyWidget_Setting_Key::SetText(const class FText& KeyText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyWidget_Setting_Key", "SetText");

	Params::PyWidget_Setting_Key_SetText Parms{};

	Parms.KeyText = std::move(KeyText);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// PythonFunction PyWidget_SettingBase.PyWidget_Setting_Key.SetBrush
// (Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FSlateBrush                      Brush                                                  (ConstParm, Parm, OutParm, ReferenceParm)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UPyWidget_Setting_Key::SetBrush(const struct FSlateBrush& Brush)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyWidget_Setting_Key", "SetBrush");

	Params::PyWidget_Setting_Key_SetBrush Parms{};

	Parms.Brush = std::move(Brush);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// PythonFunction PyWidget_SettingBase.PyWidget_Setting_Key.SetMultiKeyWidget
// (Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FInputChord                      key1                                                   (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
// struct FInputChord                      key2                                                   (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)

void UPyWidget_Setting_Key::SetMultiKeyWidget(const struct FInputChord& key1, const struct FInputChord& key2)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyWidget_Setting_Key", "SetMultiKeyWidget");

	Params::PyWidget_Setting_Key_SetMultiKeyWidget Parms{};

	Parms.key1 = std::move(key1);
	Parms.key2 = std::move(key2);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyWidget_SettingBase.PyWidget_Setting_Item.OnInitialized
// (BlueprintCosmetic, Native, Event, Protected, BlueprintCallable, BlueprintEvent)

void UPyWidget_Setting_Item::OnInitialized()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyWidget_Setting_Item", "OnInitialized");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyWidget_SettingBase.PyWidget_Setting_Item.OnMouseEnter
// (BlueprintCosmetic, Native, Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (Parm, IsPlainOldData, NoDestructor)
// struct FPointerEvent                    MouseEvent                                             (ConstParm, Parm, OutParm, ReferenceParm)

void UPyWidget_Setting_Item::OnMouseEnter(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyWidget_Setting_Item", "OnMouseEnter");

	Params::PyWidget_Setting_Item_OnMouseEnter Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.MouseEvent = std::move(MouseEvent);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyWidget_SettingBase.PyWidget_Setting_Item.OnMouseLeave
// (BlueprintCosmetic, Native, Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FPointerEvent                    MouseEvent                                             (ConstParm, Parm, OutParm, ReferenceParm)

void UPyWidget_Setting_Item::OnMouseLeave(const struct FPointerEvent& MouseEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyWidget_Setting_Item", "OnMouseLeave");

	Params::PyWidget_Setting_Item_OnMouseLeave Parms{};

	Parms.MouseEvent = std::move(MouseEvent);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyWidget_SettingBase.PyWidget_Setting_Item.PreConstruct
// (BlueprintCosmetic, Native, Event, Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPyWidget_Setting_Item::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyWidget_Setting_Item", "PreConstruct");

	Params::PyWidget_Setting_Item_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyWidget_SettingBase.PyWidget_Setting_Item.Construct
// (BlueprintCosmetic, Native, Event, Protected, BlueprintCallable, BlueprintEvent)

void UPyWidget_Setting_Item::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyWidget_Setting_Item", "Construct");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyWidget_SettingBase.PyWidget_Setting_Item.OnPaint
// (BlueprintCosmetic, Native, Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// struct FPaintContext                    Context                                                (Parm, OutParm, ReferenceParm, NoDestructor)

void UPyWidget_Setting_Item::OnPaint(struct FPaintContext& Context) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyWidget_Setting_Item", "OnPaint");

	Params::PyWidget_Setting_Item_OnPaint Parms{};

	Parms.Context = std::move(Context);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	Context = std::move(Parms.Context);
}


// PythonFunction PyWidget_SettingBase.PyWidget_Setting_VBox.OnPaint
// (BlueprintCosmetic, Native, Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// struct FPaintContext                    Context                                                (Parm, OutParm, ReferenceParm, NoDestructor)

void UPyWidget_Setting_VBox::OnPaint(struct FPaintContext& Context) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyWidget_Setting_VBox", "OnPaint");

	Params::PyWidget_Setting_VBox_OnPaint Parms{};

	Parms.Context = std::move(Context);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	Context = std::move(Parms.Context);
}


// PythonFunction PyWidget_SettingBase.PyWidget_SettingDesc.Construct
// (BlueprintCosmetic, Native, Event, Protected, BlueprintCallable, BlueprintEvent)

void UPyWidget_SettingDesc::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyWidget_SettingDesc", "Construct");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyWidget_SettingBase.PyWidget_SettingDesc.PostSetButtonSuccess
// (Native, Public, BlueprintCallable)

void UPyWidget_SettingDesc::PostSetButtonSuccess()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyWidget_SettingDesc", "PostSetButtonSuccess");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyWidget_SettingBase.PyWidget_SettingDesc.PostSetButtonFailed
// (Native, Public, BlueprintCallable)

void UPyWidget_SettingDesc::PostSetButtonFailed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyWidget_SettingDesc", "PostSetButtonFailed");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyWidget_SettingBase.PyWidget_SettingDesc.SetPreBindText
// (Native, Public, BlueprintCallable)
// Parameters:
// class FString                           Text                                                   (Parm, ZeroConstructor, HasGetValueTypeHash)

void UPyWidget_SettingDesc::SetPreBindText(const class FString& Text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyWidget_SettingDesc", "SetPreBindText");

	Params::PyWidget_SettingDesc_SetPreBindText Parms{};

	Parms.Text = std::move(Text);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyWidget_SettingBase.PyWidget_SettingDesc.SetBindSuccessTips
// (Native, Public, BlueprintCallable)
// Parameters:
// int32                                   Type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           key1                                                   (Parm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           key2                                                   (Parm, ZeroConstructor, HasGetValueTypeHash)

void UPyWidget_SettingDesc::SetBindSuccessTips(int32 Type, const class FString& key1, const class FString& key2)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyWidget_SettingDesc", "SetBindSuccessTips");

	Params::PyWidget_SettingDesc_SetBindSuccessTips Parms{};

	Parms.Type = Type;
	Parms.key1 = std::move(key1);
	Parms.key2 = std::move(key2);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyWidget_SettingBase.PyWidget_SettingDesc.SetBindConflictTips
// (Native, Public, BlueprintCallable)
// Parameters:
// class FString                           key1                                                   (Parm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           key2                                                   (Parm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           key3                                                   (Parm, ZeroConstructor, HasGetValueTypeHash)

void UPyWidget_SettingDesc::SetBindConflictTips(const class FString& key1, const class FString& key2, const class FString& key3)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyWidget_SettingDesc", "SetBindConflictTips");

	Params::PyWidget_SettingDesc_SetBindConflictTips Parms{};

	Parms.key1 = std::move(key1);
	Parms.key2 = std::move(key2);
	Parms.key3 = std::move(key3);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyWidget_SettingBase.PyWidget_SettingDesc.SetUndoSuccessTips
// (Native, Public, BlueprintCallable)

void UPyWidget_SettingDesc::SetUndoSuccessTips()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyWidget_SettingDesc", "SetUndoSuccessTips");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyWidget_SettingBase.PyWidget_Setting_SwitchButton_V2.SetIsHover
// (Native, Protected, BlueprintCallable)
// Parameters:
// bool                                    IsHover_0                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPyWidget_Setting_SwitchButton_V2::SetIsHover(bool IsHover_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyWidget_Setting_SwitchButton_V2", "SetIsHover");

	Params::PyWidget_Setting_SwitchButton_V2_SetIsHover Parms{};

	Parms.IsHover_0 = IsHover_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyWidget_SettingBase.PyWidget_Setting_SwitchButton_V2.SetBtnIsPressed
// (Native, Protected, BlueprintCallable)
// Parameters:
// bool                                    IsBtnPressed_0                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPyWidget_Setting_SwitchButton_V2::SetBtnIsPressed(bool IsBtnPressed_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyWidget_Setting_SwitchButton_V2", "SetBtnIsPressed");

	Params::PyWidget_Setting_SwitchButton_V2_SetBtnIsPressed Parms{};

	Parms.IsBtnPressed_0 = IsBtnPressed_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyWidget_SettingBase.PyWidget_Setting_SwitchButton_V2.OnInitialized
// (BlueprintCosmetic, Native, Event, Protected, BlueprintCallable, BlueprintEvent)

void UPyWidget_Setting_SwitchButton_V2::OnInitialized()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyWidget_Setting_SwitchButton_V2", "OnInitialized");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyWidget_SettingBase.PyWidget_Setting_SwitchButton_V2.Construct
// (BlueprintCosmetic, Native, Event, Protected, BlueprintCallable, BlueprintEvent)

void UPyWidget_Setting_SwitchButton_V2::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyWidget_Setting_SwitchButton_V2", "Construct");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyWidget_SettingBase.PyWidget_Setting_SwitchButton_V2.SWITCH
// (Native, Public, BlueprintCallable)
// Parameters:
// int32                                   IsOpen                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPyWidget_Setting_SwitchButton_V2::SWITCH(int32 IsOpen)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyWidget_Setting_SwitchButton_V2", "SWITCH");

	Params::PyWidget_Setting_SwitchButton_V2_SWITCH Parms{};

	Parms.IsOpen = IsOpen;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyWidget_SettingBase.PyWidget_SettingSelectHeroShape_Btn.OnInitialized
// (BlueprintCosmetic, Native, Event, Protected, BlueprintCallable, BlueprintEvent)

void UPyWidget_SettingSelectHeroShape_Btn::OnInitialized()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyWidget_SettingSelectHeroShape_Btn", "OnInitialized");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyWidget_SettingBase.PyWidget_SettingSelectHeroShape.OnInitialized
// (BlueprintCosmetic, Native, Event, Protected, BlueprintCallable, BlueprintEvent)

void UPyWidget_SettingSelectHeroShape::OnInitialized()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyWidget_SettingSelectHeroShape", "OnInitialized");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyWidget_SettingBase.PyWidget_SettingSelectHeroShape.Construct
// (BlueprintCosmetic, Native, Event, Protected, BlueprintCallable, BlueprintEvent)

void UPyWidget_SettingSelectHeroShape::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyWidget_SettingSelectHeroShape", "Construct");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyWidget_SettingBase.PyWidget_SettingSelectHeroShape.Destruct
// (BlueprintCosmetic, Native, Event, Protected, BlueprintCallable, BlueprintEvent)

void UPyWidget_SettingSelectHeroShape::Destruct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyWidget_SettingSelectHeroShape", "Destruct");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}

}

