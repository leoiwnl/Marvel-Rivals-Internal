#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PyHeroComponent

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "Marvel_structs.hpp"


namespace SDK
{

// PythonClass PyHeroComponent.PyHeroComponent
// 0x0038 (0x0128 - 0x00F0)
class UPyHeroComponent final : public UActorComponent
{
public:
	TArray<int32>                                 RedUsedHeroList;                                   // 0x00F0(0x0010)(BlueprintVisible, Net, NativeAccessSpecifierPublic)
	TArray<int32>                                 BlueUsedHeroList;                                  // 0x0100(0x0010)(BlueprintVisible, Net, NativeAccessSpecifierPublic)
	TArray<int32>                                 OpenHeroList;                                      // 0x0110(0x0010)(BlueprintVisible, Net, RepNotify, NativeAccessSpecifierPublic)
	bool                                          bSelectHeroAllowedWhenAlive;                       // 0x0120(0x0001)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bSelectHeroAllowedWhenDead;                        // 0x0121(0x0001)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bSelectHeroAllowedInBirthBase;                     // 0x0122(0x0001)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	void ReceiveInitializeComponent();
	void OnRep_OpenHeroList();
	void ReceiveEndPlay(EEndPlayReason EndPlayReason);
	void BroadcastPlayerBreakRespawn(int32 UID);
	bool ResurrectPlayerByLevel(class AActor* TargetCharacter);
	void BroadcastPlayerBeginRespawn(int32 UID, float RespawnTime);
	class AActor* CreateAIHero(int32 HeroID, EBattleSide BattleSide, const struct FVector& position, const struct FRotator& Rotation, const struct FVector& RelivePosition, float ReliveTime, const class FString& Name_0, const class FString& TreePath, bool IsScore);
	bool ResurrectAiByLevel(class AActor* TargetCharcater);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyHeroComponent">();
	}
	static class UPyHeroComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyHeroComponent>();
	}
};

}

