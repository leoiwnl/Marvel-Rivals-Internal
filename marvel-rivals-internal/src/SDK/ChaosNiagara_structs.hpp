#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ChaosNiagara

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK
{

// Enum ChaosNiagara.EChaosEffectDataType
// NumValues: 0x000E
enum class EChaosEffectDataType : uint8
{
	Location                                 = 0,
	Velocity                                 = 1,
	AngularVelocity                          = 2,
	Mass                                     = 3,
	Index                                    = 4,
	Level                                    = 5,
	FXSize                                   = 6,
	CustomActorPosition                      = 7,
	CustomFloat                              = 8,
	CustomInt                                = 9,
	CustomBool                               = 10,
	CustomVector4                            = 11,
	CustomVector                             = 12,
	EChaosEffectDataType_MAX                 = 13,
};

// Enum ChaosNiagara.EDataSortTypeEnum
// NumValues: 0x0006
enum class EDataSortTypeEnum : uint8
{
	ChaosNiagara_DataSortType_NoSorting      = 0,
	ChaosNiagara_DataSortType_RandomShuffle  = 1,
	ChaosNiagara_DataSortType_SortByMassMaxToMin = 2,
	ChaosNiagara_DataSortType_SortByMassMinToMax = 3,
	ChaosNiagara_Max                         = 4,
	ChaosNiagara_Max_0                       = 5,
};

// Enum ChaosNiagara.ERandomVelocityGenerationTypeEnum
// NumValues: 0x0005
enum class ERandomVelocityGenerationTypeEnum : uint8
{
	ChaosNiagara_RandomVelocityGenerationType_RandomDistribution = 0,
	ChaosNiagara_RandomVelocityGenerationType_RandomDistributionWithStreamers = 1,
	ChaosNiagara_RandomVelocityGenerationType_CollisionNormalBased = 2,
	ChaosNiagara_Max                         = 3,
	ChaosNiagara_Max_0                       = 4,
};

// Enum ChaosNiagara.EDebugTypeEnum
// NumValues: 0x0005
enum class EDebugTypeEnum : uint8
{
	ChaosNiagara_DebugType_NoDebug           = 0,
	ChaosNiagara_DebugType_ColorBySolver     = 1,
	ChaosNiagara_DebugType_ColorByParticleIndex = 2,
	ChaosNiagara_Max                         = 3,
	ChaosNiagara_Max_0                       = 4,
};

// Enum ChaosNiagara.EDataSourceTypeEnum
// NumValues: 0x0005
enum class EDataSourceTypeEnum : uint8
{
	ChaosNiagara_DataSourceType_Collision    = 0,
	ChaosNiagara_DataSourceType_Breaking     = 1,
	ChaosNiagara_DataSourceType_Trailing     = 2,
	ChaosNiagara_Max                         = 3,
	ChaosNiagara_Max_0                       = 4,
};

// Enum ChaosNiagara.ELocationFilteringModeEnum
// NumValues: 0x0004
enum class ELocationFilteringModeEnum : uint8
{
	ChaosNiagara_LocationFilteringMode_Inclusive = 0,
	ChaosNiagara_LocationFilteringMode_Exclusive = 1,
	ChaosNiagara_Max                         = 2,
	ChaosNiagara_Max_0                       = 3,
};

// Enum ChaosNiagara.ELocationXToSpawnEnum
// NumValues: 0x0006
enum class ELocationXToSpawnEnum : uint8
{
	ChaosNiagara_LocationXToSpawn_None       = 0,
	ChaosNiagara_LocationXToSpawn_Min        = 1,
	ChaosNiagara_LocationXToSpawn_Max        = 2,
	ChaosNiagara_LocationXToSpawn_MinMax     = 3,
	ChaosNiagara_Max                         = 4,
	ChaosNiagara_Max_0                       = 5,
};

// Enum ChaosNiagara.ELocationYToSpawnEnum
// NumValues: 0x0006
enum class ELocationYToSpawnEnum : uint8
{
	ChaosNiagara_LocationYToSpawn_None       = 0,
	ChaosNiagara_LocationYToSpawn_Min        = 1,
	ChaosNiagara_LocationYToSpawn_Max        = 2,
	ChaosNiagara_LocationYToSpawn_MinMax     = 3,
	ChaosNiagara_Max                         = 4,
	ChaosNiagara_Max_0                       = 5,
};

// Enum ChaosNiagara.ELocationZToSpawnEnum
// NumValues: 0x0006
enum class ELocationZToSpawnEnum : uint8
{
	ChaosNiagara_LocationZToSpawn_None       = 0,
	ChaosNiagara_LocationZToSpawn_Min        = 1,
	ChaosNiagara_LocationZToSpawn_Max        = 2,
	ChaosNiagara_LocationZToSpawn_MinMax     = 3,
	ChaosNiagara_Max                         = 4,
	ChaosNiagara_Max_0                       = 5,
};

// ScriptStruct ChaosNiagara.ChaosEffectEventData
// 0x00D8 (0x00D8 - 0x0000)
struct FChaosEffectEventData final
{
public:
	TArray<struct FVector>                        LocationDataArray;                                 // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FVector>                        VelocityDataArray;                                 // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FVector>                        AngularVelocityDataArray;                          // 0x0020(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<float>                                 MassDataArray;                                     // 0x0030(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<int32>                                 IndexDataArray;                                    // 0x0040(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<int32>                                 LevelDataArray;                                    // 0x0050(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<float>                                 FXSizeDataArray;                                   // 0x0060(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FVector>                        CustomActorPositionDataArray;                      // 0x0070(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<float>                                 CustomFloatDataArray;                              // 0x0080(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<int32>                                 CustomIntDataArray;                                // 0x0090(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<bool>                                  CustomBoolDataArray;                               // 0x00A0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FVector4f>                      CustomVector4DataArray;                            // 0x00B0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FVector>                        CustomVectorDataArray;                             // 0x00C0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	int32                                         InstanceCount;                                     // 0x00D0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_D4[0x4];                                       // 0x00D4(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct ChaosNiagara.ChaosDestructionEvent
// 0x0078 (0x0078 - 0x0000)
struct FChaosDestructionEvent final
{
public:
	struct FVector                                position;                                          // 0x0000(0x0018)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                Normal;                                            // 0x0018(0x0018)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                Velocity;                                          // 0x0030(0x0018)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                AngularVelocity;                                   // 0x0048(0x0018)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ExtentMin;                                         // 0x0060(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ExtentMax;                                         // 0x0064(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ParticleID;                                        // 0x0068(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Time;                                              // 0x006C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Type;                                              // 0x0070(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

}

