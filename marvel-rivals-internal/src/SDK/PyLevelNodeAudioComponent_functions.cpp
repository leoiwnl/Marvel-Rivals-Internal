#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PyLevelNodeAudioComponent

#include "Basic.hpp"

#include "PyLevelNodeAudioComponent_classes.hpp"
#include "PyLevelNodeAudioComponent_parameters.hpp"


namespace SDK
{

// PythonFunction PyLevelNodeAudioComponent.PyLevelNodeAudioComponent.ReceiveInitializeComponent
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent)

void UPyLevelNodeAudioComponent::ReceiveInitializeComponent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyLevelNodeAudioComponent", "ReceiveInitializeComponent");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyLevelNodeAudioComponent.PyLevelNodeAudioComponent.ReceiveEndPlay
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// EEndPlayReason                          EndPlayReason                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPyLevelNodeAudioComponent::ReceiveEndPlay(EEndPlayReason EndPlayReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyLevelNodeAudioComponent", "ReceiveEndPlay");

	Params::PyLevelNodeAudioComponent_ReceiveEndPlay Parms{};

	Parms.EndPlayReason = EndPlayReason;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyLevelNodeAudioComponent.PyLevelNodeAudioComponent.PlayAmbientSound
// (Net, NetReliable, Native, NetMulticast, Public, BlueprintCallable)
// Parameters:
// class FString                           InstanceName                                           (Parm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           NodeName                                               (Parm, ZeroConstructor, HasGetValueTypeHash)
// TSoftObjectPtr<class UAkAudioEvent>     AudioEvent                                             (Parm, UObjectWrapper, HasGetValueTypeHash)

void UPyLevelNodeAudioComponent::PlayAmbientSound(const class FString& InstanceName, const class FString& NodeName, TSoftObjectPtr<class UAkAudioEvent> AudioEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyLevelNodeAudioComponent", "PlayAmbientSound");

	Params::PyLevelNodeAudioComponent_PlayAmbientSound Parms{};

	Parms.InstanceName = std::move(InstanceName);
	Parms.NodeName = std::move(NodeName);
	Parms.AudioEvent = AudioEvent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyLevelNodeAudioComponent.PyLevelNodeAudioComponent.PlayAudioByID
// (Net, NetReliable, Native, NetMulticast, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FString                           InstanceName                                           (Parm, ZeroConstructor, HasGetValueTypeHash)
// TArray<int32>                           VoiceIDList                                            (ConstParm, Parm, OutParm, ReferenceParm)

void UPyLevelNodeAudioComponent::PlayAudioByID(const class FString& InstanceName, const TArray<int32>& VoiceIDList)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyLevelNodeAudioComponent", "PlayAudioByID");

	Params::PyLevelNodeAudioComponent_PlayAudioByID Parms{};

	Parms.InstanceName = std::move(InstanceName);
	Parms.VoiceIDList = std::move(VoiceIDList);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyLevelNodeAudioComponent.PyLevelNodeAudioComponent.PlayAudioByIDAndBattleSide
// (Net, Native, NetMulticast, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FString                           InstanceName                                           (Parm, ZeroConstructor, HasGetValueTypeHash)
// TArray<int32>                           VoiceIDList                                            (ConstParm, Parm, OutParm, ReferenceParm)
// EBattleSide                             BattleSide                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPyLevelNodeAudioComponent::PlayAudioByIDAndBattleSide(const class FString& InstanceName, const TArray<int32>& VoiceIDList, EBattleSide BattleSide)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyLevelNodeAudioComponent", "PlayAudioByIDAndBattleSide");

	Params::PyLevelNodeAudioComponent_PlayAudioByIDAndBattleSide Parms{};

	Parms.InstanceName = std::move(InstanceName);
	Parms.VoiceIDList = std::move(VoiceIDList);
	Parms.BattleSide = BattleSide;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyLevelNodeAudioComponent.PyLevelNodeAudioComponent.PlayAudioByEvent
// (Net, NetReliable, Native, NetMulticast, Public, BlueprintCallable)
// Parameters:
// class FString                           InstanceName                                           (Parm, ZeroConstructor, HasGetValueTypeHash)
// class UAkAudioEvent*                    AudioEvent                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UPyLevelNodeAudioComponent::PlayAudioByEvent(const class FString& InstanceName, class UAkAudioEvent* AudioEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyLevelNodeAudioComponent", "PlayAudioByEvent");

	Params::PyLevelNodeAudioComponent_PlayAudioByEvent Parms{};

	Parms.InstanceName = std::move(InstanceName);
	Parms.AudioEvent = AudioEvent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}

}

