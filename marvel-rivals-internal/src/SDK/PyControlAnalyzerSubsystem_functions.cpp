#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PyControlAnalyzerSubsystem

#include "Basic.hpp"

#include "PyControlAnalyzerSubsystem_classes.hpp"
#include "PyControlAnalyzerSubsystem_parameters.hpp"


namespace SDK
{

// PythonFunction PyControlAnalyzerSubsystem.PyControlAnalyzerSubsystem.K2_OnInitialize
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent)

void UPyControlAnalyzerSubsystem::K2_OnInitialize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyControlAnalyzerSubsystem", "K2_OnInitialize");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyControlAnalyzerSubsystem.PyControlAnalyzerSubsystem.K2_DeInitialize
// (Native, Public, BlueprintCallable)

void UPyControlAnalyzerSubsystem::K2_DeInitialize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyControlAnalyzerSubsystem", "K2_DeInitialize");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyControlAnalyzerSubsystem.PyControlAnalyzerSubsystem.WriteToLog
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent)

void UPyControlAnalyzerSubsystem::WriteToLog()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyControlAnalyzerSubsystem", "WriteToLog");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyControlAnalyzerSubsystem.PyControlAnalyzerSubsystem.SendWarning
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           warning_str                                            (Parm, ZeroConstructor, HasGetValueTypeHash)

void UPyControlAnalyzerSubsystem::SendWarning(const class FString& warning_str)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyControlAnalyzerSubsystem", "SendWarning");

	Params::PyControlAnalyzerSubsystem_SendWarning Parms{};

	Parms.warning_str = std::move(warning_str);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}

}

