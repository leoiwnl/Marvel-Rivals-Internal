#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Hero_1011

#include "Basic.hpp"

#include "Hero_1011_classes.hpp"
#include "Hero_1011_parameters.hpp"


namespace SDK
{

// Function Hero_1011.Cue_Weapon_Loop_101111.ChangeContainerState
// (Final, Native, Public)

void ACue_Weapon_Loop_101111::ChangeContainerState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Cue_Weapon_Loop_101111", "ChangeContainerState");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1011.Cue_Weapon_Loop_101111.OnOwnedTagUpdate
// (Final, Native, Public, HasOutParams)
// Parameters:
// struct FGameplayTag                     TagUpdated                                             (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bTagExists                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ACue_Weapon_Loop_101111::OnOwnedTagUpdate(const struct FGameplayTag& TagUpdated, bool bTagExists)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Cue_Weapon_Loop_101111", "OnOwnedTagUpdate");

	Params::Cue_Weapon_Loop_101111_OnOwnedTagUpdate Parms{};

	Parms.TagUpdated = std::move(TagUpdated);
	Parms.bTagExists = bTagExists;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1011.Ability_101171.CalcSmashLocation
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// class AActor*                           TargetActor                                            (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AMarvelBaseCharacter*             OutHulk                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector UAbility_101171::CalcSmashLocation(const class AActor* TargetActor, class AMarvelBaseCharacter* OutHulk)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ability_101171", "CalcSmashLocation");

	Params::Ability_101171_CalcSmashLocation Parms{};

	Parms.TargetActor = TargetActor;
	Parms.OutHulk = OutHulk;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hero_1011.Ability_101171.GetTarget
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AActor*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AActor* UAbility_101171::GetTarget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ability_101171", "GetTarget");

	Params::Ability_101171_GetTarget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hero_1011.Cue_Buff_10117101.K2_OnRecycle
// (Event, Public, BlueprintEvent)

void ACue_Buff_10117101::K2_OnRecycle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Cue_Buff_10117101", "K2_OnRecycle");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Hero_1011.Cue_Buff_10117101.LoopCheck
// (Final, Native, Public)

void ACue_Buff_10117101::LoopCheck()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Cue_Buff_10117101", "LoopCheck");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1011.Ability_101191.K2_OnShiftJumpLaunched
// (Native, Event, Public, BlueprintEvent)

void UAbility_101191::K2_OnShiftJumpLaunched()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ability_101191", "K2_OnShiftJumpLaunched");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1011.Ability_101191.LaunchCharacter
// (Final, Native, Public)

void UAbility_101191::LaunchCharacter()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ability_101191", "LaunchCharacter");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1011.Ability_101191.OnServerReceiveLaunchVelocity
// (Final, Native, Public, HasOutParams)
// Parameters:
// struct FGameplayAbilityTargetDataHandle Data                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UAbility_101191::OnServerReceiveLaunchVelocity(const struct FGameplayAbilityTargetDataHandle& Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ability_101191", "OnServerReceiveLaunchVelocity");

	Params::Ability_101191_OnServerReceiveLaunchVelocity Parms{};

	Parms.Data = std::move(Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1011.Cue_Ability_Loop_10119101.ClearLoopTimer
// (Final, Native, Public, BlueprintCallable)

void ACue_Ability_Loop_10119101::ClearLoopTimer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Cue_Ability_Loop_10119101", "ClearLoopTimer");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1011.Cue_Ability_Loop_10119101.GetOwnerAbility
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UMarvelGameplayAbility*           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UMarvelGameplayAbility* ACue_Ability_Loop_10119101::GetOwnerAbility()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Cue_Ability_Loop_10119101", "GetOwnerAbility");

	Params::Cue_Ability_Loop_10119101_GetOwnerAbility Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hero_1011.Cue_Ability_Loop_10119101.GetOwnerChar
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AHulkBannerCharacter*             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AHulkBannerCharacter* ACue_Ability_Loop_10119101::GetOwnerChar()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Cue_Ability_Loop_10119101", "GetOwnerChar");

	Params::Cue_Ability_Loop_10119101_GetOwnerChar Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hero_1011.Cue_Ability_Loop_10119101.LoopSetJumpParams
// (Final, Native, Public)

void ACue_Ability_Loop_10119101::LoopSetJumpParams()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Cue_Ability_Loop_10119101", "LoopSetJumpParams");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1011.Cue_Ability_Loop_10119101.SetAudio
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bReset                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ACue_Ability_Loop_10119101::SetAudio(bool bReset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Cue_Ability_Loop_10119101", "SetAudio");

	Params::Cue_Ability_Loop_10119101_SetAudio Parms{};

	Parms.bReset = bReset;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1011.Cue_Ability_Loop_10119101.SetJumpLineVisible
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bIsVisible                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ACue_Ability_Loop_10119101::SetJumpLineVisible(bool bIsVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Cue_Ability_Loop_10119101", "SetJumpLineVisible");

	Params::Cue_Ability_Loop_10119101_SetJumpLineVisible Parms{};

	Parms.bIsVisible = bIsVisible;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1011.Cue_Ability_Loop_10119101.SetLoopTimer
// (Final, Native, Public, BlueprintCallable)

void ACue_Ability_Loop_10119101::SetLoopTimer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Cue_Ability_Loop_10119101", "SetLoopTimer");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1011.UIController_101191.CanGetAbility
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUIController_101191::CanGetAbility()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIController_101191", "CanGetAbility");

	Params::UIController_101191_CanGetAbility Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hero_1011.UIController_101191.Clear101191LoopTimer
// (Final, Native, Public, BlueprintCallable)

void UUIController_101191::Clear101191LoopTimer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIController_101191", "Clear101191LoopTimer");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1011.UIController_101191.Clear101192LoopTimer
// (Final, Native, Public, BlueprintCallable)

void UUIController_101191::Clear101192LoopTimer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIController_101191", "Clear101192LoopTimer");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1011.UIController_101191.IsAbilityCharging
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUIController_101191::IsAbilityCharging()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIController_101191", "IsAbilityCharging");

	Params::UIController_101191_IsAbilityCharging Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hero_1011.UIController_101191.LoopSetChargePer
// (Final, Native, Public)

void UUIController_101191::LoopSetChargePer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIController_101191", "LoopSetChargePer");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1011.UIController_101191.PyInitChargeParam
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bIsHulk                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUIController_101191::PyInitChargeParam(bool bIsHulk)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIController_101191", "PyInitChargeParam");

	Params::UIController_101191_PyInitChargeParam Parms{};

	Parms.bIsHulk = bIsHulk;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function Hero_1011.UIController_101191.Set101191LoopTimer
// (Final, Native, Public, BlueprintCallable)

void UUIController_101191::Set101191LoopTimer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIController_101191", "Set101191LoopTimer");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1011.UIController_101191.Set101192LoopTimer
// (Final, Native, Public, BlueprintCallable)

void UUIController_101191::Set101192LoopTimer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIController_101191", "Set101192LoopTimer");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1011.UIController_101191.TryInitChargeParam
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bIsHulk                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUIController_101191::TryInitChargeParam(bool bIsHulk)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIController_101191", "TryInitChargeParam");

	Params::UIController_101191_TryInitChargeParam Parms{};

	Parms.bIsHulk = bIsHulk;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hero_1011.Cue_Ability_Loop_10119103.OnPressRelease
// (Final, Native, Public)
// Parameters:
// float                                   TimeWaited                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ACue_Ability_Loop_10119103::OnPressRelease(float TimeWaited)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Cue_Ability_Loop_10119103", "OnPressRelease");

	Params::Cue_Ability_Loop_10119103_OnPressRelease Parms{};

	Parms.TimeWaited = TimeWaited;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1011.Cue_Ability_Loop_10119103.OnPressTimeMin
// (Final, Native, Public)
// Parameters:
// float                                   TimeWaited                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ACue_Ability_Loop_10119103::OnPressTimeMin(float TimeWaited)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Cue_Ability_Loop_10119103", "OnPressTimeMin");

	Params::Cue_Ability_Loop_10119103_OnPressTimeMin Parms{};

	Parms.TimeWaited = TimeWaited;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1011.Ability_101192.CanActivateClimb
// (Final, Native, Public)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAbility_101192::CanActivateClimb()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ability_101192", "CanActivateClimb");

	Params::Ability_101192_CanActivateClimb Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hero_1011.Ability_101192.GetClimbConfig
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UConfigHulkClimb*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UConfigHulkClimb* UAbility_101192::GetClimbConfig()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ability_101192", "GetClimbConfig");

	Params::Ability_101192_GetClimbConfig Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hero_1011.Ability_101192.GetMoveComponent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UHulkBannerMoveLogicBaseComponent*ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UHulkBannerMoveLogicBaseComponent* UAbility_101192::GetMoveComponent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ability_101192", "GetMoveComponent");

	Params::Ability_101192_GetMoveComponent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hero_1011.Ability_101192.GetOwnerChar
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AMarvelBaseCharacter*             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AMarvelBaseCharacter* UAbility_101192::GetOwnerChar()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ability_101192", "GetOwnerChar");

	Params::Ability_101192_GetOwnerChar Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hero_1011.Ability_101192.OnClimbKeyPress
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   Time                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAbility_101192::OnClimbKeyPress(float Time)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ability_101192", "OnClimbKeyPress");

	Params::Ability_101192_OnClimbKeyPress Parms{};

	Parms.Time = Time;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1011.Ability_101192.OnClimbKeyRelease
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   Time                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAbility_101192::OnClimbKeyRelease(float Time)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ability_101192", "OnClimbKeyRelease");

	Params::Ability_101192_OnClimbKeyRelease Parms{};

	Parms.Time = Time;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1011.Ability_101198.SwitchTimelineTask
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FName                             SectionName                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAbility_101198::SwitchTimelineTask(const class FName& SectionName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ability_101198", "SwitchTimelineTask");

	Params::Ability_101198_SwitchTimelineTask Parms{};

	Parms.SectionName = SectionName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1011.EpicMomentAction_1011.OnActorAbilityCancel
// (Native, Public)
// Parameters:
// class AActor*                           Source                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   AbilityID                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           SessionID                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UMarvelGameplayAbility*           SourceAbility                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEpicMomentAction_1011::OnActorAbilityCancel(class AActor* Source, int32 AbilityID, const class FString& SessionID, class UMarvelGameplayAbility* SourceAbility)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EpicMomentAction_1011", "OnActorAbilityCancel");

	Params::EpicMomentAction_1011_OnActorAbilityCancel Parms{};

	Parms.Source = Source;
	Parms.AbilityID = AbilityID;
	Parms.SessionID = std::move(SessionID);
	Parms.SourceAbility = SourceAbility;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1011.EpicMomentAction_1011.OnActorTakeDamage
// (Final, Native, Public, HasOutParams)
// Parameters:
// class AActor*                           Instigator                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           Target                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FAttributeModifierHandle         ModifierParameterHandle                                (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGlobalEventExtraData            ExtraData                                              (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UEpicMomentAction_1011::OnActorTakeDamage(class AActor* Instigator, class AActor* Target, const struct FAttributeModifierHandle& ModifierParameterHandle, const struct FGlobalEventExtraData& ExtraData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EpicMomentAction_1011", "OnActorTakeDamage");

	Params::EpicMomentAction_1011_OnActorTakeDamage Parms{};

	Parms.Instigator = Instigator;
	Parms.Target = Target;
	Parms.ModifierParameterHandle = std::move(ModifierParameterHandle);
	Parms.ExtraData = std::move(ExtraData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1011.EpicMomentAction_1011.OnEffectImmunityOrInhibitedCallback
// (Native, Public, HasOutParams)
// Parameters:
// class AActor*                           Source                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayEffectSpec              BlockedSpec                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UEpicMomentAction_1011::OnEffectImmunityOrInhibitedCallback(class AActor* Source, const struct FGameplayEffectSpec& BlockedSpec)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EpicMomentAction_1011", "OnEffectImmunityOrInhibitedCallback");

	Params::EpicMomentAction_1011_OnEffectImmunityOrInhibitedCallback Parms{};

	Parms.Source = Source;
	Parms.BlockedSpec = std::move(BlockedSpec);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1011.EpicMomentAction_1011.OnGameplayEffectAppliedToTarget
// (Final, Native, Public, HasOutParams)
// Parameters:
// class UAbilitySystemComponent*          ASC                                                    (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayEffectSpecStackHandle   GameplayEffectSpecHandle                               (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// struct FActiveGameplayEffectHandle      ActiveGameplayEffectHandle                             (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEpicMomentAction_1011::OnGameplayEffectAppliedToTarget(class UAbilitySystemComponent* ASC, const struct FGameplayEffectSpecStackHandle& GameplayEffectSpecHandle, const struct FActiveGameplayEffectHandle& ActiveGameplayEffectHandle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EpicMomentAction_1011", "OnGameplayEffectAppliedToTarget");

	Params::EpicMomentAction_1011_OnGameplayEffectAppliedToTarget Parms{};

	Parms.ASC = ASC;
	Parms.GameplayEffectSpecHandle = std::move(GameplayEffectSpecHandle);
	Parms.ActiveGameplayEffectHandle = std::move(ActiveGameplayEffectHandle);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1011.HulkAnimInstance.EnterFury
// (Final, Native, Public)
// Parameters:
// bool                                    bOp                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHulkAnimInstance::EnterFury(bool bOp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HulkAnimInstance", "EnterFury");

	Params::HulkAnimInstance_EnterFury Parms{};

	Parms.bOp = bOp;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1011.HulkAnimInstance.FClipLowerBodyYawByDirection
// (Final, Native, Protected)

void UHulkAnimInstance::FClipLowerBodyYawByDirection()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HulkAnimInstance", "FClipLowerBodyYawByDirection");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1011.HulkAnimInstance.FShiftSecondJump
// (Final, Native, Public, BlueprintCallable)

void UHulkAnimInstance::FShiftSecondJump()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HulkAnimInstance", "FShiftSecondJump");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1011.HulkAnimInstance.GetSynergyRideAnimation
// (Final, Native, Protected, HasOutParams)
// Parameters:
// struct FAnimUpdateContext               PoseContext                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UHulkAnimInstance::GetSynergyRideAnimation(const struct FAnimUpdateContext& PoseContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HulkAnimInstance", "GetSynergyRideAnimation");

	Params::HulkAnimInstance_GetSynergyRideAnimation Parms{};

	Parms.PoseContext = std::move(PoseContext);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1011.HulkAnimInstance.GetSynergyRideStartAnimation
// (Final, Native, Protected, HasOutParams)
// Parameters:
// struct FAnimUpdateContext               PoseContext                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UHulkAnimInstance::GetSynergyRideStartAnimation(const struct FAnimUpdateContext& PoseContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HulkAnimInstance", "GetSynergyRideStartAnimation");

	Params::HulkAnimInstance_GetSynergyRideStartAnimation Parms{};

	Parms.PoseContext = std::move(PoseContext);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1011.HulkAnimInstance.OnTagUpdated
// (Final, Native, Protected, HasOutParams)
// Parameters:
// struct FGameplayTag                     TagUpdated                                             (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TagExists                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHulkAnimInstance::OnTagUpdated(const struct FGameplayTag& TagUpdated, bool TagExists)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HulkAnimInstance", "OnTagUpdated");

	Params::HulkAnimInstance_OnTagUpdated Parms{};

	Parms.TagUpdated = std::move(TagUpdated);
	Parms.TagExists = TagExists;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1011.HulkAnimInstance.UpdateSynergyRideStartNode
// (Final, Native, Protected, HasOutParams, BlueprintCallable)
// Parameters:
// struct FAnimUpdateContext               Context                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FAnimNodeReference               Node                                                   (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UHulkAnimInstance::UpdateSynergyRideStartNode(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HulkAnimInstance", "UpdateSynergyRideStartNode");

	Params::HulkAnimInstance_UpdateSynergyRideStartNode Parms{};

	Parms.Context = std::move(Context);
	Parms.Node = std::move(Node);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1011.HulkAnimInstance_101197.OnReleantSynergyRideNode
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FAnimUpdateContext               Context                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FAnimNodeReference               Node                                                   (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UHulkAnimInstance_101197::OnReleantSynergyRideNode(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HulkAnimInstance_101197", "OnReleantSynergyRideNode");

	Params::HulkAnimInstance_101197_OnReleantSynergyRideNode Parms{};

	Parms.Context = std::move(Context);
	Parms.Node = std::move(Node);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1011.HulkBannerAnimInstance.DetermineGroundMotionAnim_Implementation
// (Final, Native, Public, HasOutParams, Const)
// Parameters:
// int32                                   AnimIndex                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHulkBannerAnimInstance::DetermineGroundMotionAnim_Implementation(int32* AnimIndex) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HulkBannerAnimInstance", "DetermineGroundMotionAnim_Implementation");

	Params::HulkBannerAnimInstance_DetermineGroundMotionAnim_Implementation Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (AnimIndex != nullptr)
		*AnimIndex = Parms.AnimIndex;
}


// Function Hero_1011.HulkBannerCharacter.GetServerStartSmashTime
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AHulkBannerCharacter::GetServerStartSmashTime()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HulkBannerCharacter", "GetServerStartSmashTime");

	Params::HulkBannerCharacter_GetServerStartSmashTime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hero_1011.HulkBannerCharacter.IsRecoverBuffApplyFailed
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AHulkBannerCharacter::IsRecoverBuffApplyFailed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HulkBannerCharacter", "IsRecoverBuffApplyFailed");

	Params::HulkBannerCharacter_IsRecoverBuffApplyFailed Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hero_1011.HulkBannerCharacter.IsShiftJump
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AHulkBannerCharacter::IsShiftJump()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HulkBannerCharacter", "IsShiftJump");

	Params::HulkBannerCharacter_IsShiftJump Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hero_1011.HulkBannerCharacter.K2_CacheEnergyData
// (Final, Native, Public, BlueprintCallable)

void AHulkBannerCharacter::K2_CacheEnergyData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HulkBannerCharacter", "K2_CacheEnergyData");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1011.HulkBannerCharacter.OnRep_IsRecoverBuffApplyFailed
// (Final, Native, Public)

void AHulkBannerCharacter::OnRep_IsRecoverBuffApplyFailed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HulkBannerCharacter", "OnRep_IsRecoverBuffApplyFailed");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1011.HulkBannerCharacter.OnSculptChanged
// (Final, Native, Public)
// Parameters:
// int32                                   SculptID                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHulkBannerCharacter::OnSculptChanged(const int32 SculptID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HulkBannerCharacter", "OnSculptChanged");

	Params::HulkBannerCharacter_OnSculptChanged Parms{};

	Parms.SculptID = SculptID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1011.HulkBannerCharacter.OnSingleAbilityInitialized
// (Final, Native, Public)
// Parameters:
// int32                                   AbilityID                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHulkBannerCharacter::OnSingleAbilityInitialized(int32 AbilityID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HulkBannerCharacter", "OnSingleAbilityInitialized");

	Params::HulkBannerCharacter_OnSingleAbilityInitialized Parms{};

	Parms.AbilityID = AbilityID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1011.HulkBannerCharacter.RecoverEnergyFromPreviousDeath
// (Final, Native, Public, BlueprintCallable)

void AHulkBannerCharacter::RecoverEnergyFromPreviousDeath()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HulkBannerCharacter", "RecoverEnergyFromPreviousDeath");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1011.HulkBannerCharacter.RecoverHealthFromMonster
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   InHealth                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHulkBannerCharacter::RecoverHealthFromMonster(float InHealth)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HulkBannerCharacter", "RecoverHealthFromMonster");

	Params::HulkBannerCharacter_RecoverHealthFromMonster Parms{};

	Parms.InHealth = InHealth;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1011.HulkBannerCharacter.SetEnergyWhenSpawn
// (Final, Native, Public, BlueprintCallable)

void AHulkBannerCharacter::SetEnergyWhenSpawn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HulkBannerCharacter", "SetEnergyWhenSpawn");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1011.HulkBannerCharacter.SetHeroHulkCachedEnergy
// (Final, Native, Public)
// Parameters:
// float                                   InValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHulkBannerCharacter::SetHeroHulkCachedEnergy(float InValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HulkBannerCharacter", "SetHeroHulkCachedEnergy");

	Params::HulkBannerCharacter_SetHeroHulkCachedEnergy Parms{};

	Parms.InValue = InValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1011.HulkBannerCharacter.SetIsRecoverBuffApplyFailed
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    InFailed                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHulkBannerCharacter::SetIsRecoverBuffApplyFailed(bool InFailed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HulkBannerCharacter", "SetIsRecoverBuffApplyFailed");

	Params::HulkBannerCharacter_SetIsRecoverBuffApplyFailed Parms{};

	Parms.InFailed = InFailed;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1011.HulkBannerCharacter.SetServerStartSmashTime
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   InTime                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHulkBannerCharacter::SetServerStartSmashTime(float InTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HulkBannerCharacter", "SetServerStartSmashTime");

	Params::HulkBannerCharacter_SetServerStartSmashTime Parms{};

	Parms.InTime = InTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1011.HulkBannerCharacter.SetSynergyExtraCapsuleComponentEnabled
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// bool                                    bEnabled                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHulkBannerCharacter::SetSynergyExtraCapsuleComponentEnabled(bool bEnabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HulkBannerCharacter", "SetSynergyExtraCapsuleComponentEnabled");

	Params::HulkBannerCharacter_SetSynergyExtraCapsuleComponentEnabled Parms{};

	Parms.bEnabled = bEnabled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1011.HulkBannerCharacter.TryCancelAbility
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<int32>                           AbilityIDs                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void AHulkBannerCharacter::TryCancelAbility(const TArray<int32>& AbilityIDs)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HulkBannerCharacter", "TryCancelAbility");

	Params::HulkBannerCharacter_TryCancelAbility Parms{};

	Parms.AbilityIDs = std::move(AbilityIDs);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1011.HulkBannerCharacter.TryToClimbWhenHit
// (Final, Native, Public, HasOutParams, HasDefaults)
// Parameters:
// class UPrimitiveComponent*              HitComponent                                           (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           OtherActor                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*              OtherComp                                              (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          NormalImpulse                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult                       Hit                                                    (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

void AHulkBannerCharacter::TryToClimbWhenHit(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HulkBannerCharacter", "TryToClimbWhenHit");

	Params::HulkBannerCharacter_TryToClimbWhenHit Parms{};

	Parms.HitComponent = HitComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.NormalImpulse = std::move(NormalImpulse);
	Parms.Hit = std::move(Hit);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1011.HulkBannerCharacter.GetHeroHulkCachedEnergy
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AHulkBannerCharacter::GetHeroHulkCachedEnergy() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HulkBannerCharacter", "GetHeroHulkCachedEnergy");

	Params::HulkBannerCharacter_GetHeroHulkCachedEnergy Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hero_1011.HulkBannerCharacter.IsBanner
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AHulkBannerCharacter::IsBanner() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HulkBannerCharacter", "IsBanner");

	Params::HulkBannerCharacter_IsBanner Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hero_1011.HulkBannerCharacter.IsHeroHulk
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AHulkBannerCharacter::IsHeroHulk() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HulkBannerCharacter", "IsHeroHulk");

	Params::HulkBannerCharacter_IsHeroHulk Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hero_1011.HulkBannerCharacter.IsMonsterHulk
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AHulkBannerCharacter::IsMonsterHulk() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HulkBannerCharacter", "IsMonsterHulk");

	Params::HulkBannerCharacter_IsMonsterHulk Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hero_1011.BannerBaseChildActor.ChangeContainerState
// (Final, Native, Public)

void ABannerBaseChildActor::ChangeContainerState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BannerBaseChildActor", "ChangeContainerState");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1011.BannerBaseChildActor.ClearLoopTimer
// (Final, Native, Public, BlueprintCallable)

void ABannerBaseChildActor::ClearLoopTimer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BannerBaseChildActor", "ClearLoopTimer");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1011.BannerBaseChildActor.SetLoopTimer
// (Final, Native, Public, BlueprintCallable)

void ABannerBaseChildActor::SetLoopTimer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BannerBaseChildActor", "SetLoopTimer");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1011.HulkBannerMoveLogicBaseComponent.CheckClimbedWallValid
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHulkBannerMoveLogicBaseComponent::CheckClimbedWallValid()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HulkBannerMoveLogicBaseComponent", "CheckClimbedWallValid");

	Params::HulkBannerMoveLogicBaseComponent_CheckClimbedWallValid Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hero_1011.HulkBannerMoveLogicBaseComponent.ClientEnterClimb
// (Net, NetReliable, Native, Event, NetMulticast, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                          Location                                               (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FQuat                            Rotation                                               (ConstParm, Parm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHulkBannerMoveLogicBaseComponent::ClientEnterClimb(const struct FVector& Location, const struct FQuat& Rotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HulkBannerMoveLogicBaseComponent", "ClientEnterClimb");

	Params::HulkBannerMoveLogicBaseComponent_ClientEnterClimb Parms{};

	Parms.Location = std::move(Location);
	Parms.Rotation = std::move(Rotation);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1011.HulkBannerMoveLogicBaseComponent.ClientLeaveClimb
// (Net, NetReliable, Native, Event, NetMulticast, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                          Location                                               (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHulkBannerMoveLogicBaseComponent::ClientLeaveClimb(const struct FVector& Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HulkBannerMoveLogicBaseComponent", "ClientLeaveClimb");

	Params::HulkBannerMoveLogicBaseComponent_ClientLeaveClimb Parms{};

	Parms.Location = std::move(Location);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1011.HulkBannerMoveLogicBaseComponent.ClientOnLanded
// (Net, NetReliable, Native, Event, NetMulticast, Protected)
// Parameters:
// struct FHitResult                       Hit                                                    (ConstParm, Parm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
// bool                                    IsServerShiftJumpCancelled                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHulkBannerMoveLogicBaseComponent::ClientOnLanded(const struct FHitResult& Hit, bool IsServerShiftJumpCancelled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HulkBannerMoveLogicBaseComponent", "ClientOnLanded");

	Params::HulkBannerMoveLogicBaseComponent_ClientOnLanded Parms{};

	Parms.Hit = std::move(Hit);
	Parms.IsServerShiftJumpCancelled = IsServerShiftJumpCancelled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1011.HulkBannerMoveLogicBaseComponent.IgnorePawnCollision
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// bool                                    bIgnoreCollision                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHulkBannerMoveLogicBaseComponent::IgnorePawnCollision(bool bIgnoreCollision)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HulkBannerMoveLogicBaseComponent", "IgnorePawnCollision");

	Params::HulkBannerMoveLogicBaseComponent_IgnorePawnCollision Parms{};

	Parms.bIgnoreCollision = bIgnoreCollision;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1011.HulkBannerMoveLogicBaseComponent.IsShiftJumping
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHulkBannerMoveLogicBaseComponent::IsShiftJumping()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HulkBannerMoveLogicBaseComponent", "IsShiftJumping");

	Params::HulkBannerMoveLogicBaseComponent_IsShiftJumping Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hero_1011.HulkBannerMoveLogicBaseComponent.MulticastActivateShiftJump
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// float                                   JumpUpSeconds                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   JumpDownSeconds                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   JumpUpHeight                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   JumpDownHeight                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInOnWall                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHulkBannerMoveLogicBaseComponent::MulticastActivateShiftJump(float JumpUpSeconds, float JumpDownSeconds, float JumpUpHeight, float JumpDownHeight, bool bInOnWall)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HulkBannerMoveLogicBaseComponent", "MulticastActivateShiftJump");

	Params::HulkBannerMoveLogicBaseComponent_MulticastActivateShiftJump Parms{};

	Parms.JumpUpSeconds = JumpUpSeconds;
	Parms.JumpDownSeconds = JumpDownSeconds;
	Parms.JumpUpHeight = JumpUpHeight;
	Parms.JumpDownHeight = JumpDownHeight;
	Parms.bInOnWall = bInOnWall;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1011.HulkBannerMoveLogicBaseComponent.MulticastCancelShiftJump
// (Net, NetReliable, Native, Event, NetMulticast, Public)

void UHulkBannerMoveLogicBaseComponent::MulticastCancelShiftJump()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HulkBannerMoveLogicBaseComponent", "MulticastCancelShiftJump");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1011.HulkBannerMoveLogicBaseComponent.OnFallingBlockedCallback
// (Final, Native, Protected, HasOutParams)
// Parameters:
// struct FHitResult                       Hit                                                    (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

void UHulkBannerMoveLogicBaseComponent::OnFallingBlockedCallback(const struct FHitResult& Hit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HulkBannerMoveLogicBaseComponent", "OnFallingBlockedCallback");

	Params::HulkBannerMoveLogicBaseComponent_OnFallingBlockedCallback Parms{};

	Parms.Hit = std::move(Hit);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1011.HulkBannerMoveLogicBaseComponent.OnLandedCallback
// (Final, Native, Protected, HasOutParams)
// Parameters:
// struct FHitResult                       Hit                                                    (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

void UHulkBannerMoveLogicBaseComponent::OnLandedCallback(const struct FHitResult& Hit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HulkBannerMoveLogicBaseComponent", "OnLandedCallback");

	Params::HulkBannerMoveLogicBaseComponent_OnLandedCallback Parms{};

	Parms.Hit = std::move(Hit);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1011.HulkBannerMoveLogicBaseComponent.OnRep_InShiftJumpUpState
// (Final, Native, Protected)

void UHulkBannerMoveLogicBaseComponent::OnRep_InShiftJumpUpState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HulkBannerMoveLogicBaseComponent", "OnRep_InShiftJumpUpState");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1011.HulkBannerMoveLogicBaseComponent.OnTagUpdated
// (Final, Native, Protected, HasOutParams)
// Parameters:
// struct FGameplayTag                     TagUpdated                                             (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TagExists                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHulkBannerMoveLogicBaseComponent::OnTagUpdated(const struct FGameplayTag& TagUpdated, bool TagExists)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HulkBannerMoveLogicBaseComponent", "OnTagUpdated");

	Params::HulkBannerMoveLogicBaseComponent_OnTagUpdated Parms{};

	Parms.TagUpdated = std::move(TagUpdated);
	Parms.TagExists = TagExists;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1011.HulkBannerMoveLogicBaseComponent.PredictShiftJumpDataWhenPressed
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                          PredictVelocity                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bFromWall                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FVector>                  PredictionPath                                         (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// float                                   MaxFallSeconds                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   MaxJumpHeightDown                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHulkBannerMoveLogicBaseComponent::PredictShiftJumpDataWhenPressed(const struct FVector& PredictVelocity, bool bFromWall, TArray<struct FVector>* PredictionPath, float MaxFallSeconds, float MaxJumpHeightDown)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HulkBannerMoveLogicBaseComponent", "PredictShiftJumpDataWhenPressed");

	Params::HulkBannerMoveLogicBaseComponent_PredictShiftJumpDataWhenPressed Parms{};

	Parms.PredictVelocity = std::move(PredictVelocity);
	Parms.bFromWall = bFromWall;
	Parms.MaxFallSeconds = MaxFallSeconds;
	Parms.MaxJumpHeightDown = MaxJumpHeightDown;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (PredictionPath != nullptr)
		*PredictionPath = std::move(Parms.PredictionPath);
}


// Function Hero_1011.HulkBannerMoveLogicBaseComponent.PredictShiftJumpVelocity
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// float                                   PredictSpeed                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bRemoteRole                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                         InRotator                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector UHulkBannerMoveLogicBaseComponent::PredictShiftJumpVelocity(float PredictSpeed, bool bRemoteRole, const struct FRotator& InRotator)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HulkBannerMoveLogicBaseComponent", "PredictShiftJumpVelocity");

	Params::HulkBannerMoveLogicBaseComponent_PredictShiftJumpVelocity Parms{};

	Parms.PredictSpeed = PredictSpeed;
	Parms.bRemoteRole = bRemoteRole;
	Parms.InRotator = std::move(InRotator);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hero_1011.HulkBannerMoveLogicBaseComponent.ResetCachedMoveParam
// (Final, Native, Public, BlueprintCallable)

void UHulkBannerMoveLogicBaseComponent::ResetCachedMoveParam()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HulkBannerMoveLogicBaseComponent", "ResetCachedMoveParam");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1011.HulkBannerMoveLogicBaseComponent.ServerSetClimbDirection
// (Net, Native, Event, Public, NetServer)
// Parameters:
// float                                   Yaw                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHulkBannerMoveLogicBaseComponent::ServerSetClimbDirection(float Yaw)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HulkBannerMoveLogicBaseComponent", "ServerSetClimbDirection");

	Params::HulkBannerMoveLogicBaseComponent_ServerSetClimbDirection Parms{};

	Parms.Yaw = Yaw;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1011.HulkBannerMoveLogicBaseComponent.ServerSetClimbState
// (Net, NetReliable, Native, Event, Public, NetServer)
// Parameters:
// ECLIMBSTATE                             State                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHulkBannerMoveLogicBaseComponent::ServerSetClimbState(ECLIMBSTATE State)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HulkBannerMoveLogicBaseComponent", "ServerSetClimbState");

	Params::HulkBannerMoveLogicBaseComponent_ServerSetClimbState Parms{};

	Parms.State = State;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1011.HulkBannerMoveLogicBaseComponent.SetClimbParam
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FHulkClimbParam                  InClimbParam                                           (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UHulkBannerMoveLogicBaseComponent::SetClimbParam(const struct FHulkClimbParam& InClimbParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HulkBannerMoveLogicBaseComponent", "SetClimbParam");

	Params::HulkBannerMoveLogicBaseComponent_SetClimbParam Parms{};

	Parms.InClimbParam = std::move(InClimbParam);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1011.HulkBannerMoveLogicBaseComponent.SetGravityScale
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   InGravityScale                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHulkBannerMoveLogicBaseComponent::SetGravityScale(float InGravityScale)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HulkBannerMoveLogicBaseComponent", "SetGravityScale");

	Params::HulkBannerMoveLogicBaseComponent_SetGravityScale Parms{};

	Parms.InGravityScale = InGravityScale;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1011.HulkBannerMoveLogicBaseComponent.SetHulkJumpParam
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FHulkJumpParam                   InJumpParam                                            (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UHulkBannerMoveLogicBaseComponent::SetHulkJumpParam(const struct FHulkJumpParam& InJumpParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HulkBannerMoveLogicBaseComponent", "SetHulkJumpParam");

	Params::HulkBannerMoveLogicBaseComponent_SetHulkJumpParam Parms{};

	Parms.InJumpParam = std::move(InJumpParam);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1011.HulkBannerMoveLogicBaseComponent.ShiftJump
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bInOnWall                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   PawnCollisionIgnoreDuration                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHulkBannerMoveLogicBaseComponent::ShiftJump(bool bInOnWall, float PawnCollisionIgnoreDuration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HulkBannerMoveLogicBaseComponent", "ShiftJump");

	Params::HulkBannerMoveLogicBaseComponent_ShiftJump Parms{};

	Parms.bInOnWall = bInOnWall;
	Parms.PawnCollisionIgnoreDuration = PawnCollisionIgnoreDuration;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1011.HulkBannerMoveLogicBaseComponent.ShiftJumpLaunchCharacter
// (Final, Native, Public)

void UHulkBannerMoveLogicBaseComponent::ShiftJumpLaunchCharacter()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HulkBannerMoveLogicBaseComponent", "ShiftJumpLaunchCharacter");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1011.HulkBannerMoveLogicBaseComponent.ShiftJumpWithCustomSpeed
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   InitSpeed                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsOnWall                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   PawnCollisionIgnoreDuration                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHulkBannerMoveLogicBaseComponent::ShiftJumpWithCustomSpeed(float InitSpeed, bool bIsOnWall, float PawnCollisionIgnoreDuration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HulkBannerMoveLogicBaseComponent", "ShiftJumpWithCustomSpeed");

	Params::HulkBannerMoveLogicBaseComponent_ShiftJumpWithCustomSpeed Parms{};

	Parms.InitSpeed = InitSpeed;
	Parms.bIsOnWall = bIsOnWall;
	Parms.PawnCollisionIgnoreDuration = PawnCollisionIgnoreDuration;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1011.HulkBannerMoveLogicBaseComponent.StopShiftJump
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bCancelNormalJump                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bResetCacheParam                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHulkBannerMoveLogicBaseComponent::StopShiftJump(bool bCancelNormalJump, bool bResetCacheParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HulkBannerMoveLogicBaseComponent", "StopShiftJump");

	Params::HulkBannerMoveLogicBaseComponent_StopShiftJump Parms{};

	Parms.bCancelNormalJump = bCancelNormalJump;
	Parms.bResetCacheParam = bResetCacheParam;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1011.HulkBannerMoveLogicBaseComponent.StopShiftJumpMoving
// (Final, Native, Public, BlueprintCallable)

void UHulkBannerMoveLogicBaseComponent::StopShiftJumpMoving()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HulkBannerMoveLogicBaseComponent", "StopShiftJumpMoving");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1011.HulkBannerMoveLogicBaseComponent.TriggerClimbToShiftTurn
// (Final, Native, Public, BlueprintCallable)

void UHulkBannerMoveLogicBaseComponent::TriggerClimbToShiftTurn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HulkBannerMoveLogicBaseComponent", "TriggerClimbToShiftTurn");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1011.HulkBannerMoveLogicBaseComponent.TryToClimb
// (Final, Native, Public, BlueprintCallable)

void UHulkBannerMoveLogicBaseComponent::TryToClimb()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HulkBannerMoveLogicBaseComponent", "TryToClimb");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1011.HulkBannerMoveLogicBaseComponent.UpdateClimbCustomMove
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   DeltaTime                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHulkBannerMoveLogicBaseComponent::UpdateClimbCustomMove(float DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HulkBannerMoveLogicBaseComponent", "UpdateClimbCustomMove");

	Params::HulkBannerMoveLogicBaseComponent_UpdateClimbCustomMove Parms{};

	Parms.DeltaTime = DeltaTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1011.HulkBannerMoveLogicBaseComponent.UpdateShiftJumpUpState
// (Final, Native, Public, HasDefaults)
// Parameters:
// float                                   DeltaSeconds                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          OldLocation                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          OldVelocity                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHulkBannerMoveLogicBaseComponent::UpdateShiftJumpUpState(float DeltaSeconds, const struct FVector& OldLocation, const struct FVector& OldVelocity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HulkBannerMoveLogicBaseComponent", "UpdateShiftJumpUpState");

	Params::HulkBannerMoveLogicBaseComponent_UpdateShiftJumpUpState Parms{};

	Parms.DeltaSeconds = DeltaSeconds;
	Parms.OldLocation = std::move(OldLocation);
	Parms.OldVelocity = std::move(OldVelocity);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1011.HulkBannerMoveLogicBaseComponent.IsClimbing
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHulkBannerMoveLogicBaseComponent::IsClimbing() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HulkBannerMoveLogicBaseComponent", "IsClimbing");

	Params::HulkBannerMoveLogicBaseComponent_IsClimbing Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hero_1011.HulkBannerMoveLogicBaseComponent.IsClimbingWithAbilityStateCheck
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHulkBannerMoveLogicBaseComponent::IsClimbingWithAbilityStateCheck() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HulkBannerMoveLogicBaseComponent", "IsClimbingWithAbilityStateCheck");

	Params::HulkBannerMoveLogicBaseComponent_IsClimbingWithAbilityStateCheck Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hero_1011.HulkBannerMoveLogicBaseComponent.IsHanging
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHulkBannerMoveLogicBaseComponent::IsHanging() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HulkBannerMoveLogicBaseComponent", "IsHanging");

	Params::HulkBannerMoveLogicBaseComponent_IsHanging Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hero_1011.TabData_1011.AddTabDataValue
// (Event, Public, BlueprintEvent)
// Parameters:
// class AActor*                           InSource                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           InTarget                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   BuffID                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTabData_1011::AddTabDataValue(class AActor* InSource, class AActor* InTarget, int32 BuffID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TabData_1011", "AddTabDataValue");

	Params::TabData_1011_AddTabDataValue Parms{};

	Parms.InSource = InSource;
	Parms.InTarget = InTarget;
	Parms.BuffID = BuffID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Hero_1011.TabData_1011.OnActorDeath
// (Final, Native, Public, HasOutParams)
// Parameters:
// class AActor*                           Killer                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           Target                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FAttributeModifierHandle         ModifierParameterHandle                                (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGlobalEventExtraData            ExtraData                                              (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UTabData_1011::OnActorDeath(class AActor* Killer, class AActor* Target, const struct FAttributeModifierHandle& ModifierParameterHandle, const struct FGlobalEventExtraData& ExtraData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TabData_1011", "OnActorDeath");

	Params::TabData_1011_OnActorDeath Parms{};

	Parms.Killer = Killer;
	Parms.Target = Target;
	Parms.ModifierParameterHandle = std::move(ModifierParameterHandle);
	Parms.ExtraData = std::move(ExtraData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1011.TabData_1011.OnBuffApplied
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UAbilitySystemComponent*          Source                                                 (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAbilitySystemComponent*          Target                                                 (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayEffectSpecStackHandle   EffectSpecStackHandle                                  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// struct FActiveGameplayEffectHandle      EffectHandle                                           (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTabData_1011::OnBuffApplied(class UAbilitySystemComponent* Source, class UAbilitySystemComponent* Target, const struct FGameplayEffectSpecStackHandle& EffectSpecStackHandle, const struct FActiveGameplayEffectHandle& EffectHandle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TabData_1011", "OnBuffApplied");

	Params::TabData_1011_OnBuffApplied Parms{};

	Parms.Source = Source;
	Parms.Target = Target;
	Parms.EffectSpecStackHandle = std::move(EffectSpecStackHandle);
	Parms.EffectHandle = std::move(EffectHandle);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}

}

