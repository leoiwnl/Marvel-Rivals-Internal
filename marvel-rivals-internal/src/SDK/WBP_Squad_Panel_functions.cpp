#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Squad_Panel

#include "Basic.hpp"

#include "WBP_Squad_Panel_classes.hpp"
#include "WBP_Squad_Panel_parameters.hpp"


namespace SDK
{

// Function WBP_Squad_Panel.WBP_Squad_Panel_C.ExecuteUbergraph_WBP_Squad_Panel
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_Squad_Panel_C::ExecuteUbergraph_WBP_Squad_Panel(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Squad_Panel_C", "ExecuteUbergraph_WBP_Squad_Panel");

	Params::WBP_Squad_Panel_C_ExecuteUbergraph_WBP_Squad_Panel Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_Squad_Panel.WBP_Squad_Panel_C.SequenceEvent
// (BlueprintCallable, BlueprintEvent)

void UWBP_Squad_Panel_C::SequenceEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Squad_Panel_C", "SequenceEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_Squad_Panel.WBP_Squad_Panel_C.SequenceEvent__ENTRYPOINTWBP_Squad_Panel
// (Public, BlueprintCallable, BlueprintEvent)

void UWBP_Squad_Panel_C::SequenceEvent__ENTRYPOINTWBP_Squad_Panel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Squad_Panel_C", "SequenceEvent__ENTRYPOINTWBP_Squad_Panel");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_Squad_Panel.WBP_Squad_Panel_C.SequenceEvent__ENTRYPOINTWBP_Squad_Panel_0
// (Public, BlueprintCallable, BlueprintEvent)

void UWBP_Squad_Panel_C::SequenceEvent__ENTRYPOINTWBP_Squad_Panel_0()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Squad_Panel_C", "SequenceEvent__ENTRYPOINTWBP_Squad_Panel_0");

	UObject::ProcessEvent(Func, nullptr);
}

}

