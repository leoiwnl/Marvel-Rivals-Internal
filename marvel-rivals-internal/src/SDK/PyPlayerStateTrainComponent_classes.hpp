#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PyPlayerStateTrainComponent

#include "Basic.hpp"

#include "MarvelLevel_structs.hpp"
#include "MarvelLevel_classes.hpp"
#include "python_enums_structs.hpp"
#include "Marvel_structs.hpp"


namespace SDK
{

// PythonClass PyPlayerStateTrainComponent.PyPlayerStateTrainComponent
// 0x0150 (0x0270 - 0x0120)
class UPyPlayerStateTrainComponent final : public UPlayerStateTrainComponent
{
public:
	struct FReplicateTimer                        DelayTimer;                                        // 0x0120(0x0078)(BlueprintVisible, Net, NativeAccessSpecifierPublic)
	struct FReplicateTimer                        TrainingTimer;                                     // 0x0198(0x0078)(BlueprintVisible, Net, NativeAccessSpecifierPublic)
	int32                                         PrepareTrainAction;                                // 0x0210(0x0004)(BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         TrainAction;                                       // 0x0214(0x0004)(BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ETrainAreaType                                TrainAreaType;                                     // 0x0218(0x0001)(BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_219[0x3];                                      // 0x0219(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         TrainTraceScore;                                   // 0x021C(0x0004)(BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         TrainTimeStamp;                                    // 0x0220(0x0004)(BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         TracePointIndex;                                   // 0x0224(0x0004)(BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         TracePointTotal;                                   // 0x0228(0x0004)(BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_22C[0x4];                                      // 0x022C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FTrainResult>                   TrainResultList;                                   // 0x0230(0x0010)(BlueprintVisible, Net, NativeAccessSpecifierPublic)
	float                                         TrainStartTimeStamp;                               // 0x0240(0x0004)(BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         TrainEndTimeStamp;                                 // 0x0244(0x0004)(BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         TrainRet;                                          // 0x0248(0x0004)(BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          IsTrainFinish;                                     // 0x024C(0x0001)(BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_24D[0x3];                                      // 0x024D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(ETrainAction Action, int32 UID)> TrainEnd;                                          // 0x0250(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(ETrainAction Action, int32 UID)> DelayQuickTrainEnd;                                // 0x0260(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)

public:
	void ReceiveInitializeComponent();
	void ReceiveBeginPlay();
	void OnRep_TrainAreaType();
	void OnRep_TrainAction();
	void recover_train_pre_hero();
	void notify_train_delay(ETrainAction Action, float Delay);
	void notify_train_delay_end(ETrainAction Action);
	void Step_start_train();
	void EndTrain();
	void OnRep_TracePointIndex();
	void OnRep_TracePointTotal();
	void train_tips(const class FString& Text, ETipsPriority Priority);
	void train_tips_bykey(const class FString& Key, const TArray<class FString>& replace_list, ETipsPriority Priority);
	void train_holder_tips(int32 holder_uid, ETipsPriority Priority);
	void formal_start_trace_train(ETrainAction Action, int32 select_hero);
	void formal_start_fixedtarget_train(int32 select_hero, EShootingDis select_dis);
	void formal_start_movingtarget_train(int32 select_hero, EShootingDis select_dis, float target_speed, int32 target_type);
	void formal_start_melee_train(ETrainAction Action, int32 select_hero, ETrainAIModeType move_type);
	void set_not_cd(bool no_cd);
	void set_friend_harm(bool no_cd);
	void stop_train();
	void spawn_train_entry_ai(class APyAISpawnActor* spawner);
	void destroy_train_entry_ai(class APyAISpawnActor* spawner);
	void set_entry_play_state(class AActor* entry_controller, bool is_playing);
	void trigger_entry_chaos_destruction(class AActor* entry_controller, const class FString& actor_name);
	void trigger_entry_chaos_recovery(class AActor* entry_controller, const class FString& actor_name);
	void start_limit_time_train(class AActor* limit_time_train_computer);
	void set_limit_time_train_config(class AActor* limit_time_train_computer, const TArray<class FString>& key_list, const TArray<int32>& value_list);
	void spwan_ai_on_entry();
	void on_teleport_player_to_train_area(class AActor* train_computer);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyPlayerStateTrainComponent">();
	}
	static class UPyPlayerStateTrainComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyPlayerStateTrainComponent>();
	}
};

}

