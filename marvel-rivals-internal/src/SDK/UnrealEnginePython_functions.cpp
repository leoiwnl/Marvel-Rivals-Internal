#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UnrealEnginePython

#include "Basic.hpp"

#include "UnrealEnginePython_classes.hpp"
#include "UnrealEnginePython_parameters.hpp"


namespace SDK
{

// Function UnrealEnginePython.PyActor.CallPythonActorMethod
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             Method_Name                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           Args                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void APyActor::CallPythonActorMethod(class FName Method_Name, const class FString& Args)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyActor", "CallPythonActorMethod");

	Params::PyActor_CallPythonActorMethod Parms{};

	Parms.Method_Name = Method_Name;
	Parms.Args = std::move(Args);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnrealEnginePython.PyActor.CallPythonActorMethodBool
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             Method_Name                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           Args                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool APyActor::CallPythonActorMethodBool(class FName Method_Name, const class FString& Args)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyActor", "CallPythonActorMethodBool");

	Params::PyActor_CallPythonActorMethodBool Parms{};

	Parms.Method_Name = Method_Name;
	Parms.Args = std::move(Args);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnrealEnginePython.PyActor.CallPythonActorMethodString
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             Method_Name                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           Args                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString APyActor::CallPythonActorMethodString(class FName Method_Name, const class FString& Args)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyActor", "CallPythonActorMethodString");

	Params::PyActor_CallPythonActorMethodString Parms{};

	Parms.Method_Name = Method_Name;
	Parms.Args = std::move(Args);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnrealEnginePython.PyCharacter.CallPyCharacterMethod
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             Method_Name                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           Args                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void APyCharacter::CallPyCharacterMethod(class FName Method_Name, const class FString& Args)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyCharacter", "CallPyCharacterMethod");

	Params::PyCharacter_CallPyCharacterMethod Parms{};

	Parms.Method_Name = Method_Name;
	Parms.Args = std::move(Args);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnrealEnginePython.PyCharacter.CallPyCharacterMethodBool
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             Method_Name                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           Args                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool APyCharacter::CallPyCharacterMethodBool(class FName Method_Name, const class FString& Args)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyCharacter", "CallPyCharacterMethodBool");

	Params::PyCharacter_CallPyCharacterMethodBool Parms{};

	Parms.Method_Name = Method_Name;
	Parms.Args = std::move(Args);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnrealEnginePython.PyCharacter.CallPyCharacterMethodFloat
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             Method_Name                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           Args                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float APyCharacter::CallPyCharacterMethodFloat(class FName Method_Name, const class FString& Args)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyCharacter", "CallPyCharacterMethodFloat");

	Params::PyCharacter_CallPyCharacterMethodFloat Parms{};

	Parms.Method_Name = Method_Name;
	Parms.Args = std::move(Args);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnrealEnginePython.PyCharacter.CallPyCharacterMethodString
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             Method_Name                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           Args                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString APyCharacter::CallPyCharacterMethodString(class FName Method_Name, const class FString& Args)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyCharacter", "CallPyCharacterMethodString");

	Params::PyCharacter_CallPyCharacterMethodString Parms{};

	Parms.Method_Name = Method_Name;
	Parms.Args = std::move(Args);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnrealEnginePython.PyCharacter.SetPythonAttrBool
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             attr                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    Boolean                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void APyCharacter::SetPythonAttrBool(class FName attr, bool Boolean)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyCharacter", "SetPythonAttrBool");

	Params::PyCharacter_SetPythonAttrBool Parms{};

	Parms.attr = attr;
	Parms.Boolean = Boolean;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnrealEnginePython.PyCharacter.SetPythonAttrFloat
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             attr                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   float_0                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void APyCharacter::SetPythonAttrFloat(class FName attr, float float_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyCharacter", "SetPythonAttrFloat");

	Params::PyCharacter_SetPythonAttrFloat Parms{};

	Parms.attr = attr;
	Parms.float_0 = float_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnrealEnginePython.PyCharacter.SetPythonAttrInt
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             attr                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Integer                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void APyCharacter::SetPythonAttrInt(class FName attr, int32 Integer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyCharacter", "SetPythonAttrInt");

	Params::PyCharacter_SetPythonAttrInt Parms{};

	Parms.attr = attr;
	Parms.Integer = Integer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnrealEnginePython.PyCharacter.SetPythonAttrObject
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             attr                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          Object                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void APyCharacter::SetPythonAttrObject(class FName attr, class UObject* Object)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyCharacter", "SetPythonAttrObject");

	Params::PyCharacter_SetPythonAttrObject Parms{};

	Parms.attr = attr;
	Parms.Object = Object;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnrealEnginePython.PyCharacter.SetPythonAttrRotator
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class FName                             attr                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                         Rotator                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

void APyCharacter::SetPythonAttrRotator(class FName attr, const struct FRotator& Rotator)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyCharacter", "SetPythonAttrRotator");

	Params::PyCharacter_SetPythonAttrRotator Parms{};

	Parms.attr = attr;
	Parms.Rotator = std::move(Rotator);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnrealEnginePython.PyCharacter.SetPythonAttrString
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             attr                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           String                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void APyCharacter::SetPythonAttrString(class FName attr, const class FString& String)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyCharacter", "SetPythonAttrString");

	Params::PyCharacter_SetPythonAttrString Parms{};

	Parms.attr = attr;
	Parms.String = std::move(String);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnrealEnginePython.PyCharacter.SetPythonAttrVector
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class FName                             attr                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          Vector                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void APyCharacter::SetPythonAttrVector(class FName attr, const struct FVector& Vector)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyCharacter", "SetPythonAttrVector");

	Params::PyCharacter_SetPythonAttrVector Parms{};

	Parms.attr = attr;
	Parms.Vector = std::move(Vector);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnrealEnginePython.PyHUD.CallPythonHUDMethod
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             Method_Name                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           Args                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void APyHUD::CallPythonHUDMethod(class FName Method_Name, const class FString& Args)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyHUD", "CallPythonHUDMethod");

	Params::PyHUD_CallPythonHUDMethod Parms{};

	Parms.Method_Name = Method_Name;
	Parms.Args = std::move(Args);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnrealEnginePython.PyHUD.CallPythonHUDMethodBool
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             Method_Name                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           Args                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool APyHUD::CallPythonHUDMethodBool(class FName Method_Name, const class FString& Args)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyHUD", "CallPythonHUDMethodBool");

	Params::PyHUD_CallPythonHUDMethodBool Parms{};

	Parms.Method_Name = Method_Name;
	Parms.Args = std::move(Args);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnrealEnginePython.PyHUD.CallPythonHUDMethodString
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             Method_Name                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           Args                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString APyHUD::CallPythonHUDMethodString(class FName Method_Name, const class FString& Args)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyHUD", "CallPythonHUDMethodString");

	Params::PyHUD_CallPythonHUDMethodString Parms{};

	Parms.Method_Name = Method_Name;
	Parms.Args = std::move(Args);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnrealEnginePython.PyPawn.CallPythonPawnMethod
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             Method_Name                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void APyPawn::CallPythonPawnMethod(class FName Method_Name)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyPawn", "CallPythonPawnMethod");

	Params::PyPawn_CallPythonPawnMethod Parms{};

	Parms.Method_Name = Method_Name;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnrealEnginePython.PyPawn.CallPythonPawnMethodBool
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             Method_Name                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool APyPawn::CallPythonPawnMethodBool(class FName Method_Name)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyPawn", "CallPythonPawnMethodBool");

	Params::PyPawn_CallPythonPawnMethodBool Parms{};

	Parms.Method_Name = Method_Name;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnrealEnginePython.PyPawn.CallPythonPawnMethodString
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             Method_Name                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString APyPawn::CallPythonPawnMethodString(class FName Method_Name)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyPawn", "CallPythonPawnMethodString");

	Params::PyPawn_CallPythonPawnMethodString Parms{};

	Parms.Method_Name = Method_Name;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnrealEnginePython.TestOnlyObject.AddRefCount
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FTestOnlyRefCount                InOutRefCount                                          (Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UTestOnlyObject::AddRefCount(struct FTestOnlyRefCount& InOutRefCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TestOnlyObject", "AddRefCount");

	Params::TestOnlyObject_AddRefCount Parms{};

	Parms.InOutRefCount = std::move(InOutRefCount);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	InOutRefCount = std::move(Parms.InOutRefCount);

	return Parms.ReturnValue;
}


// Function UnrealEnginePython.TestOnlyObject.GetOwnedRefs
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FTestOnlyRefCount                RefCount                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UTestOnlyObject::GetOwnedRefs(const struct FTestOnlyRefCount& RefCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TestOnlyObject", "GetOwnedRefs");

	Params::TestOnlyObject_GetOwnedRefs Parms{};

	Parms.RefCount = std::move(RefCount);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnrealEnginePython.TestOnlyObject.GetTotalRefs
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UTestOnlyObject::GetTotalRefs()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TestOnlyObject", "GetTotalRefs");

	Params::TestOnlyObject_GetTotalRefs Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnrealEnginePython.TestOnlyObject.NewRefCount
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// struct FTestOnlyRefCount                ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FTestOnlyRefCount UTestOnlyObject::NewRefCount()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TestOnlyObject", "NewRefCount");

	Params::TestOnlyObject_NewRefCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnrealEnginePython.TestOnlyObject.NewRefCount2
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// struct FTestOnlyRefCount                ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FTestOnlyRefCount UTestOnlyObject::NewRefCount2()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TestOnlyObject", "NewRefCount2");

	Params::TestOnlyObject_NewRefCount2 Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnrealEnginePython.TestOnlyObject.OutRefCount
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FTestOnlyRefCount                OutRefCount_0                                          (Parm, OutParm, NativeAccessSpecifierPublic)

void UTestOnlyObject::OutRefCount(struct FTestOnlyRefCount* OutRefCount_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TestOnlyObject", "OutRefCount");

	Params::TestOnlyObject_OutRefCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutRefCount_0 != nullptr)
		*OutRefCount_0 = std::move(Parms.OutRefCount_0);
}


// Function UnrealEnginePython.TestOnlyObject.OutRefCount2
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FTestOnlyRefCount                OutRefCount                                            (Parm, OutParm, NativeAccessSpecifierPublic)

void UTestOnlyObject::OutRefCount2(struct FTestOnlyRefCount* OutRefCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TestOnlyObject", "OutRefCount2");

	Params::TestOnlyObject_OutRefCount2 Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutRefCount != nullptr)
		*OutRefCount = std::move(Parms.OutRefCount);
}


// Function UnrealEnginePython.TestOnlyObject.OutRefCount_NoImpl
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FTestOnlyRefCount                OutRefCount                                            (Parm, OutParm, NativeAccessSpecifierPublic)

void UTestOnlyObject::OutRefCount_NoImpl(struct FTestOnlyRefCount* OutRefCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TestOnlyObject", "OutRefCount_NoImpl");

	Params::TestOnlyObject_OutRefCount_NoImpl Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutRefCount != nullptr)
		*OutRefCount = std::move(Parms.OutRefCount);
}


// Function UnrealEnginePython.TestOnlyObject.BP_NewRefCount
// (Event, Public, BlueprintEvent)
// Parameters:
// struct FTestOnlyRefCount                ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FTestOnlyRefCount UTestOnlyObject::BP_NewRefCount()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TestOnlyObject", "BP_NewRefCount");

	Params::TestOnlyObject_BP_NewRefCount Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function UnrealEnginePython.TestOnlyObject.Call_BP_NewRefCount
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FTestOnlyRefCount                ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FTestOnlyRefCount UTestOnlyObject::Call_BP_NewRefCount()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TestOnlyObject", "Call_BP_NewRefCount");

	Params::TestOnlyObject_Call_BP_NewRefCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnrealEnginePython.PythonBlueprintFunctionLibrary.ExecutePythonScript
// (Final, Exec, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           Script                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPythonBlueprintFunctionLibrary::ExecutePythonScript(const class FString& Script)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PythonBlueprintFunctionLibrary", "ExecutePythonScript");

	Params::PythonBlueprintFunctionLibrary_ExecutePythonScript Parms{};

	Parms.Script = std::move(Script);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnrealEnginePython.PythonBlueprintFunctionLibrary.ExecutePythonString
// (Final, Exec, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           PythonCmd                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPythonBlueprintFunctionLibrary::ExecutePythonString(const class FString& PythonCmd)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PythonBlueprintFunctionLibrary", "ExecutePythonString");

	Params::PythonBlueprintFunctionLibrary_ExecutePythonString Parms{};

	Parms.PythonCmd = std::move(PythonCmd);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnrealEnginePython.PythonComponent.CallPythonComponentMethod
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             Method_Name                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           Args                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPythonComponent::CallPythonComponentMethod(class FName Method_Name, const class FString& Args)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PythonComponent", "CallPythonComponentMethod");

	Params::PythonComponent_CallPythonComponentMethod Parms{};

	Parms.Method_Name = Method_Name;
	Parms.Args = std::move(Args);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnrealEnginePython.PythonComponent.CallPythonComponentMethodBool
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             Method_Name                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           Args                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPythonComponent::CallPythonComponentMethodBool(class FName Method_Name, const class FString& Args)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PythonComponent", "CallPythonComponentMethodBool");

	Params::PythonComponent_CallPythonComponentMethodBool Parms{};

	Parms.Method_Name = Method_Name;
	Parms.Args = std::move(Args);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnrealEnginePython.PythonComponent.CallPythonComponentMethodFloat
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             Method_Name                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           Args                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UPythonComponent::CallPythonComponentMethodFloat(class FName Method_Name, const class FString& Args)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PythonComponent", "CallPythonComponentMethodFloat");

	Params::PythonComponent_CallPythonComponentMethodFloat Parms{};

	Parms.Method_Name = Method_Name;
	Parms.Args = std::move(Args);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnrealEnginePython.PythonComponent.CallPythonComponentMethodInt
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             Method_Name                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           Args                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UPythonComponent::CallPythonComponentMethodInt(class FName Method_Name, const class FString& Args)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PythonComponent", "CallPythonComponentMethodInt");

	Params::PythonComponent_CallPythonComponentMethodInt Parms{};

	Parms.Method_Name = Method_Name;
	Parms.Args = std::move(Args);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnrealEnginePython.PythonComponent.CallPythonComponentMethodMap
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             Method_Name                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           Args                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TMap<class FString, class FString>      ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

TMap<class FString, class FString> UPythonComponent::CallPythonComponentMethodMap(class FName Method_Name, const class FString& Args)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PythonComponent", "CallPythonComponentMethodMap");

	Params::PythonComponent_CallPythonComponentMethodMap Parms{};

	Parms.Method_Name = Method_Name;
	Parms.Args = std::move(Args);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnrealEnginePython.PythonComponent.CallPythonComponentMethodObject
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             Method_Name                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          Arg                                                    (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UObject* UPythonComponent::CallPythonComponentMethodObject(class FName Method_Name, class UObject* Arg)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PythonComponent", "CallPythonComponentMethodObject");

	Params::PythonComponent_CallPythonComponentMethodObject Parms{};

	Parms.Method_Name = Method_Name;
	Parms.Arg = Arg;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnrealEnginePython.PythonComponent.CallPythonComponentMethodString
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             Method_Name                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           Args                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UPythonComponent::CallPythonComponentMethodString(class FName Method_Name, const class FString& Args)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PythonComponent", "CallPythonComponentMethodString");

	Params::PythonComponent_CallPythonComponentMethodString Parms{};

	Parms.Method_Name = Method_Name;
	Parms.Args = std::move(Args);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnrealEnginePython.PythonComponent.CallPythonComponentMethodStringArray
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FName                             Method_Name                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           Args                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FString>                   output_strings                                         (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UPythonComponent::CallPythonComponentMethodStringArray(class FName Method_Name, const class FString& Args, TArray<class FString>* output_strings)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PythonComponent", "CallPythonComponentMethodStringArray");

	Params::PythonComponent_CallPythonComponentMethodStringArray Parms{};

	Parms.Method_Name = Method_Name;
	Parms.Args = std::move(Args);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (output_strings != nullptr)
		*output_strings = std::move(Parms.output_strings);
}


// Function UnrealEnginePython.PythonComponent.InitializePythonComponent
// (Final, Native, Public, BlueprintCallable)

void UPythonComponent::InitializePythonComponent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PythonComponent", "InitializePythonComponent");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnrealEnginePython.PythonComponent.SetPythonAttrBool
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             attr                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    Boolean                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPythonComponent::SetPythonAttrBool(class FName attr, bool Boolean)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PythonComponent", "SetPythonAttrBool");

	Params::PythonComponent_SetPythonAttrBool Parms{};

	Parms.attr = attr;
	Parms.Boolean = Boolean;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnrealEnginePython.PythonComponent.SetPythonAttrFloat
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             attr                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   float_0                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPythonComponent::SetPythonAttrFloat(class FName attr, float float_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PythonComponent", "SetPythonAttrFloat");

	Params::PythonComponent_SetPythonAttrFloat Parms{};

	Parms.attr = attr;
	Parms.float_0 = float_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnrealEnginePython.PythonComponent.SetPythonAttrInt
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             attr                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Integer                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPythonComponent::SetPythonAttrInt(class FName attr, int32 Integer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PythonComponent", "SetPythonAttrInt");

	Params::PythonComponent_SetPythonAttrInt Parms{};

	Parms.attr = attr;
	Parms.Integer = Integer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnrealEnginePython.PythonComponent.SetPythonAttrObject
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             attr                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          Object                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPythonComponent::SetPythonAttrObject(class FName attr, class UObject* Object)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PythonComponent", "SetPythonAttrObject");

	Params::PythonComponent_SetPythonAttrObject Parms{};

	Parms.attr = attr;
	Parms.Object = Object;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnrealEnginePython.PythonComponent.SetPythonAttrRotator
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class FName                             attr                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                         Rotator                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

void UPythonComponent::SetPythonAttrRotator(class FName attr, const struct FRotator& Rotator)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PythonComponent", "SetPythonAttrRotator");

	Params::PythonComponent_SetPythonAttrRotator Parms{};

	Parms.attr = attr;
	Parms.Rotator = std::move(Rotator);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnrealEnginePython.PythonComponent.SetPythonAttrString
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             attr                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           String                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPythonComponent::SetPythonAttrString(class FName attr, const class FString& String)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PythonComponent", "SetPythonAttrString");

	Params::PythonComponent_SetPythonAttrString Parms{};

	Parms.attr = attr;
	Parms.String = std::move(String);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnrealEnginePython.PythonComponent.SetPythonAttrVector
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class FName                             attr                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          Vector                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPythonComponent::SetPythonAttrVector(class FName attr, const struct FVector& Vector)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PythonComponent", "SetPythonAttrVector");

	Params::PythonComponent_SetPythonAttrVector Parms{};

	Parms.attr = attr;
	Parms.Vector = std::move(Vector);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnrealEnginePython.PythonDelegate.PyFakeCallable
// (Final, Native, Protected)

void UPythonDelegate::PyFakeCallable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PythonDelegate", "PyFakeCallable");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnrealEnginePython.PythonScript.Run
// (Final, Native, Public)

void UPythonScript::Run()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PythonScript", "Run");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnrealEnginePython.PyUserWidget.CallPythonUserWidgetMethod
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             Method_Name                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           Args                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPyUserWidget::CallPythonUserWidgetMethod(class FName Method_Name, const class FString& Args)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyUserWidget", "CallPythonUserWidgetMethod");

	Params::PyUserWidget_CallPythonUserWidgetMethod Parms{};

	Parms.Method_Name = Method_Name;
	Parms.Args = std::move(Args);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnrealEnginePython.TestInvokeObject.Call_int
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UTestInvokeObject::Call_int()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TestInvokeObject", "Call_int");

	Params::TestInvokeObject_Call_int Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnrealEnginePython.TestInvokeObject.Call_obj
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UTestInvokeObject*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTestInvokeObject* UTestInvokeObject::Call_obj()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TestInvokeObject", "Call_obj");

	Params::TestInvokeObject_Call_obj Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnrealEnginePython.TestInvokeObject.Call_str
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UTestInvokeObject::Call_str()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TestInvokeObject", "Call_str");

	Params::TestInvokeObject_Call_str Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnrealEnginePython.TestInvokeObject.Call_struct
// (Final, Native, Public)
// Parameters:
// struct FTestInvokeStruct                ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FTestInvokeStruct UTestInvokeObject::Call_struct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TestInvokeObject", "Call_struct");

	Params::TestInvokeObject_Call_struct Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnrealEnginePython.TestInvokeObject.Call_void
// (Final, Native, Public, BlueprintCallable)

void UTestInvokeObject::Call_void()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TestInvokeObject", "Call_void");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnrealEnginePython.TestInvokeObject.Call_void_int
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   InArg1                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTestInvokeObject::Call_void_int(int32 InArg1)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TestInvokeObject", "Call_void_int");

	Params::TestInvokeObject_Call_void_int Parms{};

	Parms.InArg1 = InArg1;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnrealEnginePython.TestInvokeObject.Call_void_int_int
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   InArg1                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InArg2                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTestInvokeObject::Call_void_int_int(int32 InArg1, int32 InArg2)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TestInvokeObject", "Call_void_int_int");

	Params::TestInvokeObject_Call_void_int_int Parms{};

	Parms.InArg1 = InArg1;
	Parms.InArg2 = InArg2;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnrealEnginePython.TestInvokeObject.Call_void_int_int_float
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   InArg1                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InArg2                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   IntArg3                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTestInvokeObject::Call_void_int_int_float(int32 InArg1, int32 InArg2, float IntArg3)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TestInvokeObject", "Call_void_int_int_float");

	Params::TestInvokeObject_Call_void_int_int_float Parms{};

	Parms.InArg1 = InArg1;
	Parms.InArg2 = InArg2;
	Parms.IntArg3 = IntArg3;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnrealEnginePython.TestInvokeObject.Call_void_object
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UTestInvokeObject*                InArg1                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTestInvokeObject::Call_void_object(class UTestInvokeObject* InArg1)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TestInvokeObject", "Call_void_object");

	Params::TestInvokeObject_Call_void_object Parms{};

	Parms.InArg1 = InArg1;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnrealEnginePython.TestInvokeObject.Call_void_str
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           InArg1                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTestInvokeObject::Call_void_str(const class FString& InArg1)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TestInvokeObject", "Call_void_str");

	Params::TestInvokeObject_Call_void_str Parms{};

	Parms.InArg1 = std::move(InArg1);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnrealEnginePython.TestInvokeObject.Call_void_struct
// (Final, Native, Public, HasOutParams)
// Parameters:
// struct FTestInvokeStruct                InArg1                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UTestInvokeObject::Call_void_struct(const struct FTestInvokeStruct& InArg1)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TestInvokeObject", "Call_void_struct");

	Params::TestInvokeObject_Call_void_struct Parms{};

	Parms.InArg1 = std::move(InArg1);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}

}

