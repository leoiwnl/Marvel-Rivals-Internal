#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: RemoteControlLogic

#include "Basic.hpp"

#include "RemoteControlLogic_classes.hpp"
#include "RemoteControlLogic_parameters.hpp"


namespace SDK
{

// Function RemoteControlLogic.RCBehaviourBindNode.Execute
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class URCBehaviour*                     InBehaviour                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCBehaviourBindNode::Execute(class URCBehaviour* InBehaviour) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCBehaviourBindNode", "Execute");

	Params::RCBehaviourBindNode_Execute Parms{};

	Parms.InBehaviour = InBehaviour;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RemoteControlLogic.RCBehaviourBindNode.IsSupported
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class URCBehaviour*                     InBehaviour                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCBehaviourBindNode::IsSupported(class URCBehaviour* InBehaviour) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCBehaviourBindNode", "IsSupported");

	Params::RCBehaviourBindNode_IsSupported Parms{};

	Parms.InBehaviour = InBehaviour;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RemoteControlLogic.RCBehaviourBindNode.OnPassed
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// class URCBehaviour*                     InBehaviour                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCBehaviourBindNode::OnPassed(class URCBehaviour* InBehaviour) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCBehaviourBindNode", "OnPassed");

	Params::RCBehaviourBindNode_OnPassed Parms{};

	Parms.InBehaviour = InBehaviour;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RemoteControlLogic.RCBehaviourBlueprintNode.Execute
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class URCBehaviour*                     InBehaviour                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCBehaviourBlueprintNode::Execute(class URCBehaviour* InBehaviour) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCBehaviourBlueprintNode", "Execute");

	Params::RCBehaviourBlueprintNode_Execute Parms{};

	Parms.InBehaviour = InBehaviour;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RemoteControlLogic.RCBehaviourBlueprintNode.IsSupported
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class URCBehaviour*                     InBehaviour                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCBehaviourBlueprintNode::IsSupported(class URCBehaviour* InBehaviour) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCBehaviourBlueprintNode", "IsSupported");

	Params::RCBehaviourBlueprintNode_IsSupported Parms{};

	Parms.InBehaviour = InBehaviour;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RemoteControlLogic.RCBehaviourBlueprintNode.OnPassed
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// class URCBehaviour*                     InBehaviour                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCBehaviourBlueprintNode::OnPassed(class URCBehaviour* InBehaviour) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCBehaviourBlueprintNode", "OnPassed");

	Params::RCBehaviourBlueprintNode_OnPassed Parms{};

	Parms.InBehaviour = InBehaviour;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RemoteControlLogic.RCBehaviourBlueprintNode.PreExecute
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// class URCBehaviour*                     InBehaviour                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCBehaviourBlueprintNode::PreExecute(class URCBehaviour* InBehaviour) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCBehaviourBlueprintNode", "PreExecute");

	Params::RCBehaviourBlueprintNode_PreExecute Parms{};

	Parms.InBehaviour = InBehaviour;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RemoteControlLogic.RCBehaviourConditionalNode.Execute
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class URCBehaviour*                     InBehaviour                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCBehaviourConditionalNode::Execute(class URCBehaviour* InBehaviour) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCBehaviourConditionalNode", "Execute");

	Params::RCBehaviourConditionalNode_Execute Parms{};

	Parms.InBehaviour = InBehaviour;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RemoteControlLogic.RCBehaviourConditionalNode.IsSupported
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class URCBehaviour*                     InBehaviour                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCBehaviourConditionalNode::IsSupported(class URCBehaviour* InBehaviour) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCBehaviourConditionalNode", "IsSupported");

	Params::RCBehaviourConditionalNode_IsSupported Parms{};

	Parms.InBehaviour = InBehaviour;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RemoteControlLogic.RCBehaviourConditionalNode.OnPassed
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// class URCBehaviour*                     InBehaviour                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCBehaviourConditionalNode::OnPassed(class URCBehaviour* InBehaviour) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCBehaviourConditionalNode", "OnPassed");

	Params::RCBehaviourConditionalNode_OnPassed Parms{};

	Parms.InBehaviour = InBehaviour;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RemoteControlLogic.RCBehaviourOnValueChangedNode.Execute
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class URCBehaviour*                     InBehaviour                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCBehaviourOnValueChangedNode::Execute(class URCBehaviour* InBehaviour) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCBehaviourOnValueChangedNode", "Execute");

	Params::RCBehaviourOnValueChangedNode_Execute Parms{};

	Parms.InBehaviour = InBehaviour;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RemoteControlLogic.RCBehaviourOnValueChangedNode.IsSupported
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class URCBehaviour*                     InBehaviour                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCBehaviourOnValueChangedNode::IsSupported(class URCBehaviour* InBehaviour) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCBehaviourOnValueChangedNode", "IsSupported");

	Params::RCBehaviourOnValueChangedNode_IsSupported Parms{};

	Parms.InBehaviour = InBehaviour;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RemoteControlLogic.RCBehaviourRangeMapNode.Execute
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class URCBehaviour*                     InBehaviour                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCBehaviourRangeMapNode::Execute(class URCBehaviour* InBehaviour) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCBehaviourRangeMapNode", "Execute");

	Params::RCBehaviourRangeMapNode_Execute Parms{};

	Parms.InBehaviour = InBehaviour;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RemoteControlLogic.RCBehaviourRangeMapNode.IsSupported
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class URCBehaviour*                     InBehaviour                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCBehaviourRangeMapNode::IsSupported(class URCBehaviour* InBehaviour) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCBehaviourRangeMapNode", "IsSupported");

	Params::RCBehaviourRangeMapNode_IsSupported Parms{};

	Parms.InBehaviour = InBehaviour;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RemoteControlLogic.RCBehaviourRangeMapNode.OnPassed
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// class URCBehaviour*                     InBehaviour                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URCBehaviourRangeMapNode::OnPassed(class URCBehaviour* InBehaviour) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCBehaviourRangeMapNode", "OnPassed");

	Params::RCBehaviourRangeMapNode_OnPassed Parms{};

	Parms.InBehaviour = InBehaviour;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RemoteControlLogic.RCBehaviourSetAssetByPathNode.Execute
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class URCBehaviour*                     InBehaviour                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCBehaviourSetAssetByPathNode::Execute(class URCBehaviour* InBehaviour) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCBehaviourSetAssetByPathNode", "Execute");

	Params::RCBehaviourSetAssetByPathNode_Execute Parms{};

	Parms.InBehaviour = InBehaviour;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RemoteControlLogic.RCBehaviourSetAssetByPathNode.IsSupported
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class URCBehaviour*                     InBehaviour                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URCBehaviourSetAssetByPathNode::IsSupported(class URCBehaviour* InBehaviour) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RCBehaviourSetAssetByPathNode", "IsSupported");

	Params::RCBehaviourSetAssetByPathNode_IsSupported Parms{};

	Parms.InBehaviour = InBehaviour;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RemoteControlLogic.RemoteControlLogicTestData.TestIntFunction
// (Final, Native, Public, BlueprintCallable)

void URemoteControlLogicTestData::TestIntFunction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RemoteControlLogicTestData", "TestIntFunction");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}

}

