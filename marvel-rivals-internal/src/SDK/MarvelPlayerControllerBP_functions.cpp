#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MarvelPlayerControllerBP

#include "Basic.hpp"

#include "MarvelPlayerControllerBP_classes.hpp"
#include "MarvelPlayerControllerBP_parameters.hpp"


namespace SDK
{

// Function MarvelPlayerControllerBP.MarvelPlayerControllerBP_C.ShowMessageToChatPanelWithType
// (Event, Public, BlueprintEvent)
// Parameters:
// class FString                           Message                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// int32                                   Type                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMarvelPlayerControllerBP_C::ShowMessageToChatPanelWithType(const class FString& Message, int32 Type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MarvelPlayerControllerBP_C", "ShowMessageToChatPanelWithType");

	Params::MarvelPlayerControllerBP_C_ShowMessageToChatPanelWithType Parms{};

	Parms.Message = std::move(Message);
	Parms.Type = Type;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MarvelPlayerControllerBP.MarvelPlayerControllerBP_C.ShowMessageToChatPanel
// (Event, Public, BlueprintEvent)
// Parameters:
// class FString                           Message                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void AMarvelPlayerControllerBP_C::ShowMessageToChatPanel(const class FString& Message)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MarvelPlayerControllerBP_C", "ShowMessageToChatPanel");

	Params::MarvelPlayerControllerBP_C_ShowMessageToChatPanel Parms{};

	Parms.Message = std::move(Message);

	UObject::ProcessEvent(Func, &Parms);
}


// Function MarvelPlayerControllerBP.MarvelPlayerControllerBP_C.SendCmdToPython
// (Event, Public, BlueprintEvent)
// Parameters:
// class FString                           Command                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void AMarvelPlayerControllerBP_C::SendCmdToPython(const class FString& Command)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MarvelPlayerControllerBP_C", "SendCmdToPython");

	Params::MarvelPlayerControllerBP_C_SendCmdToPython Parms{};

	Parms.Command = std::move(Command);

	UObject::ProcessEvent(Func, &Parms);
}


// Function MarvelPlayerControllerBP.MarvelPlayerControllerBP_C.IsActiveAbility
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Abiliting                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMarvelPlayerControllerBP_C::IsActiveAbility(bool* Abiliting)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MarvelPlayerControllerBP_C", "IsActiveAbility");

	Params::MarvelPlayerControllerBP_C_IsActiveAbility Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Abiliting != nullptr)
		*Abiliting = Parms.Abiliting;
}


// Function MarvelPlayerControllerBP.MarvelPlayerControllerBP_C.InpActEvt_AbilityInstruction_K2Node_InputActionEvent_1
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void AMarvelPlayerControllerBP_C::InpActEvt_AbilityInstruction_K2Node_InputActionEvent_1(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MarvelPlayerControllerBP_C", "InpActEvt_AbilityInstruction_K2Node_InputActionEvent_1");

	Params::MarvelPlayerControllerBP_C_InpActEvt_AbilityInstruction_K2Node_InputActionEvent_1 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function MarvelPlayerControllerBP.MarvelPlayerControllerBP_C.InpActEvt_AbilityInstruction_K2Node_InputActionEvent_0
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void AMarvelPlayerControllerBP_C::InpActEvt_AbilityInstruction_K2Node_InputActionEvent_0(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MarvelPlayerControllerBP_C", "InpActEvt_AbilityInstruction_K2Node_InputActionEvent_0");

	Params::MarvelPlayerControllerBP_C_InpActEvt_AbilityInstruction_K2Node_InputActionEvent_0 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function MarvelPlayerControllerBP.MarvelPlayerControllerBP_C.InpActEvt_Ability2_K2Node_InputActionEvent_2
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void AMarvelPlayerControllerBP_C::InpActEvt_Ability2_K2Node_InputActionEvent_2(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MarvelPlayerControllerBP_C", "InpActEvt_Ability2_K2Node_InputActionEvent_2");

	Params::MarvelPlayerControllerBP_C_InpActEvt_Ability2_K2Node_InputActionEvent_2 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function MarvelPlayerControllerBP.MarvelPlayerControllerBP_C.InpActEvt_Ability1_K2Node_InputActionEvent_3
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void AMarvelPlayerControllerBP_C::InpActEvt_Ability1_K2Node_InputActionEvent_3(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MarvelPlayerControllerBP_C", "InpActEvt_Ability1_K2Node_InputActionEvent_3");

	Params::MarvelPlayerControllerBP_C_InpActEvt_Ability1_K2Node_InputActionEvent_3 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function MarvelPlayerControllerBP.MarvelPlayerControllerBP_C.ExecuteUbergraph_MarvelPlayerControllerBP
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMarvelPlayerControllerBP_C::ExecuteUbergraph_MarvelPlayerControllerBP(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MarvelPlayerControllerBP_C", "ExecuteUbergraph_MarvelPlayerControllerBP");

	Params::MarvelPlayerControllerBP_C_ExecuteUbergraph_MarvelPlayerControllerBP Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MarvelPlayerControllerBP.MarvelPlayerControllerBP_C.EventTellClientMsg
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             Message                                                (BlueprintVisible, BlueprintReadOnly, Parm)

void AMarvelPlayerControllerBP_C::EventTellClientMsg(const class FText& Message)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MarvelPlayerControllerBP_C", "EventTellClientMsg");

	Params::MarvelPlayerControllerBP_C_EventTellClientMsg Parms{};

	Parms.Message = std::move(Message);

	UObject::ProcessEvent(Func, &Parms);
}

}

