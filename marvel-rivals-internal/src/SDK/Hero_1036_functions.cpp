#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Hero_1036

#include "Basic.hpp"

#include "Hero_1036_classes.hpp"
#include "Hero_1036_parameters.hpp"


namespace SDK
{

// Function Hero_1036.Ability_103601.DecelerationLaunchVel
// (Final, Native, Public, HasDefaults)
// Parameters:
// float                                   DeltaTime                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          OldLocation                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          OldVelocity                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAbility_103601::DecelerationLaunchVel(float DeltaTime, const struct FVector& OldLocation, const struct FVector& OldVelocity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ability_103601", "DecelerationLaunchVel");

	Params::Ability_103601_DecelerationLaunchVel Parms{};

	Parms.DeltaTime = DeltaTime;
	Parms.OldLocation = std::move(OldLocation);
	Parms.OldVelocity = std::move(OldVelocity);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1036.Ability_103601.OnTimeToEnterBreak
// (Final, Native, Public)

void UAbility_103601::OnTimeToEnterBreak()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ability_103601", "OnTimeToEnterBreak");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1036.Ability_103614.K2_ReadyToRecovery
// (Event, Public, BlueprintEvent)

void UAbility_103614::K2_ReadyToRecovery()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ability_103614", "K2_ReadyToRecovery");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Hero_1036.Cue_Summoner_Loop_10362101.InitializeSpiderWebDecal
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class USpiderWebDecalComponent*         InSpiderWebDecalComponent                              (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ACue_Summoner_Loop_10362101::InitializeSpiderWebDecal(class USpiderWebDecalComponent* InSpiderWebDecalComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Cue_Summoner_Loop_10362101", "InitializeSpiderWebDecal");

	Params::Cue_Summoner_Loop_10362101_InitializeSpiderWebDecal Parms{};

	Parms.InSpiderWebDecalComponent = InSpiderWebDecalComponent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1036.EffectAbility_10362111.OnDamageTaken
// (Final, Native, Public, HasOutParams)
// Parameters:
// class AActor*                           SourceAvatar                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           TargetAvatar                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FAttributeModifierHandle         ModifierParameterHandle                                (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEffectAbility_10362111::OnDamageTaken(class AActor* SourceAvatar, class AActor* TargetAvatar, const struct FAttributeModifierHandle& ModifierParameterHandle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EffectAbility_10362111", "OnDamageTaken");

	Params::EffectAbility_10362111_OnDamageTaken Parms{};

	Parms.SourceAvatar = SourceAvatar;
	Parms.TargetAvatar = TargetAvatar;
	Parms.ModifierParameterHandle = std::move(ModifierParameterHandle);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1036.Ability_103631.ApplyDragBuff
// (Final, Native, Protected)

void UAbility_103631::ApplyDragBuff()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ability_103631", "ApplyDragBuff");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1036.Ability_103631.ClientRPCJumpToSection
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// class FName                             SectionName                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAbility_103631::ClientRPCJumpToSection(class FName SectionName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ability_103631", "ClientRPCJumpToSection");

	Params::Ability_103631_ClientRPCJumpToSection Parms{};

	Parms.SectionName = SectionName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1036.Ability_103631.ClientRPCTargetDashFinish
// (Net, NetReliable, Native, Event, Public, NetClient)

void UAbility_103631::ClientRPCTargetDashFinish()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ability_103631", "ClientRPCTargetDashFinish");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1036.Ability_103631.GetHitResultReplicated
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FHitResult                       OutHitResult                                           (Parm, OutParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
// bool                                    OutIsCharacter                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    OutIsSummoner                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAbility_103631::GetHitResultReplicated(struct FHitResult* OutHitResult, bool* OutIsCharacter, bool* OutIsSummoner)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ability_103631", "GetHitResultReplicated");

	Params::Ability_103631_GetHitResultReplicated Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutHitResult != nullptr)
		*OutHitResult = std::move(Parms.OutHitResult);

	if (OutIsCharacter != nullptr)
		*OutIsCharacter = Parms.OutIsCharacter;

	if (OutIsSummoner != nullptr)
		*OutIsSummoner = Parms.OutIsSummoner;

	return Parms.ReturnValue;
}


// Function Hero_1036.Ability_103631.OnAbilityHit
// (Final, Native, Public, HasOutParams)
// Parameters:
// struct FHitResult                       HitResult                                              (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

void UAbility_103631::OnAbilityHit(const struct FHitResult& HitResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ability_103631", "OnAbilityHit");

	Params::Ability_103631_OnAbilityHit Parms{};

	Parms.HitResult = std::move(HitResult);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1036.Ability_103631.OnServerTargetDashFinish
// (Final, Native, Public)
// Parameters:
// EDashStopReason                         Reason                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAbility_103631::OnServerTargetDashFinish(EDashStopReason Reason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ability_103631", "OnServerTargetDashFinish");

	Params::Ability_103631_OnServerTargetDashFinish Parms{};

	Parms.Reason = Reason;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1036.Ability_103631.RemoveCameraCue
// (Final, Native, Protected)

void UAbility_103631::RemoveCameraCue()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ability_103631", "RemoveCameraCue");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1036.Ability_103631.RemoveDizzyBuff
// (Final, Native, Protected)

void UAbility_103631::RemoveDizzyBuff()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ability_103631", "RemoveDizzyBuff");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1036.TraceComponent_10365101.OnScopeTraceResults
// (Final, Native, Public, HasOutParams)
// Parameters:
// class UObject*                          TraceSource                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FHitResult>               HitResults                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

void UTraceComponent_10365101::OnScopeTraceResults(class UObject* TraceSource, const TArray<struct FHitResult>& HitResults)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TraceComponent_10365101", "OnScopeTraceResults");

	Params::TraceComponent_10365101_OnScopeTraceResults Parms{};

	Parms.TraceSource = TraceSource;
	Parms.HitResults = std::move(HitResults);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1036.BuffAbility_10365101.OnAddSlowDown
// (Final, Native, Public)
// Parameters:
// class UMarvelBaseAbilitySystemComponent*TargetComp                                             (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Value                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBuffAbility_10365101::OnAddSlowDown(class UMarvelBaseAbilitySystemComponent* TargetComp, const float Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuffAbility_10365101", "OnAddSlowDown");

	Params::BuffAbility_10365101_OnAddSlowDown Parms{};

	Parms.TargetComp = TargetComp;
	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1036.SkeletalMeshComponent_103651.OnMontageEnded
// (Final, Native, Public)
// Parameters:
// class UAnimMontage*                     InMontage                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsInterrupted                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USkeletalMeshComponent_103651::OnMontageEnded(class UAnimMontage* InMontage, bool IsInterrupted)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SkeletalMeshComponent_103651", "OnMontageEnded");

	Params::SkeletalMeshComponent_103651_OnMontageEnded Parms{};

	Parms.InMontage = InMontage;
	Parms.IsInterrupted = IsInterrupted;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1036.Ability_103661.GetLastSeeTime
// (Final, Native, Public)
// Parameters:
// class AMarvelBaseCharacter*             Enemy                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UAbility_103661::GetLastSeeTime(class AMarvelBaseCharacter* Enemy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ability_103661", "GetLastSeeTime");

	Params::Ability_103661_GetLastSeeTime Parms{};

	Parms.Enemy = Enemy;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hero_1036.Ability_103661.OnTick
// (Final, Native, Public)
// Parameters:
// float                                   DeltaTime                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAbility_103661::OnTick(float DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ability_103661", "OnTick");

	Params::Ability_103661_OnTick Parms{};

	Parms.DeltaTime = DeltaTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1036.Ability_103661.OnTimeToTrace
// (Final, Native, Public)

void UAbility_103661::OnTimeToTrace()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ability_103661", "OnTimeToTrace");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1036.Ability_103662.OnAbilityEnd
// (Final, Native, Public)

void UAbility_103662::OnAbilityEnd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ability_103662", "OnAbilityEnd");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1036.Ability_103662.OnTimeToCancelAbility
// (Final, Native, Public)

void UAbility_103662::OnTimeToCancelAbility()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ability_103662", "OnTimeToCancelAbility");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1036.Cue_Ability_Instant_10366201.OnCharacterEndPlay
// (Final, Native, Public)

void UCue_Ability_Instant_10366201::OnCharacterEndPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Cue_Ability_Instant_10366201", "OnCharacterEndPlay");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1036.Cue_Ability_Loop_10366201.RemoveCue
// (Final, Native, Public)

void ACue_Ability_Loop_10366201::RemoveCue()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Cue_Ability_Loop_10366201", "RemoveCue");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1036.Ability_103681.ApplyDash
// (Final, Native, Protected)

void UAbility_103681::ApplyDash()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ability_103681", "ApplyDash");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1036.Ability_103681.OnDashFinish
// (Final, Native, Protected)
// Parameters:
// EDashStopReason                         Reason                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAbility_103681::OnDashFinish(EDashStopReason Reason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ability_103681", "OnDashFinish");

	Params::Ability_103681_OnDashFinish Parms{};

	Parms.Reason = Reason;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1036.Ability_103681.OnTick
// (Final, Native, Protected)
// Parameters:
// float                                   DeltaTime                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAbility_103681::OnTick(float DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ability_103681", "OnTick");

	Params::Ability_103681_OnTick Parms{};

	Parms.DeltaTime = DeltaTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1036.Ability_103681.ServerEndSpecialFalling
// (Net, NetReliable, Native, Event, Protected, NetServer)
// Parameters:
// bool                                    ByCancelled                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAbility_103681::ServerEndSpecialFalling(bool ByCancelled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ability_103681", "ServerEndSpecialFalling");

	Params::Ability_103681_ServerEndSpecialFalling Parms{};

	Parms.ByCancelled = ByCancelled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1036.EpicMomentAction_1036.OnActorAbilityCancel
// (Native, Public)
// Parameters:
// class AActor*                           Source                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   AbilityID                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           SessionID                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UMarvelGameplayAbility*           SourceAbility                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEpicMomentAction_1036::OnActorAbilityCancel(class AActor* Source, int32 AbilityID, const class FString& SessionID, class UMarvelGameplayAbility* SourceAbility)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EpicMomentAction_1036", "OnActorAbilityCancel");

	Params::EpicMomentAction_1036_OnActorAbilityCancel Parms{};

	Parms.Source = Source;
	Parms.AbilityID = AbilityID;
	Parms.SessionID = std::move(SessionID);
	Parms.SourceAbility = SourceAbility;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1036.EpicMomentAction_1036.OnGameplayEffectAppliedToTarget
// (Final, Native, Public, HasOutParams)
// Parameters:
// class UAbilitySystemComponent*          ASC                                                    (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayEffectSpec              GameplayEffectSpec                                     (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FActiveGameplayEffectHandle      ActiveGameplayEffectHandle                             (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEpicMomentAction_1036::OnGameplayEffectAppliedToTarget(class UAbilitySystemComponent* ASC, const struct FGameplayEffectSpec& GameplayEffectSpec, const struct FActiveGameplayEffectHandle& ActiveGameplayEffectHandle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EpicMomentAction_1036", "OnGameplayEffectAppliedToTarget");

	Params::EpicMomentAction_1036_OnGameplayEffectAppliedToTarget Parms{};

	Parms.ASC = ASC;
	Parms.GameplayEffectSpec = std::move(GameplayEffectSpec);
	Parms.ActiveGameplayEffectHandle = std::move(ActiveGameplayEffectHandle);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1036.SpiderManAnimInstance.AnimNotify_EnterDoubleJump
// (Native, Event, Protected, BlueprintEvent)

void USpiderManAnimInstance::AnimNotify_EnterDoubleJump()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SpiderManAnimInstance", "AnimNotify_EnterDoubleJump");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1036.SpiderManAnimInstance.OnSpecialFallingToRunBecomeRelevant
// (Final, Native, Protected, HasOutParams, BlueprintCallable)
// Parameters:
// struct FAnimUpdateContext               Context                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FAnimNodeReference               Node                                                   (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void USpiderManAnimInstance::OnSpecialFallingToRunBecomeRelevant(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SpiderManAnimInstance", "OnSpecialFallingToRunBecomeRelevant");

	Params::SpiderManAnimInstance_OnSpecialFallingToRunBecomeRelevant Parms{};

	Parms.Context = std::move(Context);
	Parms.Node = std::move(Node);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1036.SpiderManAnimInstance.OnSpecialFallingToRunUpdate
// (Final, Native, Protected, HasOutParams, BlueprintCallable)
// Parameters:
// struct FAnimUpdateContext               Context                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FAnimNodeReference               Node                                                   (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void USpiderManAnimInstance::OnSpecialFallingToRunUpdate(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SpiderManAnimInstance", "OnSpecialFallingToRunUpdate");

	Params::SpiderManAnimInstance_OnSpecialFallingToRunUpdate Parms{};

	Parms.Context = std::move(Context);
	Parms.Node = std::move(Node);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1036.SpiderManCharacter.GetAbilityState103614
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EAbilityState103614                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EAbilityState103614 ASpiderManCharacter::GetAbilityState103614()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SpiderManCharacter", "GetAbilityState103614");

	Params::SpiderManCharacter_GetAbilityState103614 Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hero_1036.SpiderManCharacter.GetDirection103614
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float ASpiderManCharacter::GetDirection103614()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SpiderManCharacter", "GetDirection103614");

	Params::SpiderManCharacter_GetDirection103614 Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hero_1036.SpiderManCharacter.GetIsSpecialFalling
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ASpiderManCharacter::GetIsSpecialFalling()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SpiderManCharacter", "GetIsSpecialFalling");

	Params::SpiderManCharacter_GetIsSpecialFalling Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hero_1036.SpiderManCharacter.IsInAir
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ASpiderManCharacter::IsInAir()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SpiderManCharacter", "IsInAir");

	Params::SpiderManCharacter_IsInAir Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hero_1036.SpiderManCharacter.OnRep_AbilityState103614
// (Final, Native, Public)

void ASpiderManCharacter::OnRep_AbilityState103614()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SpiderManCharacter", "OnRep_AbilityState103614");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1036.SpiderManCharacter.ServerChangeGravityScale
// (Net, NetReliable, Native, Event, Public, NetServer)
// Parameters:
// float                                   NewGravityScale                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           SyncSignature                                          (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASpiderManCharacter::ServerChangeGravityScale(float NewGravityScale, const class FString& SyncSignature)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SpiderManCharacter", "ServerChangeGravityScale");

	Params::SpiderManCharacter_ServerChangeGravityScale Parms{};

	Parms.NewGravityScale = NewGravityScale;
	Parms.SyncSignature = std::move(SyncSignature);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1036.SpiderManCharacter.SetAbilityState103614
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EAbilityState103614                     InAbilityState103614                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASpiderManCharacter::SetAbilityState103614(EAbilityState103614 InAbilityState103614)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SpiderManCharacter", "SetAbilityState103614");

	Params::SpiderManCharacter_SetAbilityState103614 Parms{};

	Parms.InAbilityState103614 = InAbilityState103614;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1036.SpiderManCharacter.SetCableHeadComponent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class USceneComponent*                  InCableHeadComponent                                   (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASpiderManCharacter::SetCableHeadComponent(class USceneComponent* InCableHeadComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SpiderManCharacter", "SetCableHeadComponent");

	Params::SpiderManCharacter_SetCableHeadComponent Parms{};

	Parms.InCableHeadComponent = InCableHeadComponent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1036.SpiderManCharacter.SetDirection103614
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   InDirection                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASpiderManCharacter::SetDirection103614(float InDirection)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SpiderManCharacter", "SetDirection103614");

	Params::SpiderManCharacter_SetDirection103614 Parms{};

	Parms.InDirection = InDirection;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1036.SpiderManCharacter.SetIsSpecialFalling
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    IsSpecialFalling                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ByCanceled                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASpiderManCharacter::SetIsSpecialFalling(bool IsSpecialFalling, bool ByCanceled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SpiderManCharacter", "SetIsSpecialFalling");

	Params::SpiderManCharacter_SetIsSpecialFalling Parms{};

	Parms.IsSpecialFalling = IsSpecialFalling;
	Parms.ByCanceled = ByCanceled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1036.TabData_1036.OnAbilityUse
// (Final, Native, Public, HasOutParams)
// Parameters:
// struct FActionLogAbilityRecord          Record                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UTabData_1036::OnAbilityUse(const struct FActionLogAbilityRecord& Record)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TabData_1036", "OnAbilityUse");

	Params::TabData_1036_OnAbilityUse Parms{};

	Parms.Record = std::move(Record);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}

}

