#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AISelectTarget_MoveDirect

#include "Basic.hpp"

#include "AISelectTarget_MoveDirect_classes.hpp"
#include "AISelectTarget_MoveDirect_parameters.hpp"


namespace SDK
{

// Function AISelectTarget_MoveDirect.AISelectTarget_MoveDirect_C.SelectTargetOrLocation
// (Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AMarvelAIController*              AIController                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FMarvelAITarget                  OutAITarget                                            (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
// struct FAIAbilityUsage                  AbilityUsage                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UAISelectTarget_MoveDirect_C::SelectTargetOrLocation(class AMarvelAIController* AIController, struct FMarvelAITarget& OutAITarget, const struct FAIAbilityUsage& AbilityUsage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AISelectTarget_MoveDirect_C", "SelectTargetOrLocation");

	Params::AISelectTarget_MoveDirect_C_SelectTargetOrLocation Parms{};

	Parms.AIController = AIController;
	Parms.OutAITarget = std::move(OutAITarget);
	Parms.AbilityUsage = std::move(AbilityUsage);

	UObject::ProcessEvent(Func, &Parms);

	OutAITarget = std::move(Parms.OutAITarget);

	return Parms.ReturnValue;
}

}

