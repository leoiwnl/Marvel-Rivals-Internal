#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CustomMovieSceneTracks

#include "Basic.hpp"

#include "CustomMovieSceneTracks_classes.hpp"
#include "CustomMovieSceneTracks_parameters.hpp"


namespace SDK
{

// Function CustomMovieSceneTracks.MovieSceneCableAttachmentSection.SetConstraintBindingID
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FMovieSceneObjectBindingID       InConstraintBindingID                                  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMovieSceneCableAttachmentSection::SetConstraintBindingID(const struct FMovieSceneObjectBindingID& InConstraintBindingID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MovieSceneCableAttachmentSection", "SetConstraintBindingID");

	Params::MovieSceneCableAttachmentSection_SetConstraintBindingID Parms{};

	Parms.InConstraintBindingID = std::move(InConstraintBindingID);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function CustomMovieSceneTracks.MovieSceneCableAttachmentSection.GetConstraintBindingID
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FMovieSceneObjectBindingID ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FMovieSceneObjectBindingID UMovieSceneCableAttachmentSection::GetConstraintBindingID() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MovieSceneCableAttachmentSection", "GetConstraintBindingID");

	Params::MovieSceneCableAttachmentSection_GetConstraintBindingID Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}

}

