#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PyAbility_133

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Marvel_structs.hpp"
#include "Marvel_classes.hpp"
#include "GameplayTags_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// PythonClass PyAbility_133.PyProjectile_13301
// 0x0000 (0x3050 - 0x3050)
class APyProjectile_13301 : public AMarvelAbilityTargetActor_Projectile
{
public:
	void K2_OnBeginAgentTask();
	void K2_OnEndAgentTask();
	void K2_OnProcessHit(const struct FHitResult& Hit);
	void K2_OnFlyOverMaxDistance(const struct FHitResult& Hit);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyProjectile_13301">();
	}
	static class APyProjectile_13301* GetDefaultObj()
	{
		return GetDefaultObjImpl<APyProjectile_13301>();
	}
};

// PythonClass PyAbility_133.PyConfig_133
// 0x4498 (0x4530 - 0x0098)
#pragma pack(push, 0x1)
class alignas(0x10) UPyConfig_133 : public UMarvelAbilityConfig
{
public:
	float                                         PullForceScale;                                    // 0x0098(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MinClampVelocityToAddRopeForce;                    // 0x009C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaxClampVelocityToAddRopeForce;                    // 0x00A0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseFixedRopeLengthToCalPull;                      // 0x00A4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_A5[0x3];                                       // 0x00A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         FixedPullRopeLength;                               // 0x00A8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         RopeLengthToStartReduceForce;                      // 0x00AC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaxReduceForceScale;                               // 0x00B0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ReduceForceValueWhenNoStrech;                      // 0x00B4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MinSwingAngleToAddVelocityForce;                   // 0x00B8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaxSwingAngleToAddVelocityForce;                   // 0x00BC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ValueOfVelocityForce;                              // 0x00C0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ValueOfCameraForce;                                // 0x00C4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                            CameraForceScaleCurve;                             // 0x00C8(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         HeightOffset_SpecialMove;                          // 0x00D0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DelayTime_BeforeSpecialMove;                       // 0x00D4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DelayTime_AfterSpecialMove;                        // 0x00D8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FlightToRunTime;                                   // 0x00DC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDashAbilityInfo                       DashInfo_SpecialMove;                              // 0x00E0(0x0BA8)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FDashAbilityInfo                       DashInfo_SpecialMoveSecond;                        // 0x0C88(0x0BA8)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	float                                         MaxHeightAboveGroundToSomersault;                  // 0x1830(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ForbidRollWhenOnEdgeOffCliff;                      // 0x1834(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1835[0x3];                                     // 0x1835(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         DistanceToEdgeOffCliff;                            // 0x1838(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_183C[0x4];                                     // 0x183C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                LaunchVelocityWhenOnEdgeOffCliff;                  // 0x1840(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1858[0x8];                                     // 0x1858(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMarvelAbilityTraceContext             TraceContextForEdgeOfCliff;                        // 0x1860(0x0F90)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class UCurveFloat*                            SwingPointMakeUpCurve;                             // 0x27F0(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SwingPointMakeUpFactor;                            // 0x27F8(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_27FC[0x4];                                     // 0x27FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDashAbilityInfo                       DashInfo;                                          // 0x2800(0x0BA8)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	float                                         DelayTimeToDash;                                   // 0x33A8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          AdjustSwingInitDirectionToCamera;                  // 0x33AC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_33AD[0x3];                                     // 0x33AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         MaxAngleCanAdjust;                                 // 0x33B0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MinWallTiltAngleForSingleHandSwing;                // 0x33B4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ProbabilityOfSpinSwing;                            // 0x33B8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MinSwingAngleForSpinSwing;                         // 0x33BC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ExpectSwingAngleForSpinSwing;                      // 0x33C0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ThresholdAngleToStopSwing;                         // 0x33C4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                LaunchVelocityOverMaxAngle;                        // 0x33C8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          LaunchVelocityIsOverride;                          // 0x33E0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_33E1[0x3];                                     // 0x33E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         DelayTimeToLaunch;                                 // 0x33E4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         GravityScaleWhenLaunch;                            // 0x33E8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         GravityScaleApplyDuration;                         // 0x33EC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ThresholdSpeedToStopSwing;                         // 0x33F0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MinSpeedOfSwing;                                   // 0x33F4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                  AbilitiesToblockWhenLowSwing;                      // 0x33F8(0x0068)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                  AbilitiesToCancelWhenSwing;                        // 0x3460(0x0068)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	bool                                          EnableDebugDrawCapsule;                            // 0x34C8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_34C9[0x7];                                     // 0x34C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCameraInterp*                          CameraInterp_Swinging_Down;                        // 0x34D0(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCameraInterp*                          CameraInterp_Swinging_Down_RightHand;              // 0x34D8(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DelayTimeToPlaySwingingDownCameraInterp;           // 0x34E0(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_34E4[0x4];                                     // 0x34E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCameraInterp*                          CameraInterp_Swinging_Up;                          // 0x34E8(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCameraInterp*                          CameraInterp_Swinging_Up_RightHand;                // 0x34F0(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MinSwingAngleToPlaySwingUpCameraEffect;            // 0x34F8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_34FC[0x4];                                     // 0x34FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class ULegacyCameraShake>         CameraShakeClass_Swinging;                         // 0x3500(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCameraInterp*                          CameraInterp_LowSwinging;                          // 0x3508(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCameraInterp*                          CameraInterp_RopeBreaking;                         // 0x3510(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CameraInterpDuration_RopeBreaking;                 // 0x3518(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_351C[0x4];                                     // 0x351C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCameraInterp*                          CameraInterp_RopeBreaking_FOV;                     // 0x3520(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CameraInterpDuration_RopeBreaking_FOV;             // 0x3528(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_352C[0x4];                                     // 0x352C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSimpleSwingConfig                     SimpleSwingParams;                                 // 0x3530(0x0FD0)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FStateChangedTaskParam                 ActiveUserSetting;                                 // 0x4500(0x0028)(Edit, NoDestructor, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyConfig_133">();
	}
	static class UPyConfig_133* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyConfig_133>();
	}
};
#pragma pack(pop)

// PythonClass PyAbility_133.PyAbility_133
// 0x0020 (0x2828 - 0x2808)
class UPyAbility_133 : public UAbility_133
{
public:
	TMulticastInlineDelegate<void(struct FHitResult& InHitResult)> Delegate_ProjetileHitDispatcher;                   // 0x2808(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void()>              Delegate_ProjetileFlyOverMaxDistanceDispatcher;    // 0x2818(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)

public:
	void BeginPlay();
	void EndPlay();
	bool CanActivate();
	bool TryMakeTriggerContext(struct FGameplayEventData& EventData);
	void K2_ActivateAbility();
	void K2_ActivateAbilityFromEvent(const struct FGameplayEventData& EventData);
	void K2_OnEndAbility(bool bWasCancelled);
	void OnTaskTick(float DeltaTime);
	void OnJumpPress(float TimeWaited);
	void NativeOnMontageCompleted(const class FString& Tag);
	void OnSwingingEnd(ESwingEndReason InEndReason);
	void StartIntoSwingingLoopState();
	void K2_OnServerReceiveClientMissileData(const struct FHitResult& InHitResult, bool bNeedSpecialMove, bool bIsHitGround);
	void K2_OnServerReceiveClientFlyOverMaxDistance();
	void OnServerExpired();
	void K2_OnNetSyncOnEdgeOffCliff(const struct FGameplayAbilityTargetDataHandle& Data);
	void ApplySpecialMove();
	void OnSpecialMoveFinish(EDashStopReason Reason);
	void OnTimeToEndAbility();
	void OnTimeToCancelAbility();
	void OnSpecialMoveFinishSecond(EDashStopReason Reason);
	void NetMulticast_SetSwingParams(bool IsLeftHandShoot);
	void K2_ReadySimpleSwing(const struct FSwingInfo& InSwingInfo);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyAbility_133">();
	}
	static class UPyAbility_133* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyAbility_133>();
	}
};

}

