#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PyLevelProcessController

#include "Basic.hpp"

#include "PyLevelProcessController_classes.hpp"
#include "PyLevelProcessController_parameters.hpp"


namespace SDK
{

// PythonFunction PyLevelProcessController.PyLevelProcessController.GetProcessController
// (Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AActor*                           WCO                                                    (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class AMarvelLevelProcessController*    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash)

class AMarvelLevelProcessController* APyLevelProcessController::GetProcessController(class AActor* WCO)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PyLevelProcessController", "GetProcessController");

	Params::PyLevelProcessController_GetProcessController Parms{};

	Parms.WCO = WCO;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// PythonFunction PyLevelProcessController.PyLevelProcessController.ReceiveInit
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent)

void APyLevelProcessController::ReceiveInit()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyLevelProcessController", "ReceiveInit");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyLevelProcessController.PyLevelProcessController.ReceiveBeginPlay
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent)

void APyLevelProcessController::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyLevelProcessController", "ReceiveBeginPlay");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyLevelProcessController.PyLevelProcessController.ReceiveEndPlay
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// EEndPlayReason                          EndPlayReason                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APyLevelProcessController::ReceiveEndPlay(EEndPlayReason EndPlayReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyLevelProcessController", "ReceiveEndPlay");

	Params::PyLevelProcessController_ReceiveEndPlay Parms{};

	Parms.EndPlayReason = EndPlayReason;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyLevelProcessController.PyLevelProcessController.OnMapLoaded
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void APyLevelProcessController::OnMapLoaded()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyLevelProcessController", "OnMapLoaded");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyLevelProcessController.PyLevelProcessController.OnBeginPlay
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void APyLevelProcessController::OnBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyLevelProcessController", "OnBeginPlay");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyLevelProcessController.PyLevelProcessController.OnMatchStateChanged
// (Native, Public, BlueprintCallable)
// Parameters:
// EMatchState                             MatchState                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APyLevelProcessController::OnMatchStateChanged(EMatchState MatchState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyLevelProcessController", "OnMatchStateChanged");

	Params::PyLevelProcessController_OnMatchStateChanged Parms{};

	Parms.MatchState = MatchState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyLevelProcessController.PyLevelProcessController.GetCurrentLevelPartName
// (Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)

class FString APyLevelProcessController::GetCurrentLevelPartName()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyLevelProcessController", "GetCurrentLevelPartName");

	Params::PyLevelProcessController_GetCurrentLevelPartName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// PythonFunction PyLevelProcessController.PyLevelProcessController.OnModeTimeOut
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void APyLevelProcessController::OnModeTimeOut()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyLevelProcessController", "OnModeTimeOut");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyLevelProcessController.PyLevelProcessController.EndCurrentLevel
// (Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<EBattleSide>                     win_side_list                                          (ConstParm, Parm, OutParm, ReferenceParm)

void APyLevelProcessController::EndCurrentLevel(const TArray<EBattleSide>& win_side_list)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyLevelProcessController", "EndCurrentLevel");

	Params::PyLevelProcessController_EndCurrentLevel Parms{};

	Parms.win_side_list = std::move(win_side_list);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyLevelProcessController.PyLevelProcessController.SkyCrackWaveTest
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void APyLevelProcessController::SkyCrackWaveTest()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyLevelProcessController", "SkyCrackWaveTest");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyLevelProcessController.PyLevelProcessController.LokiPhantomAppear
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void APyLevelProcessController::LokiPhantomAppear()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyLevelProcessController", "LokiPhantomAppear");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyLevelProcessController.PyLevelProcessController.LokiPhantomDisappear
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void APyLevelProcessController::LokiPhantomDisappear()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyLevelProcessController", "LokiPhantomDisappear");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyLevelProcessController.PyLevelProcessController.SetGroupActorsMoveState
// (Native, Public, BlueprintCallable)
// Parameters:
// bool                                    IsMoving                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APyLevelProcessController::SetGroupActorsMoveState(bool IsMoving)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyLevelProcessController", "SetGroupActorsMoveState");

	Params::PyLevelProcessController_SetGroupActorsMoveState Parms{};

	Parms.IsMoving = IsMoving;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyLevelProcessController.PyLevelProcessController.OnRep_IsGroupActorsMoving
// (Native, Public, BlueprintCallable)

void APyLevelProcessController::OnRep_IsGroupActorsMoving()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyLevelProcessController", "OnRep_IsGroupActorsMoving");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyLevelProcessController.PyLevelProcessController.OnRep_CurrentPartName
// (Native, Public, BlueprintCallable)

void APyLevelProcessController::OnRep_CurrentPartName()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyLevelProcessController", "OnRep_CurrentPartName");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}

}

