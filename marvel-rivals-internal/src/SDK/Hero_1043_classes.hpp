#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Hero_1043

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Marvel_structs.hpp"
#include "Marvel_classes.hpp"
#include "Hero_1043_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// Class Hero_1043.Config_104321
// 0x0C10 (0x0CD0 - 0x00C0)
class UConfig_104321 final : public UMarvelAbilityConfig_DoubleJump
{
public:
	struct FGameplayTagContainer                  FlySkillTagContainer;                              // 0x00C0(0x0068)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FDashAbilityInfo                       UltimateDashInfo;                                  // 0x0128(0x0BA8)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"Config_104321">();
	}
	static class UConfig_104321* GetDefaultObj()
	{
		return GetDefaultObjImpl<UConfig_104321>();
	}
};

// Class Hero_1043.Cue_Ability_Loop_10434101
// 0x00C0 (0x0F10 - 0x0E50)
class ACue_Ability_Loop_10434101 final : public AMarvelCueNotify_Ability
{
public:
	TArray<struct FMyMaterialParameter>           NormalChangeMaterialArray;                         // 0x0E50(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FMyMaterialParameter>           ChangeMaterialArray;                               // 0x0E60(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	float                                         BeginHideMaterialTime;                             // 0x0E70(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         BeginShowMaterialTime;                             // 0x0E74(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         EndHideMaterialTime;                               // 0x0E78(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         EndShowMaterialTime;                               // 0x0E7C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FName>                           HideMaterialSlotNameArray;                         // 0x0E80(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class FName>                           ShowMaterialSlotNameArray;                         // 0x0E90(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	class FName                                   PlaybackSlot;                                      // 0x0EA0(0x000C)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   PlaybackParaName;                                  // 0x0EAC(0x000C)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void()>              OnCueDateActive;                                   // 0x0EB8(0x0010)(ZeroConstructor, InstancedReference, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void()>              OnCueDateRemove;                                   // 0x0EC8(0x0010)(ZeroConstructor, InstancedReference, NativeAccessSpecifierPublic)
	uint8                                         Pad_ED8[0x28];                                     // 0x0ED8(0x0028)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 OwnerMesh;                                         // 0x0F00(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AMarvelBaseCharacter*                   OwnerChar;                                         // 0x0F08(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void OnTagChanged(const struct FGameplayTag& TagUpdated, bool TagExists);
	void SetMaterialChangeTimer(float ChangeTime, TArray<class FName>* MaterialSlotNameArray, bool NewState);
	void SetMeshMaterials(TArray<class FName>* MaterialSlotNameArray, bool NewState);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"Cue_Ability_Loop_10434101">();
	}
	static class ACue_Ability_Loop_10434101* GetDefaultObj()
	{
		return GetDefaultObjImpl<ACue_Ability_Loop_10434101>();
	}
};

// Class Hero_1043.Cue_AbilityLoop_10432101
// 0x0258 (0x10A8 - 0x0E50)
class ACue_AbilityLoop_10432101 final : public AMarvelCueNotify_Ability
{
public:
	bool                                          bIsFollow;                                         // 0x0E50(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsPlayAnim;                                       // 0x0E51(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_E52[0x6];                                      // 0x0E52(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UBlendSpace*                            ShadowBlendSpace2D;                                // 0x0E58(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBlendSpace1D*                          ShadowBlendSpace1D;                                // 0x0E60(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ShadowLODLevel;                                    // 0x0E68(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_E6C[0x4];                                      // 0x0E6C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveFloat*                            ShadowDisCurve;                                    // 0x0E70(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         LaunchOffsetDistance;                              // 0x0E78(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_E7C[0x4];                                      // 0x0E7C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<float>                                 ShadowGenerateTimeListLR;                          // 0x0E80(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<float>                                 ShadowAnimStartTimeOffsetListLR;                   // 0x0E90(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<float>                                 ShadowOpacitiesLR;                                 // 0x0EA0(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	class USkeletalMesh*                          LeftWeaponShadowMesh;                              // 0x0EB0(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   LeftSocketName;                                    // 0x0EB8(0x000C)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_EC4[0x4];                                      // 0x0EC4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UMaterialInterface*>             LeftWeaponMaterial;                                // 0x0EC8(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	class USkeletalMesh*                          RightWeaponShadowMesh;                             // 0x0ED8(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   RightSocketName;                                   // 0x0EE0(0x000C)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_EEC[0x4];                                      // 0x0EEC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UMaterialInterface*>             RightWeaponMaterial;                               // 0x0EF0(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<float>                                 ShadowOpacities;                                   // 0x0F00(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                          bIsOpacityChange;                                  // 0x0F10(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_F11[0x7];                                      // 0x0F11(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFXSystemAsset*                         VelocityLineFX;                                    // 0x0F18(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   AngleName;                                         // 0x0F20(0x000C)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_F2C[0x4];                                      // 0x0F2C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<float>                                 MaterialAngle;                                     // 0x0F30(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<float>                                 ShadowGenerateTimeList;                            // 0x0F40(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<float>                                 ShadowAnimStartTimeOffsetList;                     // 0x0F50(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	class USkeletalMesh*                          ShadowMesh;                                        // 0x0F60(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ShadowNum;                                         // 0x0F68(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          IsRenderCustomDepthPass;                           // 0x0F6C(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_F6D[0x3];                                      // 0x0F6D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           ShadowMontage;                                     // 0x0F70(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<int32, class UMaterialInterface*>        MaterialDict;                                      // 0x0F78(0x0050)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	TMap<int32, class UMaterialInterface*>        UltimateMaterialDict;                              // 0x0FC8(0x0050)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	TArray<struct FShadowMesh>                    ShadowMeshComponents;                              // 0x1018(0x0010)(ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPublic)
	uint8                                         Pad_1028[0x80];                                    // 0x1028(0x0080)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void CreateCustomMaterial(class USkeletalMeshComponent* MeshComponent, TMap<int32, class UMaterialInterface*>* CurrentMaterialDict);
	void OnTagChanged(const struct FGameplayTag& TagUpdated, bool TagExists);
	void SetMeshPara(class USkeletalMeshComponent* MeshComponent, class USkeletalMesh* SkeletalMesh);
	void ShowShadowMesh(const struct FShadowMesh& ShadowMeshComponent, int32 Index_0);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"Cue_AbilityLoop_10432101">();
	}
	static class ACue_AbilityLoop_10432101* GetDefaultObj()
	{
		return GetDefaultObjImpl<ACue_AbilityLoop_10432101>();
	}
};

// Class Hero_1043.Ability_104321
// 0x0018 (0x2690 - 0x2678)
class UAbility_104321 : public UMarvelAbility_DoubleJump
{
public:
	class UMarvelAbilityTask_Dash*                DashAbilityTask;                                   // 0x2678(0x0008)(ZeroConstructor, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UConfig_104321*                         MyConfig;                                          // 0x2680(0x0008)(ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMarvelAbilityTask_PlayMontageAndWaitForEvent* PlayMontageTask;                                   // 0x2688(0x0008)(ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	void OnUltimateDashFinish(EDashStopReason Reason);
	void ServerSetCharacterInput(const struct FVector& CharInput);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"Ability_104321">();
	}
	static class UAbility_104321* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAbility_104321>();
	}
};

// Class Hero_1043.Ability_104331
// 0x00B0 (0x5CB0 - 0x5C00)
class UAbility_104331 : public UMarvelAeroBaseAbility
{
public:
	uint8                                         Pad_5C00[0xB0];                                    // 0x5C00(0x00B0)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnMoveBlock(const struct FHitResult& Impact);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"Ability_104331">();
	}
	static class UAbility_104331* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAbility_104331>();
	}
};

// Class Hero_1043.Cue_Ability_Loop_10433101
// 0x0010 (0x0E60 - 0x0E50)
class ACue_Ability_Loop_10433101 final : public AMarvelCueNotify_Ability
{
public:
	class UNiagaraComponent*                      VelocityLineFX;                                    // 0x0E50(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MinVelocity;                                       // 0x0E58(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_E5C[0x4];                                      // 0x0E5C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"Cue_Ability_Loop_10433101">();
	}
	static class ACue_Ability_Loop_10433101* GetDefaultObj()
	{
		return GetDefaultObjImpl<ACue_Ability_Loop_10433101>();
	}
};

// Class Hero_1043.Config_104342
// 0x10E8 (0x11A0 - 0x00B8)
class UConfig_104342 final : public UConfig_105
{
public:
	TArray<int32>                                 LeftFireModeIndexes;                               // 0x00B8(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<int32>                                 RightFireModeIndexes;                              // 0x00C8(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	uint8                                         Pad_D8[0x8];                                       // 0x00D8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSelectTaskParam                       AimSelectParam;                                    // 0x00E0(0x10A0)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	class FName                                   HitChest;                                          // 0x1180(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         AutoAimChangeTime;                                 // 0x118C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FAimSpecialConfig>              AimSpecialConfigArray;                             // 0x1190(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"Config_104342">();
	}
	static class UConfig_104342* GetDefaultObj()
	{
		return GetDefaultObjImpl<UConfig_104342>();
	}
};

// Class Hero_1043.Ability_104342
// 0x0060 (0x2628 - 0x25C8)
class UAbility_104342 : public UAbility_105
{
public:
	uint8                                         Pad_25C8[0x18];                                    // 0x25C8(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	class UConfig_104342*                         Config;                                            // 0x25E0(0x0008)(BlueprintVisible, ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AActor*                                 ActiveTarget;                                      // 0x25E8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         AimSelectTime;                                     // 0x25F0(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_25F4[0x4];                                     // 0x25F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMarvelAbilityTask_SelectTarget*        SelectTask;                                        // 0x25F8(0x0008)(ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_2600[0x28];                                    // 0x2600(0x0028)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	struct FSelectTaskResult GetTarget();
	void OnKillOtherCall(class AActor* InSourceAvatar, class AActor* InTargetAvatar, const struct FAttributeModifierHandle& ModifierParameterHandle);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"Ability_104342">();
	}
	static class UAbility_104342* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAbility_104342>();
	}
};

// Class Hero_1043.Ability_Glide
// 0x0080 (0x2608 - 0x2588)
class UAbility_Glide final : public UAbility_108
{
public:
	class UMarvelAbilityTask_ApplyRootMotionGlide* GlideTask;                                         // 0x2588(0x0008)(ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGlideCameraModifier*                   GlideCameraModifier;                               // 0x2590(0x0008)(ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_2598[0x70];                                    // 0x2598(0x0070)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void ApplyCapsuleChange();
	void CreateAndApplyGlideTask();
	void CreateAndEnableCameraModifier();
	void EndGlideTask();
	void OnMoveBlock(const struct FHitResult& Impact);
	void OnMovementInputs(uint8 InMovementInputs, float DeltaTime);
	void OnMoveRight(float Val);
	void RecoverCapsuleChange();
	void RemoveCameraModifier();

	struct FVector GetAimLocation() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"Ability_Glide">();
	}
	static class UAbility_Glide* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAbility_Glide>();
	}
};

// Class Hero_1043.Config_Glide
// 0x0040 (0x00D8 - 0x0098)
class UConfig_Glide final : public UMarvelAbilityConfig
{
public:
	float                                         MaxGlideSpeed;                                     // 0x0098(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ForwardAccelerate;                                 // 0x009C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         HorizontalTurnSpeed;                               // 0x00A0(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         VerticalTurnSpeed;                                 // 0x00A4(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaxHorizontalMoveSpeed;                            // 0x00A8(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         HorizontalAccelerate;                              // 0x00AC(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         HorizontalBreakAccelerate;                         // 0x00B0(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaxVerticalMoveSpeed;                              // 0x00B4(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         VerticalAccelerate;                                // 0x00B8(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bOpenSpace;                                        // 0x00BC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bOpenCtrl;                                         // 0x00BD(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_BE[0x2];                                       // 0x00BE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CapsuleRadius;                                     // 0x00C0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CapsuleHalfHeight;                                 // 0x00C4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         PitchInterpSpeed;                                  // 0x00C8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         YawInterpSpeed;                                    // 0x00CC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SlideAlongWallAngelThreshold;                      // 0x00D0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_D4[0x4];                                       // 0x00D4(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"Config_Glide">();
	}
	static class UConfig_Glide* GetDefaultObj()
	{
		return GetDefaultObjImpl<UConfig_Glide>();
	}
};

// Class Hero_1043.GlideCameraModifier
// 0x0028 (0x0078 - 0x0050)
class UGlideCameraModifier final : public UCameraModifier
{
public:
	uint8                                         Pad_50[0x28];                                      // 0x0050(0x0028)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"GlideCameraModifier">();
	}
	static class UGlideCameraModifier* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGlideCameraModifier>();
	}
};

// Class Hero_1043.EpicMomentAction_1043
// 0x0030 (0x0150 - 0x0120)
class UEpicMomentAction_1043 : public UEpicMomentBaseAction
{
public:
	uint8                                         Pad_120[0x10];                                     // 0x0120(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEpicMomentNodeInfo                    RightConfig;                                       // 0x0130(0x000C)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	int32                                         RightBuffID;                                       // 0x013C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<int32>                                 ImmunityScopeIDs;                                  // 0x0140(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"EpicMomentAction_1043">();
	}
	static class UEpicMomentAction_1043* GetDefaultObj()
	{
		return GetDefaultObjImpl<UEpicMomentAction_1043>();
	}
};

// Class Hero_1043.StarlordAnimInstance
// 0x00E0 (0x09F0 - 0x0910)
class UStarlordAnimInstance final : public UMarvelAnimInstance
{
public:
	float                                         MaxHorizontalMoveSpeed;                            // 0x0910(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         MaxVerticalMoveSpeed;                              // 0x0914(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          IsDoubleJumpingFlag;                               // 0x0918(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bResetDoubleJumpAnim;                              // 0x0919(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_91A[0x6];                                      // 0x091A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                StartVelocity;                                     // 0x0920(0x0018)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bIsjumpLeftOrRight;                                // 0x0938(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bIsInSoulStatus;                                   // 0x0939(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bStartFly;                                         // 0x093A(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bFly;                                              // 0x093B(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bStarFlyState;                                     // 0x093C(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          IsFalling;                                         // 0x093D(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          IsLandStop;                                        // 0x093E(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_93F[0x1];                                      // 0x093F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         TurnRightAnimParam;                                // 0x0940(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         TurnUpAnimParam;                                   // 0x0944(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         AeroMovingDelta;                                   // 0x0948(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_94C[0x3C];                                     // 0x094C(0x003C)(Fixing Size After Last Property [ Dumper-7 ])
	class AStarlordCharacter*                     StarlordCharacter;                                 // 0x0988(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_990[0x60];                                     // 0x0990(0x0060)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	struct FVector GetStartVelocity();
	void UpdateDoubleJumpingFlag(bool NewState);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"StarlordAnimInstance">();
	}
	static class UStarlordAnimInstance* GetDefaultObj()
	{
		return GetDefaultObjImpl<UStarlordAnimInstance>();
	}
};

// Class Hero_1043.StarlordChildActor
// 0x0030 (0x0A90 - 0x0A60)
class AStarlordChildActor final : public AMarvelCharacterChildActor
{
public:
	TArray<int32>                                 NormalHideMaterialIDArray;                         // 0x0A60(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class FName>                           NormalHideMaterialSlotNameArray;                   // 0x0A70(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class FName>                           NormalShowMaterialSlotNameArray;                   // 0x0A80(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"StarlordChildActor">();
	}
	static class AStarlordChildActor* GetDefaultObj()
	{
		return GetDefaultObjImpl<AStarlordChildActor>();
	}
};

// Class Hero_1043.StarlordCharacter
// 0x0060 (0x1870 - 0x1810)
class AStarlordCharacter : public AMarvelBaseCharacter
{
public:
	TMulticastInlineDelegate<void(struct FHitResult& Impact)> OnMoveBlock_ThreadSafe;                            // 0x1810(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(bool NewState)> OnDoubleJump;                                      // 0x1820(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	class UStarlordMoveLogicBaseComponent*        StarlordMoveLogic;                                 // 0x1830(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_1838[0xC];                                     // 0x1838(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          bStartFly;                                         // 0x1844(0x0001)(BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bFly;                                              // 0x1845(0x0001)(BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EStarFlyState                                 StarFlyState;                                      // 0x1846(0x0001)(BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1847[0x1];                                     // 0x1847(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CharacterInput;                                    // 0x1848(0x0018)(BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsUltimateDoubleJumping;                          // 0x1860(0x0001)(BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1861[0xF];                                     // 0x1861(0x000F)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void AssignDeathCueTag(const struct FGameplayTag& InDeathCue);
	struct FVector GetCharacterInput();
	void SetCharacterInput(const struct FVector& CharInput);
	void SetDoubleJump(bool bNewState, bool bNeedBroadCast);
	void SetFly(bool NewState);
	void SetStarFlyState(EStarFlyState NewState);
	void SetStartFly(bool NewState);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"StarlordCharacter">();
	}
	static class AStarlordCharacter* GetDefaultObj()
	{
		return GetDefaultObjImpl<AStarlordCharacter>();
	}
};

// Class Hero_1043.StarlordMoveLogicBaseComponent
// 0x0000 (0x03F0 - 0x03F0)
class UStarlordMoveLogicBaseComponent final : public UMarvelMoveLogicBaseComponent
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"StarlordMoveLogicBaseComponent">();
	}
	static class UStarlordMoveLogicBaseComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UStarlordMoveLogicBaseComponent>();
	}
};

// Class Hero_1043.StarlordMovementComponent
// 0x0000 (0x1B60 - 0x1B60)
class UStarlordMovementComponent final : public UMarvelCharacterMovementComponent
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"StarlordMovementComponent">();
	}
	static class UStarlordMovementComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UStarlordMovementComponent>();
	}
};

}

