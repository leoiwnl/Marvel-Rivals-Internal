#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PyWidget_Common_Input

#include "Basic.hpp"

#include "PyWidget_Common_Input_classes.hpp"
#include "PyWidget_Common_Input_parameters.hpp"


namespace SDK
{

// PythonFunction PyWidget_Common_Input.PyWidget_Common_Input.OnInitialized
// (BlueprintCosmetic, Native, Event, Protected, BlueprintCallable, BlueprintEvent)

void UPyWidget_Common_Input::OnInitialized()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyWidget_Common_Input", "OnInitialized");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyWidget_Common_Input.PyWidget_Common_Input.PreConstruct
// (BlueprintCosmetic, Native, Event, Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPyWidget_Common_Input::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyWidget_Common_Input", "PreConstruct");

	Params::PyWidget_Common_Input_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyWidget_Common_Input.PyWidget_Common_Input.Construct
// (BlueprintCosmetic, Native, Event, Protected, BlueprintCallable, BlueprintEvent)

void UPyWidget_Common_Input::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyWidget_Common_Input", "Construct");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyWidget_Common_Input.PyWidget_Common_Input.Destruct
// (BlueprintCosmetic, Native, Event, Protected, BlueprintCallable, BlueprintEvent)

void UPyWidget_Common_Input::Destruct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyWidget_Common_Input", "Destruct");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyWidget_Common_Input.PyWidget_Common_Input.SetInputTextFocus
// (Native, Public, BlueprintCallable)

void UPyWidget_Common_Input::SetInputTextFocus()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyWidget_Common_Input", "SetInputTextFocus");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyWidget_Common_Input.PyWidget_Common_Input.SetIsOwner
// (Native, Public, BlueprintCallable)
// Parameters:
// bool                                    IsOwner                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPyWidget_Common_Input::SetIsOwner(bool IsOwner)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyWidget_Common_Input", "SetIsOwner");

	Params::PyWidget_Common_Input_SetIsOwner Parms{};

	Parms.IsOwner = IsOwner;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyWidget_Common_Input.PyWidget_Common_Input.SetIsEditable
// (Native, Public, BlueprintCallable)
// Parameters:
// bool                                    IsEditable                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPyWidget_Common_Input::SetIsEditable(bool IsEditable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyWidget_Common_Input", "SetIsEditable");

	Params::PyWidget_Common_Input_SetIsEditable Parms{};

	Parms.IsEditable = IsEditable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyWidget_Common_Input.PyWidget_Common_Input.SetInputHintText
// (Native, Public, BlueprintCallable)
// Parameters:
// class FText                             HintText                                               (Parm)

void UPyWidget_Common_Input::SetInputHintText(const class FText& HintText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyWidget_Common_Input", "SetInputHintText");

	Params::PyWidget_Common_Input_SetInputHintText Parms{};

	Parms.HintText = std::move(HintText);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyWidget_Common_Input.PyWidget_Common_Input.SetPromptHintText
// (Native, Public, BlueprintCallable)
// Parameters:
// class FText                             HintText                                               (Parm)

void UPyWidget_Common_Input::SetPromptHintText(const class FText& HintText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyWidget_Common_Input", "SetPromptHintText");

	Params::PyWidget_Common_Input_SetPromptHintText Parms{};

	Parms.HintText = std::move(HintText);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyWidget_Common_Input.PyWidget_Common_Input.SetTextPrompt
// (Native, Public, BlueprintCallable)
// Parameters:
// class FText                             Prompt                                                 (Parm)

void UPyWidget_Common_Input::SetTextPrompt(const class FText& Prompt)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyWidget_Common_Input", "SetTextPrompt");

	Params::PyWidget_Common_Input_SetTextPrompt Parms{};

	Parms.Prompt = std::move(Prompt);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyWidget_Common_Input.PyWidget_Common_Input.SetInputSize
// (Native, Public, BlueprintCallable)

void UPyWidget_Common_Input::SetInputSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyWidget_Common_Input", "SetInputSize");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyWidget_Common_Input.PyWidget_Common_Input.SetFontSize
// (Native, Public, BlueprintCallable)

void UPyWidget_Common_Input::SetFontSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyWidget_Common_Input", "SetFontSize");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyWidget_Common_Input.PyWidget_Common_Input.SetIsEditing
// (Native, Public, BlueprintCallable)
// Parameters:
// bool                                    IsEditing                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPyWidget_Common_Input::SetIsEditing(bool IsEditing)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyWidget_Common_Input", "SetIsEditing");

	Params::PyWidget_Common_Input_SetIsEditing Parms{};

	Parms.IsEditing = IsEditing;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyWidget_Common_Input.PyWidget_Common_Input.UpdateWidgetStyleWithEditState
// (Native, Public, BlueprintCallable)
// Parameters:
// bool                                    IsEditing                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPyWidget_Common_Input::UpdateWidgetStyleWithEditState(bool IsEditing)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyWidget_Common_Input", "UpdateWidgetStyleWithEditState");

	Params::PyWidget_Common_Input_UpdateWidgetStyleWithEditState Parms{};

	Parms.IsEditing = IsEditing;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyWidget_Common_Input.PyWidget_Common_Input.SetOperateBtnStyle
// (Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FButtonStyle                     BtnStyle                                               (ConstParm, Parm, OutParm, ReferenceParm)

void UPyWidget_Common_Input::SetOperateBtnStyle(const struct FButtonStyle& BtnStyle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyWidget_Common_Input", "SetOperateBtnStyle");

	Params::PyWidget_Common_Input_SetOperateBtnStyle Parms{};

	Parms.BtnStyle = std::move(BtnStyle);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyWidget_Common_Input.PyWidget_Common_Input.SetIsSearch
// (Native, Public, BlueprintCallable)
// Parameters:
// bool                                    IsSearch                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPyWidget_Common_Input::SetIsSearch(bool IsSearch)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyWidget_Common_Input", "SetIsSearch");

	Params::PyWidget_Common_Input_SetIsSearch Parms{};

	Parms.IsSearch = IsSearch;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyWidget_Common_Input.PyWidget_Common_Input.SetIsPassword
// (Native, Public, BlueprintCallable)
// Parameters:
// bool                                    IsPassword                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPyWidget_Common_Input::SetIsPassword(bool IsPassword)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyWidget_Common_Input", "SetIsPassword");

	Params::PyWidget_Common_Input_SetIsPassword Parms{};

	Parms.IsPassword = IsPassword;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyWidget_Common_Input.PyWidget_Common_Input.SetEnterEnabled
// (Native, Public, BlueprintCallable)

void UPyWidget_Common_Input::SetEnterEnabled()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyWidget_Common_Input", "SetEnterEnabled");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyWidget_Common_Input.PyWidget_Common_Input.GetLenUTFEight
// (Native, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                           Str                                                    (Parm, ZeroConstructor, HasGetValueTypeHash)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

int32 UPyWidget_Common_Input::GetLenUTFEight(const class FString& Str)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyWidget_Common_Input", "GetLenUTFEight");

	Params::PyWidget_Common_Input_GetLenUTFEight Parms{};

	Parms.Str = std::move(Str);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// PythonFunction PyWidget_Common_Input.PyWidget_Common_Input.SetInputText
// (Native, Public, BlueprintCallable)
// Parameters:
// class FText                             Text                                                   (Parm)

void UPyWidget_Common_Input::SetInputText(const class FText& Text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyWidget_Common_Input", "SetInputText");

	Params::PyWidget_Common_Input_SetInputText Parms{};

	Parms.Text = std::move(Text);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyWidget_Common_Input.PyWidget_Common_Input.GetInputText
// (Native, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm)

class FText UPyWidget_Common_Input::GetInputText()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyWidget_Common_Input", "GetInputText");

	Params::PyWidget_Common_Input_GetInputText Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// PythonFunction PyWidget_Common_Input.PyWidget_Common_Input.SetTipsText
// (Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FInputTips                       Tips                                                   (ConstParm, Parm, OutParm, ReferenceParm)

void UPyWidget_Common_Input::SetTipsText(const struct FInputTips& Tips)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyWidget_Common_Input", "SetTipsText");

	Params::PyWidget_Common_Input_SetTipsText Parms{};

	Parms.Tips = std::move(Tips);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyWidget_Common_Input.PyWidget_Common_Input.SetTipEnabled
// (Native, Public, BlueprintCallable)
// Parameters:
// bool                                    TipEnabled                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPyWidget_Common_Input::SetTipEnabled(bool TipEnabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyWidget_Common_Input", "SetTipEnabled");

	Params::PyWidget_Common_Input_SetTipEnabled Parms{};

	Parms.TipEnabled = TipEnabled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyWidget_Common_Input.PyWidget_Common_Input.SubmitText
// (Native, Public, BlueprintCallable)
// Parameters:
// class FText                             Text                                                   (Parm)
// bool                                    bIsEnter                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPyWidget_Common_Input::SubmitText(const class FText& Text, bool bIsEnter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyWidget_Common_Input", "SubmitText");

	Params::PyWidget_Common_Input_SubmitText Parms{};

	Parms.Text = std::move(Text);
	Parms.bIsEnter = bIsEnter;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyWidget_Common_Input.PyWidget_Common_Input.SetMinTextLength
// (Native, Public, BlueprintCallable)
// Parameters:
// int32                                   min_length                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPyWidget_Common_Input::SetMinTextLength(int32 min_length)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyWidget_Common_Input", "SetMinTextLength");

	Params::PyWidget_Common_Input_SetMinTextLength Parms{};

	Parms.min_length = min_length;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyWidget_Common_Input.PyWidget_Common_Input.SetMaxTextLength
// (Native, Public, BlueprintCallable)
// Parameters:
// int32                                   max_length                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPyWidget_Common_Input::SetMaxTextLength(int32 max_length)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyWidget_Common_Input", "SetMaxTextLength");

	Params::PyWidget_Common_Input_SetMaxTextLength Parms{};

	Parms.max_length = max_length;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}

}

