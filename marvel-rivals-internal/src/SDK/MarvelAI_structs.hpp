#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MarvelAI

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Marvel_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "Engine_structs.hpp"
#include "AIModule_structs.hpp"


namespace SDK
{

// Enum MarvelAI.EAITeamAction
// NumValues: 0x0007
enum class EAITeamAction : uint8
{
	NoAction                                 = 0,
	AvoidFight                               = 1,
	Sneak                                    = 2,
	RunAway                                  = 3,
	Counter                                  = 4,
	Chase                                    = 5,
	EAITeamAction_MAX                        = 6,
};

// Enum MarvelAI.AIAbilityCheckTarget
// NumValues: 0x0004
enum class EAIAbilityCheckTarget : uint8
{
	Self                                     = 0,
	EnemyTarget                              = 1,
	TeammateTarget                           = 2,
	AIAbilityCheckTarget_MAX                 = 3,
};

// Enum MarvelAI.EAbilityEffectPriority
// NumValues: 0x0008
enum class EAbilityEffectPriority : uint8
{
	Damage                                   = 0,
	Defend                                   = 1,
	Heal                                     = 2,
	Movement                                 = 3,
	Summons                                  = 4,
	BuffEffect                               = 5,
	AbilityType_Highest                      = 6,
	EAbilityEffectPriority_MAX               = 7,
};

// Enum MarvelAI.EOperationType
// NumValues: 0x0005
enum class EOperationType : uint8
{
	Normal                                   = 0,
	Holding                                  = 1,
	Continuous                               = 2,
	Trigger                                  = 3,
	EOperationType_MAX                       = 4,
};

// Enum MarvelAI.EAbilityEffectRangeType
// NumValues: 0x0003
enum class EAbilityEffectRangeType : uint8
{
	Single                                   = 0,
	AOE                                      = 1,
	EAbilityEffectRangeType_MAX              = 2,
};

// Enum MarvelAI.ETargetType
// NumValues: 0x0008
enum class MarvelAI::ETargetType : uint8
{
	Enemy                                    = 0,
	Teammate                                 = 1,
	Self                                     = 2,
	Area                                     = 3,
	Custom                                   = 4,
	TeammateIncludeMe                        = 5,
	None                                     = 255,
	ETargetType_MAX                          = 256,
};

// Enum MarvelAI.ETargetPositionAreaType
// NumValues: 0x0005
enum class ETargetPositionAreaType : uint8
{
	Point                                    = 0,
	Sphere                                   = 1,
	Box                                      = 2,
	Custom                                   = 255,
	ETargetPositionAreaType_MAX              = 256,
};

// Enum MarvelAI.ETargetPositionType
// NumValues: 0x0004
enum class ETargetPositionType : uint8
{
	Release                                  = 0,
	Usage                                    = 1,
	Focus                                    = 2,
	ETargetPositionType_MAX                  = 3,
};

// Enum MarvelAI.EAIActivationAbilityStage
// NumValues: 0x0008
enum class EAIActivationAbilityStage : uint8
{
	None                                     = 0,
	PreWait                                  = 1,
	Press                                    = 2,
	AfterWait                                = 3,
	Canceling                                = 253,
	Canceled                                 = 254,
	Done                                     = 255,
	EAIActivationAbilityStage_MAX            = 256,
};

// Enum MarvelAI.EBattleAreaType
// NumValues: 0x0005
enum class EBattleAreaType : uint8
{
	None                                     = 0,
	Normal                                   = 1,
	Defend                                   = 2,
	Sniper                                   = 3,
	EBattleAreaType_MAX                      = 4,
};

// Enum MarvelAI.EFireLineSenseType
// NumValues: 0x0003
enum class EFireLineSenseType : uint8
{
	Sight                                    = 0,
	Damage                                   = 1,
	EFireLineSenseType_MAX                   = 2,
};

// Enum MarvelAI.EFireLineSenseState
// NumValues: 0x0004
enum class EFireLineSenseState : uint8
{
	Identifying                              = 0,
	Found                                    = 1,
	TryAvoid                                 = 2,
	EFireLineSenseState_MAX                  = 3,
};

// Enum MarvelAI.EAIDistanceSMTarget
// NumValues: 0x0003
enum class EAIDistanceSMTarget : uint8
{
	ToSelf                                   = 0,
	ToBBKey                                  = 1,
	EAIDistanceSMTarget_MAX                  = 2,
};

// Enum MarvelAI.EAbilityTargetType
// NumValues: 0x0004
enum class EAbilityTargetType : uint32
{
	Node                                     = 0,
	Character                                = 1,
	Summoned                                 = 2,
	EAbilityTargetType_MAX                   = 3,
};

// Enum MarvelAI.EAIIntentionType
// NumValues: 0x0006
enum class EAIIntentionType : uint32
{
	Default                                  = 0,
	Self                                     = 1,
	Enemy                                    = 2,
	Teammate                                 = 3,
	Custom                                   = 4,
	EAIIntentionType_MAX                     = 5,
};

// Enum MarvelAI.EResponseState
// NumValues: 0x0004
enum class EResponseState : uint8
{
	Default                                  = 0,
	TimeOut                                  = 1,
	NoReply                                  = 2,
	EResponseState_MAX                       = 3,
};

// Enum MarvelAI.EStrategyType
// NumValues: 0x0004
enum class EStrategyType : uint32
{
	SuppressArea                             = 0,
	RetreatArea                              = 1,
	HotArea                                  = 2,
	EStrategyType_MAX                        = 3,
};

// Enum MarvelAI.EGroupState
// NumValues: 0x0003
enum class EGroupState : uint32
{
	Red                                      = 0,
	Blue                                     = 1,
	EGroupState_MAX                          = 2,
};

// Enum MarvelAI.EAIDistanceLimit
// NumValues: 0x0005
enum class EAIDistanceLimit : uint8
{
	None                                     = 0,
	Approach                                 = 1,
	KeepDistance                             = 2,
	StayAway                                 = 3,
	EAIDistanceLimit_MAX                     = 4,
};

// Enum MarvelAI.EAIFireLimit
// NumValues: 0x0003
enum class EAIFireLimit : uint8
{
	FreeFire                                 = 0,
	StopFire                                 = 1,
	EAIFireLimit_MAX                         = 2,
};

// Enum MarvelAI.EAIMoveTargetLimit
// NumValues: 0x0003
enum class EAIMoveTargetLimit : uint8
{
	NoLimit                                  = 0,
	GoFrontier                               = 1,
	EAIMoveTargetLimit_MAX                   = 2,
};

// Enum MarvelAI.EDiffOperator
// NumValues: 0x0005
enum class EDiffOperator : uint32
{
	Addition                                 = 0,
	Subtraction                              = 1,
	Multiplication                           = 2,
	Division                                 = 3,
	EDiffOperator_MAX                        = 4,
};

// Enum MarvelAI.ECheckOption
// NumValues: 0x0003
enum class ECheckOption : uint8
{
	CampScore                                = 0,
	CampState                                = 1,
	ECheckOption_MAX                         = 2,
};

// Enum MarvelAI.ETargetCampState
// NumValues: 0x0004
enum class ETargetCampState : uint8
{
	Neutral                                  = 0,
	AllyControl                              = 1,
	EnemyControl                             = 2,
	ETargetCampState_MAX                     = 3,
};

// Enum MarvelAI.EPayloadState
// NumValues: 0x0006
enum class EPayloadState : uint8
{
	Neutral                                  = 1,
	AttackerForward                          = 2,
	AttackerStop                             = 4,
	DefenderBackward                         = 8,
	DefenderStop                             = 16,
	EPayloadState_MAX                        = 17,
};

// Enum MarvelAI.EActionCategory
// NumValues: 0x0007
enum class EActionCategory : uint8
{
	None                                     = 0,
	Any                                      = 1,
	Normal                                   = 2,
	Suppress                                 = 3,
	PartialDefense                           = 4,
	AllDefense                               = 5,
	EActionCategory_MAX                      = 6,
};

// Enum MarvelAI.ECalculateType
// NumValues: 0x0003
enum class ECalculateType : uint8
{
	Number                                   = 0,
	Health                                   = 1,
	ECalculateType_MAX                       = 2,
};

// Enum MarvelAI.EPropertyValueType
// NumValues: 0x0003
enum class EPropertyValueType : uint8
{
	CurrentValue                             = 0,
	MaxValue                                 = 1,
	EPropertyValueType_MAX                   = 2,
};

// Enum MarvelAI.EFrontierState
// NumValues: 0x0009
enum class EFrontierState : uint8
{
	None                                     = 1,
	Enemy                                    = 2,
	Ally                                     = 4,
	Both                                     = 8,
	Forward                                  = 16,
	Backward                                 = 32,
	Stop                                     = 64,
	Contesting                               = 128,
	EFrontierState_MAX                       = 129,
};

// Enum MarvelAI.EAITargetType
// NumValues: 0x0007
enum class EAITargetType : uint8
{
	AllysInView                              = 0,
	EnemiesInView                            = 1,
	AliveEnemies                             = 2,
	AliveAllys                               = 3,
	DangerAroundEnemies                      = 4,
	DangerAroundAllys                        = 5,
	EAITargetType_MAX                        = 6,
};

// Enum MarvelAI.EAICommunicateType
// NumValues: 0x0005
enum class EAICommunicateType : uint8
{
	None                                     = 0,
	Quick                                    = 1,
	Message                                  = 2,
	Null                                     = 3,
	EAICommunicateType_MAX                   = 4,
};

// Enum MarvelAI.EAIGameEvent
// NumValues: 0x000A
enum class EAIGameEvent : uint8
{
	None                                     = 0,
	GameBegin                                = 1,
	GameEnd                                  = 2,
	Death                                    = 3,
	AllyAllDeath                             = 4,
	EnemyAllDeath                            = 5,
	BeHeal                                   = 6,
	EnergyFull                               = 7,
	PoorHealth                               = 8,
	EAIGameEvent_MAX                         = 9,
};

// Enum MarvelAI.EBT_GameModeTag
// NumValues: 0x0005
enum class EBT_GameModeTag : uint8
{
	Control                                  = 0,
	Escort                                   = 1,
	Hybrid                                   = 2,
	Other                                    = 3,
	EBT_MAX                                  = 4,
};

// Enum MarvelAI.EPinEnum
// NumValues: 0x0005
enum class EPinEnum : uint8
{
	Attack                                   = 0,
	NeedHeal                                 = 1,
	UltimateCharge                           = 2,
	FallBack                                 = 3,
	EPinEnum_MAX                             = 4,
};

// Enum MarvelAI.EAIAbilityCounterTarget
// NumValues: 0x000A
enum class EAIAbilityCounterTarget : uint8
{
	None                                     = 0,
	Execute                                  = 1,
	User                                     = 2,
	Summoned                                 = 3,
	Projectile                               = 4,
	Scope                                    = 5,
	Target                                   = 6,
	CustomLogic                              = 254,
	Unknown                                  = 255,
	EAIAbilityCounterTarget_MAX              = 256,
};

// Enum MarvelAI.EFlowTemplate
// NumValues: 0x0005
enum class EFlowTemplate : uint8
{
	Button                                   = 0,
	Button_Delay_Button                      = 1,
	Button_CButton                           = 2,
	Custom                                   = 3,
	EFlowTemplate_MAX                        = 4,
};

// Enum MarvelAI.EAbilityCheckType
// NumValues: 0x0004
enum class EAbilityCheckType : uint8
{
	All                                      = 0,
	Base                                     = 1,
	Skip                                     = 2,
	EAbilityCheckType_MAX                    = 3,
};

// Enum MarvelAI.EAIScoreArea
// NumValues: 0x0004
enum class EAIScoreArea : uint8
{
	BasePlus                                 = 0,
	Multiple                                 = 1,
	ExtraPlus                                = 2,
	EAIScoreArea_MAX                         = 3,
};

// Enum MarvelAI.EDestructionState
// NumValues: 0x0004
enum class EDestructionState : uint8
{
	None                                     = 0,
	Unbroken                                 = 1,
	Broken                                   = 2,
	EDestructionState_MAX                    = 3,
};

// Enum MarvelAI.EAITrainingType
// NumValues: 0x0006
enum class EAITrainingType : uint8
{
	Fly                                      = 0,
	Land                                     = 1,
	Jump                                     = 2,
	Patrol                                   = 3,
	Battle                                   = 4,
	EAITrainingType_MAX                      = 5,
};

// Enum MarvelAI.EDefendStandPointHeroType
// NumValues: 0x0008
enum class EDefendStandPointHeroType : uint8
{
	None                                     = 0,
	Tank_Near                                = 1,
	Tank_Far                                 = 2,
	Damage_Near                              = 3,
	Damage_Far                               = 4,
	Support_Near                             = 5,
	Support_Far                              = 6,
	EDefendStandPointHeroType_MAX            = 7,
};

// Enum MarvelAI.EAIJumpAbilityStrength
// NumValues: 0x0004
enum class EAIJumpAbilityStrength : uint8
{
	JumpNormal                               = 0,
	JumpHigh                                 = 1,
	JumpVeryHigh                             = 2,
	EAIJumpAbilityStrength_MAX               = 3,
};

// Enum MarvelAI.EAssaultProgress
// NumValues: 0x0004
enum class EAssaultProgress : uint8
{
	A_Before                                 = 0,
	A_Attacking                              = 1,
	A_Done                                   = 2,
	A_MAX                                    = 3,
};

// Enum MarvelAI.EAssaultStage
// NumValues: 0x0003
enum class EAssaultStage : uint8
{
	A_Point                                  = 0,
	B_Point                                  = 1,
	EAssaultStage_MAX                        = 2,
};

// Enum MarvelAI.EEscortProgress
// NumValues: 0x0005
enum class EEscortProgress : uint8
{
	Ready                                    = 0,
	Go_1                                     = 1,
	Go_2                                     = 2,
	Go_3                                     = 3,
	EEscortProgress_MAX                      = 4,
};

// Enum MarvelAI.EAIDifficultyMode
// NumValues: 0x0005
enum class EAIDifficultyMode : uint8
{
	None                                     = 0,
	Static                                   = 1,
	DynamicWeaken                            = 2,
	DynamicStrengthen                        = 3,
	EAIDifficultyMode_MAX                    = 4,
};

// Enum MarvelAI.EAIHeroType
// NumValues: 0x0003
enum class EAIHeroType : uint8
{
	Normal                                   = 0,
	Sniper                                   = 1,
	EAIHeroType_MAX                          = 2,
};

// Enum MarvelAI.EAIAbilityResource
// NumValues: 0x0004
enum class EAIAbilityResource : uint8
{
	None                                     = 0,
	Move                                     = 1,
	Focus                                    = 2,
	EAIAbilityResource_MAX                   = 3,
};

// Enum MarvelAI.EAIMoveType
// NumValues: 0x0004
enum class EAIMoveType : uint8
{
	None                                     = 0,
	Idle                                     = 1,
	BattleMove                               = 2,
	EAIMoveType_MAX                          = 3,
};

// Enum MarvelAI.EAIBattleMoveType
// NumValues: 0x0005
enum class EAIBattleMoveType : uint8
{
	Default                                  = 0,
	Straight                                 = 1,
	Ground                                   = 2,
	Fly                                      = 3,
	EAIBattleMoveType_MAX                    = 4,
};

// Enum MarvelAI.EAIResourceConflictBehavior
// NumValues: 0x0005
enum class EAIResourceConflictBehavior : uint8
{
	Disable                                  = 0,
	Wait                                     = 1,
	Rerun                                    = 2,
	Ignore                                   = 3,
	EAIResourceConflictBehavior_MAX          = 4,
};

// Enum MarvelAI.EMarvelStandPointShareType
// NumValues: 0x0004
enum class EMarvelStandPointShareType : uint8
{
	Default                                  = 0,
	Share                                    = 1,
	SelfOnly                                 = 2,
	EMarvelStandPointShareType_MAX           = 3,
};

// Enum MarvelAI.EMarvelHealthBarType
// NumValues: 0x0007
enum class EMarvelHealthBarType : uint8
{
	None                                     = 0,
	Health                                   = 1,
	Armor                                    = 2,
	Shield                                   = 4,
	SpareHealth                              = 8,
	All                                      = 7,
	EMarvelHealthBarType_MAX                 = 9,
};

// Enum MarvelAI.EAIFilterSide
// NumValues: 0x0007
enum class EAIFilterSide : uint8
{
	Neutral                                  = 0,
	Enemy                                    = 1,
	Teammate                                 = 2,
	AnySide                                  = 3,
	Anywhere                                 = 4,
	Unknown                                  = 255,
	EAIFilterSide_MAX                        = 256,
};

// Enum MarvelAI.EMarvelArithmeticOperation
// NumValues: 0x0007
enum class EMarvelArithmeticOperation : uint8
{
	Equal                                    = 0,
	NotEqual                                 = 1,
	Less                                     = 2,
	LessOrEqual                              = 3,
	Greater                                  = 4,
	GreaterOrEqual                           = 5,
	EMarvelArithmeticOperation_MAX           = 6,
};

// Enum MarvelAI.EAICharacterSide
// NumValues: 0x0004
enum class EAICharacterSide : uint8
{
	All                                      = 0,
	Ally                                     = 1,
	Enemy                                    = 2,
	EAICharacterSide_MAX                     = 3,
};

// Enum MarvelAI.EAICharacterLifeStatus
// NumValues: 0x0004
enum class EAICharacterLifeStatus : uint8
{
	All                                      = 0,
	Alive                                    = 1,
	Dead                                     = 2,
	EAICharacterLifeStatus_MAX               = 3,
};

// Enum MarvelAI.EAbilitySenseNotify
// NumValues: 0x0004
enum class EAbilitySenseNotify : uint8
{
	None                                     = 0,
	Activate                                 = 1,
	End                                      = 2,
	EAbilitySenseNotify_MAX                  = 3,
};

// Enum MarvelAI.EFilterGroup
// NumValues: 0x0003
enum class EFilterGroup : uint8
{
	Ally                                     = 1,
	Enemy                                    = 2,
	EFilterGroup_MAX                         = 3,
};

// Enum MarvelAI.EFilterRole
// NumValues: 0x0004
enum class EFilterRole : uint8
{
	Tank                                     = 1,
	Damage                                   = 2,
	Support                                  = 4,
	EFilterRole_MAX                          = 5,
};

// Enum MarvelAI.ESurviveState
// NumValues: 0x0003
enum class ESurviveState : uint8
{
	Alive                                    = 1,
	Dead                                     = 2,
	ESurviveState_MAX                        = 3,
};

// Enum MarvelAI.EAIChangeHeroReason
// NumValues: 0x0004
enum class EAIChangeHeroReason : uint8
{
	Default                                  = 0,
	BadLineup                                = 1,
	BadPerformance                           = 2,
	EAIChangeHeroReason_MAX                  = 3,
};

// Enum MarvelAI.EAIAnthropomorphic
// NumValues: 0x0004
enum class EAIAnthropomorphic : uint8
{
	None                                     = 0,
	PlayerTeam                               = 1,
	All                                      = 2,
	EAIAnthropomorphic_MAX                   = 3,
};

// Enum MarvelAI.EStandPointType
// NumValues: 0x0005
enum class EStandPointType : uint8
{
	None                                     = 0,
	Normal                                   = 1,
	Defend                                   = 2,
	Sniper                                   = 3,
	EStandPointType_MAX                      = 4,
};

// Enum MarvelAI.EAIStandPointTeamType
// NumValues: 0x0005
enum class EAIStandPointTeamType : uint8
{
	None                                     = 0,
	Attack                                   = 1,
	Defend                                   = 2,
	Both                                     = 3,
	EAIStandPointTeamType_MAX                = 4,
};

// Enum MarvelAI.EShelterHeightLevel
// NumValues: 0x0003
enum class EShelterHeightLevel : uint8
{
	Normal                                   = 0,
	High                                     = 1,
	EShelterHeightLevel_MAX                  = 2,
};

// Enum MarvelAI.EWayPointMark
// NumValues: 0x0003
enum class EWayPointMark : uint8
{
	Normal                                   = 0,
	Raid                                     = 1,
	EWayPointMark_MAX                        = 2,
};

// ScriptStruct MarvelAI.TacticsTaskParam
// 0x00B0 (0x00B0 - 0x0000)
struct FTacticsTaskParam final
{
public:
	int32                                         TaskIndex;                                         // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            TaskOwner;                                         // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                  TaskTags;                                          // 0x0010(0x0068)(NativeAccessSpecifierPublic)
	int64                                         AbilityID;                                         // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int64                                         AbilityUsage;                                      // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EAIIntentionType                              Intention;                                         // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_8C[0x1C];                                      // 0x008C(0x001C)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UAIAbilitySelectCheckBase>  OverrideSelectCheckClass;                          // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct MarvelAI.AbilityUsagePointCollection
// 0x0010 (0x0010 - 0x0000)
struct FAbilityUsagePointCollection final
{
public:
	TArray<class AAbilityUsageStandPoint*>        ListOfValidPointForUsage;                          // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
};

// ScriptStruct MarvelAI.AIEventArgs
// 0x0028 (0x0028 - 0x0000)
struct FAIEventArgs final
{
public:
	class AActor*                                 Instigator;                                        // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                 Target;                                            // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAttributeModifierHandle               ModifierParameterHandle;                           // 0x0010(0x0018)(HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct MarvelAI.AbilityTacticsRequest
// 0x00B8 (0x00B8 - 0x0000)
struct FAbilityTacticsRequest final
{
public:
	class UAbilityTacticsTask*                    TaskObject;                                        // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTacticsTaskParam                      RequestParam;                                      // 0x0008(0x00B0)(NativeAccessSpecifierPublic)
};

// ScriptStruct MarvelAI.TargetChangeConfig
// 0x0050 (0x0050 - 0x0000)
struct FTargetChangeConfig final
{
public:
	TMap<float, float>                            TargetChangeProbabilities;                         // 0x0000(0x0050)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
};

// ScriptStruct MarvelAI.Range_FloatValue
// 0x0008 (0x0008 - 0x0000)
struct FRange_FloatValue final
{
public:
	float                                         Min;                                               // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Max;                                               // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct MarvelAI.AIAbilityButtonActivationConfig
// 0x0090 (0x0090 - 0x0000)
struct FAIAbilityButtonActivationConfig final
{
public:
	EAbilityInputBinds                            Button;                                            // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRange_FloatValue                      ButtonPressTime;                                   // 0x0004(0x0008)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<TSubclassOf<class UAIAbilityActivationLogic>> PressLogicList;                                    // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TSubclassOf<class UAIAbilityExitStageLogic>   PressCheckLogic;                                   // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bHavePreWait;                                      // 0x0028(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRange_FloatValue                      PreWaitTime;                                       // 0x002C(0x0008)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<TSubclassOf<class UAIAbilityActivationLogic>> PreWaitLogicList;                                  // 0x0038(0x0010)(Edit, BlueprintVisible, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TSubclassOf<class UAIAbilityExitStageLogic>   PreWaitCheckLogic;                                 // 0x0048(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bHaveAfterWait;                                    // 0x0050(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRange_FloatValue                      AfterWaitTime;                                     // 0x0054(0x0008)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<TSubclassOf<class UAIAbilityActivationLogic>> AfterWaitLogicList;                                // 0x0060(0x0010)(Edit, BlueprintVisible, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TSubclassOf<class UAIAbilityExitStageLogic>   AfterWaitCheckLogic;                               // 0x0070(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bLoopButton;                                       // 0x0078(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_79[0x3];                                       // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         LoopNum;                                           // 0x007C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         LoopTime;                                          // 0x0080(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UAIAbilityExitStageLogic>   LoopCheckLogic;                                    // 0x0088(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct MarvelAI.AbilityList
// 0x00A0 (0x00A0 - 0x0000)
struct FAbilityList final
{
public:
	TSet<class UMarvelGameplayAbility*>           Ability;                                           // 0x0000(0x0050)(NativeAccessSpecifierPublic)
	TSet<int32>                                   AbilityID;                                         // 0x0050(0x0050)(NativeAccessSpecifierPublic)
};

// ScriptStruct MarvelAI.MarvelAITarget
// 0x0060 (0x0060 - 0x0000)
struct FMarvelAITarget final
{
public:
	class AActor*                                 TargetActor;                                       // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                TargetLocation;                                    // 0x0008(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                TargetActorOffset;                                 // 0x0020(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                MissOffset;                                        // 0x0038(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bShouldUseLocation;                                // 0x0050(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         RandomValue;                                       // 0x0054(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsValidRandomValue;                               // 0x0058(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsNoTarget;                                       // 0x0059(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5A[0x6];                                       // 0x005A(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct MarvelAI.AbilityTargetArea
// 0x0050 (0x0050 - 0x0000)
struct FAbilityTargetArea final
{
public:
	struct FVector                                CenterPosition;                                    // 0x0000(0x0018)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ETargetPositionAreaType                       TargetPositionType;                                // 0x0018(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         SphereRadius;                                      // 0x001C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                BoxLength;                                         // 0x0020(0x0018)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                               BoxRotation;                                       // 0x0038(0x0018)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
};

// ScriptStruct MarvelAI.AbilityUsagePointData
// 0x0070 (0x0070 - 0x0000)
struct FAbilityUsagePointData final
{
public:
	int32                                         AbilityUsageID;                                    // 0x0000(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         bEnableReleasePosition : 1;                        // 0x0004(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bSetFocusToUsagePosition : 1;                      // 0x0004(0x0001)(BitIndex: 0x01, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         FocusPositionIndex;                                // 0x0008(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAbilityTargetArea                     ReleasePosition;                                   // 0x0010(0x0050)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	TArray<struct FAbilityTargetArea>             UsagePositions;                                    // 0x0060(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};

// ScriptStruct MarvelAI.AIAbilityUsage
// 0x00E8 (0x00E8 - 0x0000)
struct FAIAbilityUsage final
{
public:
	int32                                         UsageID;                                           // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMarvelAITarget                        UsageTarget;                                       // 0x0008(0x0060)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FAbilityUsagePointData                 UsagePointData;                                    // 0x0068(0x0070)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	MarvelAI::ETargetType                         TargetType;                                        // 0x00D8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_D9[0x3];                                       // 0x00D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         UsageScore;                                        // 0x00DC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          UsedByAILab;                                       // 0x00E0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_E1[0x7];                                       // 0x00E1(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct MarvelAI.AbilityUsagePriorityConfig
// 0x0058 (0x0058 - 0x0000)
struct FAbilityUsagePriorityConfig final
{
public:
	int32                                         BasicPriorityScore;                                // 0x0000(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<struct FGameplayTag, int32>              TagToPriority;                                     // 0x0008(0x0050)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic)
};

// ScriptStruct MarvelAI.AIAbilityResourcePriorityPair
// 0x0008 (0x0008 - 0x0000)
struct FAIAbilityResourcePriorityPair final
{
public:
	int32                                         UsageID;                                           // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Priority;                                          // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct MarvelAI.AIAbilityResourceQueue
// 0x0018 (0x0018 - 0x0000)
struct FAIAbilityResourceQueue final
{
public:
	TArray<struct FAIAbilityResourcePriorityPair> ResourceQueue;                                     // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	EAIAbilityResource                            RequestResource;                                   // 0x0010(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct MarvelAI.AutoAbilityGroup
// 0x0018 (0x0018 - 0x0000)
struct FAutoAbilityGroup final
{
public:
	class AMarvelBaseCharacter*                   Character;                                         // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                           GroupTag;                                          // 0x0008(0x000C)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct MarvelAI.AIChangeHeroDebugInfo
// 0x0010 (0x0010 - 0x0000)
struct alignas(0x04) FAIChangeHeroDebugInfo final
{
public:
	uint8                                         Pad_0[0x10];                                       // 0x0000(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct MarvelAI.AIHitModifyDebugInfo
// 0x0001 (0x0001 - 0x0000)
struct FAIHitModifyDebugInfo final
{
public:
	uint8                                         Pad_0[0x1];                                        // 0x0000(0x0001)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct MarvelAI.MyStruct1
// 0x0001 (0x0001 - 0x0000)
struct FMyStruct1
{
public:
	uint8                                         Pad_0[0x1];                                        // 0x0000(0x0001)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct MarvelAI.MyStruct2
// 0x0000 (0x0001 - 0x0001)
struct FMyStruct2 : public FMyStruct1
{
};

// ScriptStruct MarvelAI.MyStruct3
// 0x0000 (0x0001 - 0x0001)
struct FMyStruct3 : public FMyStruct2
{
};

// ScriptStruct MarvelAI.MyStruct4
// 0x0000 (0x0001 - 0x0001)
struct FMyStruct4 final : public FMyStruct3
{
};

// ScriptStruct MarvelAI.MyStruct5
// 0x0000 (0x0001 - 0x0001)
struct FMyStruct5 final : public FMyStruct3
{
};

// ScriptStruct MarvelAI.HitRateModifyAsset
// 0x0010 (0x0010 - 0x0000)
struct FHitRateModifyAsset final
{
public:
	TArray<class UAIHitRateModify*>               AIHitRateModify;                                   // 0x0000(0x0010)(Edit, ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
};

// ScriptStruct MarvelAI.AbilityCDCache
// 0x0050 (0x0050 - 0x0000)
struct alignas(0x08) FAbilityCDCache final
{
public:
	uint8                                         Pad_0[0x50];                                       // 0x0000(0x0050)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct MarvelAI.AIImpressionBase
// 0x0008 (0x0008 - 0x0000)
struct alignas(0x08) FAIImpressionBase
{
public:
	uint8                                         Pad_0[0x8];                                        // 0x0000(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct MarvelAI.AIImpressionAbilityData
// 0x0010 (0x0018 - 0x0008)
struct FAIImpressionAbilityData final : public FAIImpressionBase
{
public:
	class AActor*                                 Instigator;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMarvelGameplayAbility*                 Ability;                                           // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct MarvelAI.AIImpressionSummonedData
// 0x0010 (0x0018 - 0x0008)
struct FAIImpressionSummonedData final : public FAIImpressionBase
{
public:
	class AActor*                                 Instigator;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMarvelSummonedComponent*               Summoned;                                          // 0x0010(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct MarvelAI.AIImpressionProjectileData
// 0x0010 (0x0018 - 0x0008)
struct FAIImpressionProjectileData final : public FAIImpressionBase
{
public:
	class AActor*                                 Instigator;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AMarvelAbilityTargetActor_Projectile*   Projectile;                                        // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct MarvelAI.AIImpressionScopeData
// 0x0010 (0x0018 - 0x0008)
struct FAIImpressionScopeData final : public FAIImpressionBase
{
public:
	class AActor*                                 Instigator;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AMarvelAbilityTargetActor_Scope*        Scope;                                             // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct MarvelAI.AIImpressionGamePlayTagData
// 0x0050 (0x0058 - 0x0008)
struct FAIImpressionGamePlayTagData final : public FAIImpressionBase
{
public:
	TSet<class AActor*>                           TagOwner;                                          // 0x0008(0x0050)(Edit, NativeAccessSpecifierPublic)
};

// ScriptStruct MarvelAI.AIImpressionAgentTraceData
// 0x0010 (0x0010 - 0x0000)
struct FAIImpressionAgentTraceData final
{
public:
	class AActor*                                 Instigator;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMarvelAgentTraceComponent*             TraceComponent;                                    // 0x0008(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct MarvelAI.AIImpressionFireLine
// 0x0018 (0x0018 - 0x0000)
struct FAIImpressionFireLine final
{
public:
	class AMarvelBaseCharacter*                   Target;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EFireLineSenseType                            FireLineSenseType;                                 // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EFireLineSenseState                           FireLineSenseState;                                // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_A[0x2];                                        // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         SenseStateTime;                                    // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Priority;                                          // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct MarvelAI.AIImpressionData
// 0x0230 (0x0230 - 0x0000)
struct FAIImpressionData final
{
public:
	TSet<struct FAIImpressionAbilityData>         AbilityData;                                       // 0x0000(0x0050)(BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	TSet<struct FAIImpressionSummonedData>        SummonedData;                                      // 0x0050(0x0050)(BlueprintVisible, BlueprintReadOnly, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	TSet<struct FAIImpressionProjectileData>      ProjectileData;                                    // 0x00A0(0x0050)(BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	TSet<struct FAIImpressionScopeData>           ScopeData;                                         // 0x00F0(0x0050)(BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	TSet<struct FAIImpressionAgentTraceData>      AgentTraceData;                                    // 0x0140(0x0050)(BlueprintVisible, BlueprintReadOnly, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	TSet<struct FAIImpressionFireLine>            FireLineData;                                      // 0x0190(0x0050)(BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	TMap<struct FGameplayTag, struct FAIImpressionGamePlayTagData> GamePlayTagData;                                   // 0x01E0(0x0050)(BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
};

// ScriptStruct MarvelAI.AbilityDangerous
// 0x000C (0x000C - 0x0000)
struct FAbilityDangerous final
{
public:
	int32                                         AbilityID;                                         // 0x0000(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DangerousTargetRadius;                             // 0x0004(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ForgetAge;                                         // 0x0008(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct MarvelAI.AISenseDangerousTargetConfig
// 0x0010 (0x0010 - 0x0000)
struct FAISenseDangerousTargetConfig final
{
public:
	TArray<struct FAbilityDangerous>              DangerousTarget;                                   // 0x0000(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};

// ScriptStruct MarvelAI.AIServerTargetType
// 0x0018 (0x0018 - 0x0000)
struct FAIServerTargetType final
{
public:
	EAbilityTargetType                            TargetType;                                        // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         OwnerID;                                           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         TargetUID;                                         // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct MarvelAI.AIServerTargetProtocol
// 0x0020 (0x0020 - 0x0000)
struct FAIServerTargetProtocol final
{
public:
	TArray<struct FAIServerTargetType>            AllyTarget;                                        // 0x0000(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FAIServerTargetType>            EnemyTarget;                                       // 0x0010(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// ScriptStruct MarvelAI.AIServerIntentionProtocol
// 0x0004 (0x0004 - 0x0000)
struct FAIServerIntentionProtocol final
{
public:
	EAIIntentionType                              Intention;                                         // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct MarvelAI.AIServerAbilityProtocol
// 0x0030 (0x0030 - 0x0000)
struct FAIServerAbilityProtocol final
{
public:
	int32                                         AbilityID;                                         // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EAIIntentionType                              Intention;                                         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAIServerTargetProtocol                Target;                                            // 0x0008(0x0020)(NativeAccessSpecifierPublic)
	int32                                         AbilityUsageID;                                    // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct MarvelAI.AIServerResponseProtocol
// 0x0020 (0x0020 - 0x0000)
struct FAIServerResponseProtocol final
{
public:
	int32                                         UID;                                               // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FAIServerAbilityProtocol>       Ability;                                           // 0x0008(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
	float                                         DynamicDifficultyFactor[0x2];                      // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct MarvelAI.AIServerControlProtocol
// 0x0068 (0x0068 - 0x0000)
struct FAIServerControlProtocol final
{
public:
	int32                                         RequestID;                                         // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         AILabTeam;                                         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         AIDifficulty[0x2];                                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<int32, struct FAIServerResponseProtocol> Control;                                           // 0x0010(0x0050)(NativeAccessSpecifierPublic)
	float                                         DynamicDifficultyFactor[0x2];                      // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct MarvelAI.AIServerRequestID
// 0x0004 (0x0004 - 0x0000)
struct FAIServerRequestID final
{
public:
	int32                                         RequestUID;                                        // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct MarvelAI.AIServerResponseCode
// 0x0001 (0x0001 - 0x0000)
struct FAIServerResponseCode final
{
public:
	EResponseState                                ResponseCode;                                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct MarvelAI.AILabProtoWeaponClipData
// 0x001C (0x001C - 0x0000)
struct FAILabProtoWeaponClipData final
{
public:
	int32                                         Weapon1;                                           // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Weapon2;                                           // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Weapon3;                                           // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         SkillEnergy;                                       // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         SkillEnergy2;                                      // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         SkillEnergy3;                                      // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         UltimateAbility;                                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct MarvelAI.AILabProtoBattleRecordData
// 0x001C (0x001C - 0x0000)
struct FAILabProtoBattleRecordData final
{
public:
	int32                                         KillCount;                                         // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         DeathCount;                                        // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         AssistCount;                                       // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         HitRate;                                           // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Damage;                                            // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Injured;                                           // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Heal;                                              // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct MarvelAI.AILabProtoBuffData
// 0x0008 (0x0008 - 0x0000)
struct FAILabProtoBuffData final
{
public:
	int32                                         ID;                                                // 0x0000(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Duration;                                          // 0x0004(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct MarvelAI.AILabProtoAbilityData
// 0x00A0 (0x00A0 - 0x0000)
struct FAILabProtoAbilityData final
{
public:
	TSet<int32>                                   ActivatedAbility;                                  // 0x0000(0x0050)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	TSet<int32>                                   CoolDownAbility;                                   // 0x0050(0x0050)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
};

// ScriptStruct MarvelAI.AILabProtoEnvironmentData
// 0x0040 (0x0040 - 0x0000)
struct FAILabProtoEnvironmentData final
{
public:
	TArray<int32>                                 AllyInViewCharacterUID;                            // 0x0000(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<int32>                                 EnemyInViewCharacterUID;                           // 0x0010(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<int32>                                 AllyJustDisappearedCharacterUID;                   // 0x0020(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<int32>                                 EnemyJustDisappearedCharacterUID;                  // 0x0030(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
};

// ScriptStruct MarvelAI.AILabProtoCharacterData
// 0x01B0 (0x01B0 - 0x0000)
struct FAILabProtoCharacterData final
{
public:
	int32                                         UID;                                               // 0x0000(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ID;                                                // 0x0004(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          IsRobot;                                           // 0x0008(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         MoveMode;                                          // 0x000C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         SculptID;                                          // 0x0010(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          IsDeath;                                           // 0x0014(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Health;                                            // 0x0018(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Other;                                             // 0x001C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                Location;                                          // 0x0020(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                Velocity;                                          // 0x0038(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                Rotation;                                          // 0x0050(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         BattleSide;                                        // 0x0068(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FAILabProtoBuffData>            BuffData;                                          // 0x0070(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FAILabProtoAbilityData                 AbilityUsageData;                                  // 0x0080(0x00A0)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FAILabProtoEnvironmentData             EnvironmentData;                                   // 0x0120(0x0040)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FAILabProtoWeaponClipData              WeaponClip;                                        // 0x0160(0x001C)(NoDestructor, NativeAccessSpecifierPublic)
	struct FAILabProtoBattleRecordData            BattleRecordBoard;                                 // 0x017C(0x001C)(NoDestructor, NativeAccessSpecifierPublic)
	TArray<int32>                                 CurrentAmmoTypes;                                  // 0x0198(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
	int32                                         AllyTargetUID;                                     // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         EnemyTargetUID;                                    // 0x01AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct MarvelAI.AILabProtoSummonedData
// 0x0038 (0x0038 - 0x0000)
struct FAILabProtoSummonedData final
{
public:
	int32                                         ID;                                                // 0x0000(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint32                                        UID;                                               // 0x0004(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         OwnerID;                                           // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         BattleSide;                                        // 0x000C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Health;                                            // 0x0010(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Location;                                          // 0x0018(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Duration;                                          // 0x0030(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct MarvelAI.AILabProtoBarrierData
// 0x0030 (0x0030 - 0x0000)
struct FAILabProtoBarrierData final
{
public:
	int32                                         ID;                                                // 0x0000(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Location;                                          // 0x0008(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsSmash;                                          // 0x0020(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsPickUp;                                         // 0x0021(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_22[0x2];                                       // 0x0022(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Health;                                            // 0x0024(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         SummonerWeaponType;                                // 0x0028(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct MarvelAI.AILabProtoSceneData
// 0x0030 (0x0030 - 0x0000)
struct FAILabProtoSceneData final
{
public:
	class FString                                 MapName;                                           // 0x0000(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FAILabProtoBarrierData>         BarrierData;                                       // 0x0010(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FAILabProtoSummonedData>        SummonedData;                                      // 0x0020(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
};

// ScriptStruct MarvelAI.AILabProtoTickData
// 0x0090 (0x0090 - 0x0000)
struct FAILabProtoTickData final
{
public:
	int64                                         Timestamp;                                         // 0x0000(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 BattleID;                                          // 0x0008(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 MapID;                                             // 0x0018(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 GameMode;                                          // 0x0028(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         WinnerSide;                                        // 0x0038(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          IsGameOver;                                        // 0x003C(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FAILabProtoCharacterData>       CharacterData;                                     // 0x0040(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FAILabProtoSceneData                   SceneData;                                         // 0x0050(0x0030)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	TArray<float>                                 LevelParams;                                       // 0x0080(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
};

// ScriptStruct MarvelAI.RequestParamData
// 0x0004 (0x0004 - 0x0000)
struct alignas(0x04) FRequestParamData final
{
public:
	uint8                                         Pad_0[0x4];                                        // 0x0000(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct MarvelAI.AIServerRequestProtocol
// 0x00B0 (0x00B0 - 0x0000)
struct FAIServerRequestProtocol final
{
public:
	int64                                         RequestID;                                         // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FAIServerRequestID>             RequestAI;                                         // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FAILabProtoTickData                    TickData;                                          // 0x0018(0x0090)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	uint8                                         Pad_A8[0x8];                                       // 0x00A8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct MarvelAI.RequestMessageData
// 0x0028 (0x0028 - 0x0000)
struct FRequestMessageData final
{
public:
	class UObject*                                RequestObject;                                     // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int64                                         RequestUID;                                        // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRequestParamData                      RequestParam;                                      // 0x0010(0x0004)(NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x14];                                      // 0x0014(0x0014)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct MarvelAI.StrategyArea
// 0x0090 (0x0090 - 0x0000)
struct FStrategyArea final
{
public:
	struct FBlackboardKeySelector                 OutSuppressArea;                                   // 0x0000(0x0030)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FBlackboardKeySelector                 OutRetreatArea;                                    // 0x0030(0x0030)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FBlackboardKeySelector                 OutHotArea;                                        // 0x0060(0x0030)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
};

// ScriptStruct MarvelAI.TargetRoleFactor
// 0x00A0 (0x00A0 - 0x0000)
struct FTargetRoleFactor final
{
public:
	TMap<EHeroRole, float>                        RoleFactor;                                        // 0x0000(0x0050)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	TMap<int32, float>                            SummonerFactor;                                    // 0x0050(0x0050)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
};

// ScriptStruct MarvelAI.AITargetFactorConfig
// 0x0060 (0x0060 - 0x0000)
struct FAITargetFactorConfig final
{
public:
	TMap<EHeroRole, struct FTargetRoleFactor>     TargetRoleFactorData;                              // 0x0000(0x0050)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	float                                         TargetFactorNotInView;                             // 0x0050(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         TargetFactorForDamageSource;                       // 0x0054(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         TargetFactorForImportantUnit;                      // 0x0058(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct MarvelAI.RequiredAIDataForAutoAbility
// 0x0038 (0x0038 - 0x0000)
struct FRequiredAIDataForAutoAbility final
{
public:
	class AMarvelAIController*                    AIController;                                      // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                 TeammateTarget;                                    // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                 TeammateIncludeMeTarget;                           // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                 EnemyTarget;                                       // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EAIIntentionType                              Intention;                                         // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_24[0x14];                                      // 0x0024(0x0014)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct MarvelAI.CheckFrontCharacterData
// 0x0001 (0x0001 - 0x0000)
struct FCheckFrontCharacterData final
{
public:
	bool                                          bIsRunning;                                        // 0x0000(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct MarvelAI.CoupleActorStruct
// 0x0068 (0x0068 - 0x0000)
struct FCoupleActorStruct final
{
public:
	struct FBlackboardKeySelector                 SourceActor;                                       // 0x0000(0x0030)(Edit, NativeAccessSpecifierPublic)
	struct FBlackboardKeySelector                 TargetActor;                                       // 0x0030(0x0030)(Edit, NativeAccessSpecifierPublic)
	float                                         MultipleNum;                                       // 0x0060(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct MarvelAI.SideScoreConfig
// 0x0014 (0x0014 - 0x0000)
struct FSideScoreConfig final
{
public:
	EAIFilterSide                                 Side;                                              // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFloatRange                            Score;                                             // 0x0004(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct MarvelAI.CampStateConfig
// 0x0001 (0x0001 - 0x0000)
struct FCampStateConfig final
{
public:
	EAIFilterSide                                 State;                                             // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct MarvelAI.ActionRequirement
// 0x0010 (0x0010 - 0x0000)
struct FActionRequirement final
{
public:
	TArray<class UActionRequirementBase*>         Requirement;                                       // 0x0000(0x0010)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
};

// ScriptStruct MarvelAI.ActionRequirementNode
// 0x0030 (0x0030 - 0x0000)
struct FActionRequirementNode final
{
public:
	EActionCategory                               AIAction;                                          // 0x0000(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EActionCategory                               DefaultAction;                                     // 0x0001(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FActionRequirement>             ActiveRequirement;                                 // 0x0008(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	TArray<struct FActionRequirement>             DeActiveRequirement;                               // 0x0018(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	bool                                          bAborts;                                           // 0x0028(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct MarvelAI.AIStateMachine
// 0x0070 (0x0070 - 0x0000)
struct FAIStateMachine final
{
public:
	class UActionRequirementAsset*                ActionTableAsset;                                  // 0x0000(0x0008)(Edit, ZeroConstructor, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_8[0x60];                                       // 0x0008(0x0060)(Fixing Size After Last Property [ Dumper-7 ])
	EActionCategory                               CurrentAction;                                     // 0x0068(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	EActionCategory                               DefaultAction;                                     // 0x0069(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_6A[0x6];                                       // 0x006A(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct MarvelAI.AroundCharacterCheckStruct
// 0x0038 (0x0038 - 0x0000)
struct FAroundCharacterCheckStruct final
{
public:
	struct FBlackboardKeySelector                 FocusActor;                                        // 0x0000(0x0030)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	float                                         Radius;                                            // 0x0030(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct MarvelAI.AICommunicateEx
// 0x0070 (0x0070 - 0x0000)
struct FAICommunicateEx final
{
public:
	EAICommunicateType                            Type;                                              // 0x0000(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ID;                                                // 0x0004(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<EHeroRole, int32>                        IDMap;                                             // 0x0008(0x0050)(Edit, NativeAccessSpecifierPublic)
	int32                                         Widget;                                            // 0x0058(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFloatRange                            Delay;                                             // 0x005C(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct MarvelAI.AICommunicateList
// 0x0018 (0x0018 - 0x0000)
struct FAICommunicateList final
{
public:
	TArray<struct FAICommunicateEx>               Communicates;                                      // 0x0000(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	float                                         Probability;                                       // 0x0010(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ProbabilityAttenuation;                            // 0x0014(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct MarvelAI.AICommunicateData
// 0x0050 (0x0050 - 0x0000)
struct FAICommunicateData final
{
public:
	TMap<EAIGameEvent, struct FAICommunicateList> AICommunicate;                                     // 0x0000(0x0050)(Edit, NativeAccessSpecifierPublic)
};

// ScriptStruct MarvelAI.AICommunicateRow
// 0x0018 (0x0038 - 0x0020)
struct FAICommunicateRow final : public FTableRowBase
{
public:
	class FText                                   AICommunicate;                                     // 0x0020(0x0018)(Edit, NativeAccessSpecifierPublic)
};

// ScriptStruct MarvelAI.MapPoint
// 0x0050 (0x0050 - 0x0000)
struct FMapPoint final
{
public:
	TMap<int32, float>                            Distance;                                          // 0x0000(0x0050)(Edit, Protected, NativeAccessSpecifierProtected)
};

// ScriptStruct MarvelAI.StrategyAreaBBkeyOutput
// 0x0090 (0x0090 - 0x0000)
struct FStrategyAreaBBkeyOutput final
{
public:
	struct FBlackboardKeySelector                 SuppressArea;                                      // 0x0000(0x0030)(Edit, NativeAccessSpecifierPublic)
	struct FBlackboardKeySelector                 RetreatArea;                                       // 0x0030(0x0030)(Edit, NativeAccessSpecifierPublic)
	struct FBlackboardKeySelector                 HotArea;                                           // 0x0060(0x0030)(Edit, NativeAccessSpecifierPublic)
};

// ScriptStruct MarvelAI.PinPointInfo
// 0x0010 (0x0010 - 0x0000)
struct FPinPointInfo final
{
public:
	struct FGameplayTag                           SignalTag;                                         // 0x0000(0x000C)(Edit, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         CommID;                                            // 0x000C(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct MarvelAI.BTEmoteConfig
// 0x0018 (0x0018 - 0x0000)
struct FBTEmoteConfig final
{
public:
	int64                                         EmoteID;                                           // 0x0000(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Weight;                                            // 0x0008(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   EmoteDesc;                                         // 0x000C(0x000C)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct MarvelAI.BTHeroEmoteConfig
// 0x0020 (0x0020 - 0x0000)
struct FBTHeroEmoteConfig final
{
public:
	class FString                                 HeroEmoteConfigDesc;                               // 0x0000(0x0010)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FBTEmoteConfig>                 EmoteProbArray;                                    // 0x0010(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};

// ScriptStruct MarvelAI.AbilityTargetDistance
// 0x000C (0x000C - 0x0000)
struct FAbilityTargetDistance final
{
public:
	int32                                         ID;                                                // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SenseDistance;                                     // 0x0004(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         AvoidDistance;                                     // 0x0008(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct MarvelAI.EvadeParameter
// 0x0030 (0x0030 - 0x0000)
struct FEvadeParameter final
{
public:
	TArray<struct FAbilityTargetDistance>         Summoner;                                          // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FAbilityTargetDistance>         Hero;                                              // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FAbilityTargetDistance>         Projectile;                                        // 0x0020(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, EditConst, NativeAccessSpecifierPublic)
};

// ScriptStruct MarvelAI.EnvQueryProjectileInfo
// 0x0008 (0x0008 - 0x0000)
struct FEnvQueryProjectileInfo final
{
public:
	int32                                         ProjectileID;                                      // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         EffectRadius;                                      // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct MarvelAI.EQSTargetConfig
// 0x0018 (0x0018 - 0x0000)
struct FEQSTargetConfig final
{
public:
	TSubclassOf<class UEnvQueryContext>           TargetContext;                                     // 0x0000(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                            DistScoreCurve;                                    // 0x0008(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ScaleFactor;                                       // 0x0010(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct MarvelAI.AIAbilityCounterConfig
// 0x0010 (0x0010 - 0x0000)
struct FAIAbilityCounterConfig final
{
public:
	int32                                         AbilityID;                                         // 0x0000(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EAIAbilityCounterTarget                       CheckTarget;                                       // 0x0004(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bShouldCheckTime;                                  // 0x0005(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         TimeLimit;                                         // 0x0008(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bNeedInSight;                                      // 0x000C(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct MarvelAI.MarvelAIAbilityCounterTable
// 0x0028 (0x0048 - 0x0020)
struct FMarvelAIAbilityCounterTable final : public FTableRowBase
{
public:
	class FString                                 Description;                                       // 0x0020(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EAIFilterSide                                 FilterSide;                                        // 0x0030(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FAIAbilityCounterConfig>        CounterConfigList;                                 // 0x0038(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
};

// ScriptStruct MarvelAI.AIAbilityActivateConfig
// 0x00B8 (0x00B8 - 0x0000)
struct FAIAbilityActivateConfig final
{
public:
	int32                                         UsageID;                                           // 0x0000(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UGameplayAbility>           AbilityParentClass;                                // 0x0008(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EAbilityInputBinds                            AbilityInputBind;                                  // 0x0010(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UObject>                    AbilityBindFilter;                                 // 0x0018(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         PredicateDistance;                                 // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bShouldTryHeadShoot;                               // 0x0024(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bShouldTryFootShoot;                               // 0x0025(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_26[0x2];                                       // 0x0026(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         HeadShotChance;                                    // 0x0028(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  ActivationOwnedAITags;                             // 0x0030(0x0068)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	int32                                         ResourceList;                                      // 0x0098(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9C[0x4];                                       // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UAIMoveControlLogic>        MoveControlLogic;                                  // 0x00A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UAISelectTargetLogicBase>   FocusControlLogic;                                 // 0x00A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EAIResourceConflictBehavior                   ConflictBehavior;                                  // 0x00B0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bProjectilePredicateShootPos;                      // 0x00B1(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_B2[0x2];                                       // 0x00B2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ProjectilePredicateMinDistance;                    // 0x00B4(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct MarvelAI.LowHealthConfig
// 0x0008 (0x0008 - 0x0000)
struct FLowHealthConfig final
{
public:
	float                                         LowHealth;                                         // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         NumOfLowHealth;                                    // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct MarvelAI.AIAbilityConditionConfig
// 0x0064 (0x0064 - 0x0000)
struct FAIAbilityConditionConfig final
{
public:
	float                                         CheckCooldownSeconds;                              // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRange_FloatValue                      ActivateDistance;                                  // 0x0004(0x0008)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	int32                                         ActiveHeight;                                      // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ChanceToUse;                                       // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bOnlyUseWhenTakingDamage;                          // 0x0014(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FInt32Range                            NumOfEnemiesInView;                                // 0x0018(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FInt32Range                            NumOfTeammatesInView;                              // 0x0028(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FInt32Range                            NearbyDeaths;                                      // 0x0038(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	MarvelAI::ETargetType                         TargetType;                                        // 0x0048(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsVisible;                                        // 0x0049(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4A[0x2];                                       // 0x004A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRange_FloatValue                      TargetHealth;                                      // 0x004C(0x0008)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          bNeedCheckTeamHealth;                              // 0x0054(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_55[0x3];                                       // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         GroupHealth;                                       // 0x0058(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLowHealthConfig                       LowHealth;                                         // 0x005C(0x0008)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
};

// ScriptStruct MarvelAI.AIAbilityPriorityConfig
// 0x0060 (0x0060 - 0x0000)
struct FAIAbilityPriorityConfig final
{
public:
	EAbilityEffectPriority                        EffectPriority;                                    // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAbilityUsagePriorityConfig            UsagePriorityConfig;                               // 0x0008(0x0058)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic)
};

// ScriptStruct MarvelAI.ComboConfig
// 0x0008 (0x0008 - 0x0000)
struct FComboConfig final
{
public:
	int32                                         ComboUsageID;                                      // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ComboValidDuration;                                // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct MarvelAI.AIAbilityUsageTag
// 0x0068 (0x0068 - 0x0000)
struct FAIAbilityUsageTag final
{
public:
	struct FGameplayTagContainer                  AbilityUsageTag;                                   // 0x0000(0x0068)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
};

// ScriptStruct MarvelAI.AIHitRateTagContainer
// 0x0068 (0x0068 - 0x0000)
struct FAIHitRateTagContainer final
{
public:
	struct FGameplayTagContainer                  TagContainer;                                      // 0x0000(0x0068)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
};

// ScriptStruct MarvelAI.MarvelAIAutoAbilityTable
// 0x0248 (0x0268 - 0x0020)
struct FMarvelAIAutoAbilityTable final : public FTableRowBase
{
public:
	uint8                                         Pad_20[0x10];                                      // 0x0020(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAIAbilityUsageTag                     AbilityUsageTag;                                   // 0x0030(0x0068)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FAIHitRateTagContainer                 HitRateTagContainer;                               // 0x0098(0x0068)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	float                                         ChanceToHit;                                       // 0x0100(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_104[0x4];                                      // 0x0104(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAIAbilityActivateConfig               ActivateConfig;                                    // 0x0108(0x00B8)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FAIAbilityConditionConfig              ConditionConfig;                                   // 0x01C0(0x0064)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	float                                         PriorityScore;                                     // 0x0224(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FComboConfig                           ComboConfig;                                       // 0x0228(0x0008)(BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	EAbilityCheckType                             AbilityCheckType;                                  // 0x0230(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_231[0x7];                                      // 0x0231(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FAIAbilityButtonActivationConfig> ButtonConfig;                                      // 0x0238(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                          bHasCancelButton;                                  // 0x0248(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EAbilityInputBinds                            CancelButton;                                      // 0x0249(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_24A[0x6];                                      // 0x024A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UAIAbilityFlowCheckLogicBase> FlowCheckLogic;                                    // 0x0250(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAIAbilityUsageAsset*                   UsageAsset;                                        // 0x0258(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAIServerIntentionProtocol             Intention;                                         // 0x0260(0x0004)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_264[0x4];                                      // 0x0264(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct MarvelAI.AIRolePriority
// 0x0008 (0x0008 - 0x0000)
struct FAIRolePriority final
{
public:
	EHeroRole                                     AIRole;                                            // 0x0000(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         RoleNum;                                           // 0x0004(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct MarvelAI.Range_Int32Value
// 0x0008 (0x0008 - 0x0000)
struct FRange_Int32Value final
{
public:
	int32                                         Min;                                               // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Max;                                               // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct MarvelAI.AIAggressiveLevelConfig
// 0x0050 (0x0050 - 0x0000)
struct FAIAggressiveLevelConfig final
{
public:
	TMap<int32, int32>                            BuffIDToAggressiveLevel;                           // 0x0000(0x0050)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
};

// ScriptStruct MarvelAI.HealthPackDistToChance
// 0x0008 (0x0008 - 0x0000)
struct FHealthPackDistToChance final
{
public:
	float                                         DistToHealthPack;                                  // 0x0000(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Chance;                                            // 0x0004(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct MarvelAI.GoHealthPackConfigEntry
// 0x0018 (0x0018 - 0x0000)
struct FGoHealthPackConfigEntry final
{
public:
	float                                         HealthProportion;                                  // 0x0000(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FHealthPackDistToChance>        DistToChance;                                      // 0x0008(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
};

// ScriptStruct MarvelAI.NavLinkMoveConfigEntry
// 0x0010 (0x0010 - 0x0000)
struct FNavLinkMoveConfigEntry final
{
public:
	TArray<class UNavLinkMoveMethod*>             MoveMethodList;                                    // 0x0000(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};

// ScriptStruct MarvelAI.AIHeroNavigationConfig
// 0x0018 (0x0018 - 0x0000)
struct FAIHeroNavigationConfig final
{
public:
	struct FNavLinkMoveConfigEntry                NavLinkMoveConfig;                                 // 0x0000(0x0010)(Edit, NativeAccessSpecifierPublic)
	TSubclassOf<class UNavigationQueryFilter>     OverrideNavFilerClass;                             // 0x0010(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct MarvelAI.AIDifficultyConfig
// 0x0008 (0x0008 - 0x0000)
struct FAIDifficultyConfig final
{
public:
	EAIDifficultyMode                             DifficultyMode;                                    // 0x0000(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         DifficultyLevel;                                   // 0x0004(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct MarvelAI.GameplayProgress
// 0x000C (0x000C - 0x0000)
struct FGameplayProgress final
{
public:
	uint8                                         StageProgress;                                     // 0x0000(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRange_FloatValue                      SubProgressRange;                                  // 0x0004(0x0008)(Edit, NoDestructor, NativeAccessSpecifierPublic)
};

// ScriptStruct MarvelAI.AbilityCheckInfo
// 0x0008 (0x0008 - 0x0000)
struct FAbilityCheckInfo final
{
public:
	float                                         SenseDistance;                                     // 0x0000(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         AvoidDistance;                                     // 0x0004(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct MarvelAI.AIAbilityCheckInfo
// 0x0190 (0x0190 - 0x0000)
struct FAIAbilityCheckInfo final
{
public:
	TMap<int32, struct FAbilityCheckInfo>         HeroCheckInfos;                                    // 0x0000(0x0050)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	TMap<int32, struct FAbilityCheckInfo>         SummonerCheckInfos;                                // 0x0050(0x0050)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	TMap<int32, struct FAbilityCheckInfo>         ProjectileCheckInfos;                              // 0x00A0(0x0050)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	TMap<int32, struct FAbilityCheckInfo>         ScopeCheckInfos;                                   // 0x00F0(0x0050)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	TMap<struct FGameplayTag, struct FAbilityCheckInfo> TagCheckInfos;                                     // 0x0140(0x0050)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
};

// ScriptStruct MarvelAI.AbilityCheckConfig
// 0x0198 (0x0198 - 0x0000)
struct FAbilityCheckConfig final
{
public:
	struct FAIAbilityCheckInfo                    LocalAbilityCheckInfo;                             // 0x0000(0x0190)(Edit, NativeAccessSpecifierPublic)
	class UAbilityCheckInfoAsset*                 GlobalAsset;                                       // 0x0190(0x0008)(Edit, ZeroConstructor, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct MarvelAI.AITagMatchParameter
// 0x0070 (0x0070 - 0x0000)
struct FAITagMatchParameter final
{
public:
	EGameplayContainerMatchType                   TagsToMatch;                                       // 0x0000(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  GameplayTags;                                      // 0x0008(0x0068)(Edit, NativeAccessSpecifierPublic)
};

// ScriptStruct MarvelAI.AIInputInfo
// 0x0010 (0x0010 - 0x0000)
struct FAIInputInfo final
{
public:
	bool                                          JustWait;                                          // 0x0000(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EAbilityInputBinds                            Key;                                               // 0x0001(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         AbilityID;                                         // 0x0004(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          AutoRelease;                                       // 0x0008(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          IsPress;                                           // 0x0009(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_A[0x2];                                        // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Duration;                                          // 0x000C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct MarvelAI.AIDifficultyAttributeConfig
// 0x0050 (0x0050 - 0x0000)
struct FAIDifficultyAttributeConfig final
{
public:
	TMap<EHeroRole, float>                        ValueMap;                                          // 0x0000(0x0050)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
};

// ScriptStruct MarvelAI.AILowHealthMarkConfig
// 0x000C (0x000C - 0x0000)
struct FAILowHealthMarkConfig final
{
public:
	float                                         HealthThreshold;                                   // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         LowHealthMarkDuration;                             // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         LowHealthMarkCooldown;                             // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct MarvelAI.MarvelAIDifficultyTable
// 0x01F8 (0x0218 - 0x0020)
struct FMarvelAIDifficultyTable final : public FTableRowBase
{
public:
	EAIDifficultyMode                             DifficultyMode;                                    // 0x0020(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         DifficultyLevel;                                   // 0x0024(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ForbiddenSkillLevel;                               // 0x0028(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAIDifficultyAttributeConfig           ApplyDamageRatio;                                  // 0x0030(0x0050)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FAIDifficultyAttributeConfig           TakingDamageRatio;                                 // 0x0080(0x0050)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FAIDifficultyAttributeConfig           ApplyTreatRatio;                                   // 0x00D0(0x0050)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FAIDifficultyAttributeConfig           TakingTreatRatio;                                  // 0x0120(0x0050)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FAIDifficultyAttributeConfig           MaxHealthRatio;                                    // 0x0170(0x0050)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	float                                         MoveWaitTime;                                      // 0x01C0(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         RandomJumpInterval;                                // 0x01C4(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ChangeToJump;                                      // 0x01C8(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MoveRefreshInterval;                               // 0x01CC(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MoveCloseRadiusRatio;                              // 0x01D0(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAILowHealthMarkConfig                 LowHealthMarkConfig;                               // 0x01D4(0x000C)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	class UAIDifficultyExtendAsset*               ExtendAsset;                                       // 0x01E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAIDynamicDifficultyAsset*              DynamicDifficultyAsset;                            // 0x01E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          IsSelected;                                        // 0x01F0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1F1[0x7];                                      // 0x01F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   AILevelText;                                       // 0x01F8(0x0018)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	float                                         AILABRequestFrequency;                             // 0x0210(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_214[0x4];                                      // 0x0214(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct MarvelAI.AIChangeHeroConfig
// 0x0040 (0x0040 - 0x0000)
struct FAIChangeHeroConfig final
{
public:
	class UCurveFloat*                            EnergyCurve;                                       // 0x0000(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                            KillDeathCurve;                                    // 0x0008(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ChangeHeroCD;                                      // 0x0010(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         DeathThreshold;                                    // 0x0014(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FAIRolePriority>                RolePriorityList;                                  // 0x0018(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	float                                         BuildBondPossibility;                              // 0x0028(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRange_FloatValue                      PreselectTimeRange;                                // 0x002C(0x0008)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FRange_FloatValue                      UpdateDelayRange;                                  // 0x0034(0x0008)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct MarvelAI.AIGameModeConfig
// 0x0080 (0x0080 - 0x0000)
struct FAIGameModeConfig final
{
public:
	bool                                          UseDefaultAvailableHero;                           // 0x0000(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSet<int32>                                   HeroIDs;                                           // 0x0008(0x0050)(Edit, NativeAccessSpecifierPublic)
	bool                                          UseDefaultLineupPriority;                          // 0x0058(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FAIRolePriority>                RolePriorityList;                                  // 0x0060(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	class UBehaviorTree*                          GameModeDefaultBTree;                              // 0x0070(0x0008)(Edit, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         DefaultRequestServerIndex;                         // 0x0078(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          AllowAIChangeHero;                                 // 0x007C(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_7D[0x3];                                       // 0x007D(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct MarvelAI.LevelStaticActorCache
// 0x0010 (0x0010 - 0x0000)
struct FLevelStaticActorCache final
{
public:
	TArray<class AActor*>                         LevelStaticActors;                                 // 0x0000(0x0010)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)
};

// ScriptStruct MarvelAI.DangerousTargetAbilityEvent
// 0x0018 (0x0018 - 0x0000)
struct FDangerousTargetAbilityEvent final
{
public:
	class AActor*                                 Source;                                            // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGameplayAbility*                       Ability;                                           // 0x0008(0x0008)(Edit, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EAbilitySenseNotify                           Notify;                                            // 0x0010(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct MarvelAI.MarvelAITeamEvent
// 0x0050 (0x0050 - 0x0000)
struct FMarvelAITeamEvent final
{
public:
	uint8                                         Pad_0[0x40];                                       // 0x0000(0x0040)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Broadcaster;                                       // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AActor*                                 Target;                                            // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct MarvelAI.MarvelAISprayTable
// 0x0020 (0x0040 - 0x0020)
struct FMarvelAISprayTable final : public FTableRowBase
{
public:
	int32                                         SprayID;                                           // 0x0020(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   SprayDesc;                                         // 0x0024(0x000C)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         SprayWeight;                                       // 0x0030(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDateTime                              SprayValidTime;                                    // 0x0038(0x0008)(Edit, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct MarvelAI.MarvelAIStandPointGroupTable
// 0x0048 (0x0068 - 0x0020)
struct FMarvelAIStandPointGroupTable final : public FTableRowBase
{
public:
	int32                                         GroupId;                                           // 0x0020(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 LevelName;                                         // 0x0028(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Desc;                                              // 0x0038(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FName>                           StandPointNames;                                   // 0x0048(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	EAssaultProgress                              AssaultProgress;                                   // 0x0058(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EEscortProgress                               EscortProgress;                                    // 0x0059(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5A[0x2];                                       // 0x005A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRange_FloatValue                      SubProgressRange;                                  // 0x005C(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct MarvelAI.MarvelAIStandPointTable
// 0x0050 (0x0070 - 0x0020)
struct FMarvelAIStandPointTable final : public FTableRowBase
{
public:
	class FString                                 Desc;                                              // 0x0020(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 LevelName;                                         // 0x0030(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         HeroID;                                            // 0x0040(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EMarvelStandPointShareType                    ShareType;                                         // 0x0044(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   BattleAreaName;                                    // 0x0048(0x000C)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EEscortProgress                               EscortProgress;                                    // 0x0054(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_55[0x3];                                       // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRange_FloatValue                      SubProgressRange;                                  // 0x0058(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	TArray<class FName>                           StandPointNames;                                   // 0x0060(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
};

// ScriptStruct MarvelAI.MarvelAITeamInfo
// 0x0240 (0x0240 - 0x0000)
struct alignas(0x08) FMarvelAITeamInfo final
{
public:
	uint8                                         Pad_0[0x240];                                      // 0x0000(0x0240)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct MarvelAI.AIDamageSourceInfo
// 0x0018 (0x0018 - 0x0000)
struct alignas(0x08) FAIDamageSourceInfo final
{
public:
	uint8                                         Pad_0[0x18];                                       // 0x0000(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct MarvelAI.MarvelFloatRange
// 0x0010 (0x0010 - 0x0000)
struct FMarvelFloatRange final
{
public:
	struct FFloatRange                            Range;                                             // 0x0000(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct MarvelAI.GameplayAITag
// 0x000C (0x000C - 0x0000)
struct FGameplayAITag final
{
public:
	struct FGameplayTag                           GameplayTag;                                       // 0x0000(0x000C)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct MarvelAI.AIHeroTag
// 0x0068 (0x0068 - 0x0000)
struct FAIHeroTag final
{
public:
	struct FGameplayTagContainer                  AIHeroTag;                                         // 0x0000(0x0068)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
};

// ScriptStruct MarvelAI.AIMoveTypeTag
// 0x0068 (0x0068 - 0x0000)
struct FAIMoveTypeTag final
{
public:
	struct FGameplayTagContainer                  MoveTypeTag;                                       // 0x0000(0x0068)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
};

// ScriptStruct MarvelAI.AIAgility
// 0x0020 (0x0020 - 0x0000)
struct FAIAgility final
{
public:
	struct FMarvelFloatRange                      Slow;                                              // 0x0000(0x0010)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FMarvelFloatRange                      MistakeRate;                                       // 0x0010(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
};

// ScriptStruct MarvelAI.HeroTagMatch
// 0x0070 (0x0070 - 0x0000)
struct FHeroTagMatch final
{
public:
	struct FAIHeroTag                             AIHeroTag;                                         // 0x0000(0x0068)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	EGameplayContainerMatchType                   TagMatchType;                                      // 0x0068(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct MarvelAI.HeroFilter
// 0x0080 (0x0080 - 0x0000)
struct FHeroFilter final
{
public:
	int32                                         Group;                                             // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Role;                                              // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         SurviveState;                                      // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHeroTagMatch                          HeroTagMatch;                                      // 0x0010(0x0070)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
};

// ScriptStruct MarvelAI.AISpawnParam
// 0x00A8 (0x00A8 - 0x0000)
struct FAISpawnParam final
{
public:
	int32                                         UID;                                               // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         HeroID;                                            // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EBattleSide                                   BattleSide;                                        // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 AIName;                                            // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EAIDifficultyMode                             DifficultyMode;                                    // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         DifficultyLevel;                                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                SpawnLocation;                                     // 0x0028(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                RebornLocation;                                    // 0x0040(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                               SpawnRotation;                                     // 0x0058(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FRotator                               RebornRotation;                                    // 0x0070(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	float                                         RebornTime;                                        // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_8C[0x4];                                       // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBehaviorTree*                          BehaviorTree;                                      // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          IsTrainingTarget;                                  // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          IsWoodPile;                                        // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9A[0x2];                                       // 0x009A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         SkinID;                                            // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         RecordUID;                                         // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          UsePreciseReachLogic;                              // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_A5[0x3];                                       // 0x00A5(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct MarvelAI.MarvelHeroAutoAITable
// 0x0010 (0x0030 - 0x0020)
struct FMarvelHeroAutoAITable final : public FTableRowBase
{
public:
	int32                                         HeroID;                                            // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBehaviorTree*                          BehaviorTree;                                      // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct MarvelAI.AIBattleConfig
// 0x0004 (0x0004 - 0x0000)
struct FAIBattleConfig final
{
public:
	float                                         KeepDistanceInBattle;                              // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct MarvelAI.MarvelHeroBehaviorTreeTable
// 0x00F0 (0x0110 - 0x0020)
struct FMarvelHeroBehaviorTreeTable final : public FTableRowBase
{
public:
	int32                                         HeroID;                                            // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAIHeroTag                             AIHeroType;                                        // 0x0028(0x0068)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	int32                                         NormalJumpAbilityID;                               // 0x0090(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_94[0x4];                                       // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<int32, int32>                            HeroSculptDataRemap;                               // 0x0098(0x0050)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FAIBattleConfig                        BattleConfig;                                      // 0x00E8(0x0004)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_EC[0x4];                                       // 0x00EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAIHeroNavigationConfig                NavigationConfig;                                  // 0x00F0(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	bool                                          bSelectable;                                       // 0x0108(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_109[0x7];                                      // 0x0109(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct MarvelAI.HeightToNavArea
// 0x0010 (0x0010 - 0x0000)
struct FHeightToNavArea final
{
public:
	float                                         Height;                                            // 0x0000(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UNavArea>                   NavAreaClass;                                      // 0x0008(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct MarvelAI.WallAttachCheckConfig
// 0x0020 (0x0020 - 0x0000)
struct FWallAttachCheckConfig final
{
public:
	float                                         MinHeightForWallAttach;                            // 0x0000(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaxAllowedHorizontalDist;                          // 0x0004(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         RaycastDistInterval;                               // 0x0008(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         HeightOffsetForBasePoints;                         // 0x000C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         HorizontalDistFactor;                              // 0x0010(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         AllowedDistRangeFactor;                            // 0x0014(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         AllowedDotDiffValue;                               // 0x0018(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bEnableDrawDebug;                                  // 0x001C(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bShouldOverrideWithRecastConfig;                   // 0x001D(0x0001)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1E[0x2];                                       // 0x001E(0x0002)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct MarvelAI.PathSelectorData
// 0x0050 (0x0050 - 0x0000)
struct FPathSelectorData final
{
public:
	TMap<TSoftObjectPtr<class AActor>, TSoftObjectPtr<class AStartWayPoint>> TargetToPathStart;                                 // 0x0000(0x0050)(Edit, UObjectWrapper, NativeAccessSpecifierPublic)
};

// ScriptStruct MarvelAI.TileRef
// 0x0008 (0x0008 - 0x0000)
struct FTileRef final
{
public:
	int32                                         X;                                                 // 0x0000(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Y;                                                 // 0x0004(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct MarvelAI.TileDebugDrawConfig
// 0x0008 (0x0008 - 0x0000)
struct FTileDebugDrawConfig final
{
public:
	uint8                                         bDrawEdgeData : 1;                                 // 0x0000(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bDrawEdgeLine : 1;                                 // 0x0000(0x0001)(BitIndex: 0x01, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bDrawEdgeSamplePoints : 1;                         // 0x0000(0x0001)(BitIndex: 0x02, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bDrawEdgeBackDir : 1;                              // 0x0000(0x0001)(BitIndex: 0x03, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bDrawEdgeBound : 1;                                // 0x0000(0x0001)(BitIndex: 0x04, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bDrawEdgeIndexInTile : 1;                          // 0x0000(0x0001)(BitIndex: 0x05, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bDrawPendingLinks : 1;                             // 0x0000(0x0001)(BitIndex: 0x06, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bDrawDebugForLinkCheck : 1;                        // 0x0000(0x0001)(BitIndex: 0x07, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_1[0x1];                                        // 0x0001(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	uint8                                         DrawDebugDepthPriority;                            // 0x0002(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3[0x1];                                        // 0x0003(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         DrawDebugLifeTime;                                 // 0x0004(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct MarvelAI.DebugEdge
// 0x0048 (0x0048 - 0x0000)
struct FDebugEdge final
{
public:
	struct FVector                                StartLocation;                                     // 0x0000(0x0018)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                EndLocation;                                       // 0x0018(0x0018)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                AnotherPoint;                                      // 0x0030(0x0018)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct MarvelAI.EdgeRef
// 0x000C (0x000C - 0x0000)
struct FEdgeRef final
{
public:
	struct FTileRef                               TileRef;                                           // 0x0000(0x0008)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint32                                        EdgeIndex;                                         // 0x0008(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
};

// ScriptStruct MarvelAI.NavLinkList
// 0x0010 (0x0010 - 0x0000)
struct FNavLinkList final
{
public:
	TArray<class ANavLinkProxy*>                  LinkListData;                                      // 0x0000(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// ScriptStruct MarvelAI.TileData
// 0x00D0 (0x00D0 - 0x0000)
struct FTileData final
{
public:
	struct FTileRef                               MyTileRef;                                         // 0x0000(0x0008)(NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FBox                                   MyBound;                                           // 0x0008(0x0038)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_40[0x10];                                      // 0x0040(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	struct FNavLinkList                           InnerTileLinks;                                    // 0x0050(0x0010)(Protected, NativeAccessSpecifierProtected)
	TMap<struct FTileRef, struct FNavLinkList>    CrossTileLinks;                                    // 0x0060(0x0050)(Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_B0[0x20];                                      // 0x00B0(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct MarvelAI.NavLinkGenerateConfig
// 0x0038 (0x0038 - 0x0000)
struct FNavLinkGenerateConfig final
{
public:
	struct FRange_FloatValue                      DropHeight;                                        // 0x0000(0x0008)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FRange_FloatValue                      JumpDistance_Horizontal;                           // 0x0008(0x0008)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	float                                         EdgeSampleDistance;                                // 0x0010(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         AdjustBackDistForRealLink;                         // 0x0014(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         HorizontalTraceExtraOffset;                        // 0x0018(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         VerticalTraceExtraOffset;                          // 0x001C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         KnockUpEffectRadius;                               // 0x0020(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MinKnockUpLinkHeight;                              // 0x0024(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         AgentRadius;                                       // 0x0028(0x0004)(Edit, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         AgentHeight;                                       // 0x002C(0x0004)(Edit, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_30[0x8];                                       // 0x0030(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct MarvelAI.StrategyPointGenerateConfig
// 0x0010 (0x0010 - 0x0000)
struct FStrategyPointGenerateConfig final
{
public:
	float                                         MaxHorizontalDistanceToShelter;                    // 0x0000(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaxShelterHeight;                                  // 0x0004(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         RequiredMinHeightAsShelter;                        // 0x0008(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SampleDistanceAlongZAxis;                          // 0x000C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct MarvelAI.QA_AIHeroConfig
// 0x0001 (0x0001 - 0x0000)
struct FQA_AIHeroConfig final
{
public:
	uint8                                         Pad_0[0x1];                                        // 0x0000(0x0001)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct MarvelAI.AIScoreModuleStruct
// 0x0018 (0x0018 - 0x0000)
struct FAIScoreModuleStruct final
{
public:
	class UAIScoreModule*                         ScoreModule;                                       // 0x0000(0x0008)(Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, PersistentInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UAIScoreModuleCondition*>        Conditions;                                        // 0x0008(0x0010)(Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, ContainsInstancedReference, UObjectWrapper, NativeAccessSpecifierPublic)
};

// ScriptStruct MarvelAI.ShelterPathFindConfig
// 0x0040 (0x0040 - 0x0000)
struct FShelterPathFindConfig final
{
public:
	bool                                          bFailedIfCanNotFindInterPoints;                    // 0x0000(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ConsideredPointMaxRange;                           // 0x0004(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         VisibleSampleDist;                                 // 0x0008(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         AcceptableRadius;                                  // 0x000C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         VisibleCheckOffsetAsAgentHeight;                   // 0x0010(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         VisibleCheckHeightOffset_Fixed;                    // 0x0014(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         AdditionalRangeRadius;                             // 0x0018(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         TraceCheckRange;                                   // 0x001C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFloatRange                            NextNodeFindRange;                                 // 0x0020(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         IterationNumLimit;                                 // 0x0030(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bEnableDebugDraw;                                  // 0x0034(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bDrawFullGraph;                                    // 0x0035(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_36[0x2];                                       // 0x0036(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         InvisibleCostFactor;                               // 0x0038(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DrawDebugDuration;                                 // 0x003C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct MarvelAI.SteeringWithWeight
// 0x0010 (0x0010 - 0x0000)
struct FSteeringWithWeight final
{
public:
	float                                         Weight;                                            // 0x0000(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USteeringBehavior*                      SteeringBehavior;                                  // 0x0008(0x0008)(Edit, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct MarvelAI.ShelterInstanceData
// 0x0008 (0x0008 - 0x0000)
struct FShelterInstanceData final
{
public:
	float                                         HeightValue;                                       // 0x0000(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct MarvelAI.NavDistToScore
// 0x0008 (0x0008 - 0x0000)
struct FNavDistToScore final
{
public:
	float                                         NavDist;                                           // 0x0000(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Score;                                             // 0x0004(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct MarvelAI.PathFindTestCase
// 0x0050 (0x0050 - 0x0000)
struct FPathFindTestCase final
{
public:
	struct FVector                                StartLocation;                                     // 0x0000(0x0018)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                TargetLocation;                                    // 0x0018(0x0018)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bShouldHavePath;                                   // 0x0030(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FVector>                        ResultPathPoints;                                  // 0x0038(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
	float                                         CachedPathLength;                                  // 0x0048(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct MarvelAI.PathTestCaseCategory
// 0x0030 (0x0030 - 0x0000)
struct FPathTestCaseCategory final
{
public:
	struct FFloatRange                            NavDistRange;                                      // 0x0000(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 CategoryName;                                      // 0x0010(0x0010)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<int32>                                 CaseList;                                          // 0x0020(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};

// ScriptStruct MarvelAI.WayPointPathWeight
// 0x0008 (0x0008 - 0x0000)
struct FWayPointPathWeight final
{
public:
	EWayPointMark                                 Mark;                                              // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Weight;                                            // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct MarvelAI.WayPointPathConfig
// 0x0010 (0x0010 - 0x0000)
struct FWayPointPathConfig final
{
public:
	TArray<struct FWayPointPathWeight>            WayPointPathWeights;                               // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
};

// ScriptStruct MarvelAI.WayPointToWeight
// 0x0038 (0x0038 - 0x0000)
struct FWayPointToWeight final
{
public:
	TWeakObjectPtr<class AWayPoint>               WayPoint;                                          // 0x0000(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Weight;                                            // 0x0008(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SafeFactor;                                        // 0x000C(0x0004)(Edit, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         RawSafeFactor;                                     // 0x0010(0x0004)(Edit, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FComponentReference>            FlyAreas;                                          // 0x0018(0x0010)(Edit, ZeroConstructor, DisableEditOnTemplate, NativeAccessSpecifierPublic)
	uint8                                         Pad_28[0x10];                                      // 0x0028(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct MarvelAI.WayPointPath
// 0x0048 (0x0048 - 0x0000)
struct FWayPointPath final
{
public:
	EWayPointMark                                 WayPointMark;                                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         WayPoints;                                         // 0x0008(0x0010)(ZeroConstructor, NativeAccessSpecifierPrivate)
	int32                                         WayPointIndex;                                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FVector>                        SubPathPoints;                                     // 0x0020(0x0010)(ZeroConstructor, NativeAccessSpecifierPrivate)
	int32                                         SubPathIndex;                                      // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                         RingStartIndex;                                    // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          HasRing;                                           // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_39[0xF];                                       // 0x0039(0x000F)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

}

