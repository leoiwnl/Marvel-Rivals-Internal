#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PyWidget_CommonReticle

#include "Basic.hpp"

#include "PyWidget_CommonReticle_classes.hpp"
#include "PyWidget_CommonReticle_parameters.hpp"


namespace SDK
{

// PythonFunction PyWidget_CommonReticle.PyReticleManager.SetCommonReticle
// (Native, Public, BlueprintCallable)
// Parameters:
// class UUserWidget*                      InReticle                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UPyReticleManager::SetCommonReticle(class UUserWidget* InReticle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyReticleManager", "SetCommonReticle");

	Params::PyReticleManager_SetCommonReticle Parms{};

	Parms.InReticle = InReticle;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyWidget_CommonReticle.PyReticleManager.SetSpecialReticle
// (Native, Public, BlueprintCallable)
// Parameters:
// class UUserWidget*                      InReticle                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UPyReticleManager::SetSpecialReticle(class UUserWidget* InReticle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyReticleManager", "SetSpecialReticle");

	Params::PyReticleManager_SetSpecialReticle Parms{};

	Parms.InReticle = InReticle;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyWidget_CommonReticle.PyReticleManager.UpdateViewCharacterNextFrame
// (Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                           InActor                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UPyReticleManager::UpdateViewCharacterNextFrame(class AActor* InActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyReticleManager", "UpdateViewCharacterNextFrame");

	Params::PyReticleManager_UpdateViewCharacterNextFrame Parms{};

	Parms.InActor = InActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyWidget_CommonReticle.PyReticleManager.OverwriteReticleStyleByUserSetting
// (Native, Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FReticleStyle                    InReticleStyle                                         (Parm, NoDestructor)
// struct FReticleStyle                    ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor)

struct FReticleStyle UPyReticleManager::OverwriteReticleStyleByUserSetting(const struct FReticleStyle& InReticleStyle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyReticleManager", "OverwriteReticleStyleByUserSetting");

	Params::PyReticleManager_OverwriteReticleStyleByUserSetting Parms{};

	Parms.InReticleStyle = std::move(InReticleStyle);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// PythonFunction PyWidget_CommonReticle.PyReticleManager.OnShapeChanged
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   ShapeID                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPyReticleManager::OnShapeChanged(int32 ShapeID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyReticleManager", "OnShapeChanged");

	Params::PyReticleManager_OnShapeChanged Parms{};

	Parms.ShapeID = ShapeID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyWidget_CommonReticle.PyWidget_CommonReticle.Construct
// (BlueprintCosmetic, Native, Event, Protected, BlueprintCallable, BlueprintEvent)

void UPyWidget_CommonReticle::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyWidget_CommonReticle", "Construct");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyWidget_CommonReticle.PyWidget_CommonReticle.Reset
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent)

void UPyWidget_CommonReticle::Reset()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyWidget_CommonReticle", "Reset");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyWidget_CommonReticle.PyWidget_CommonReticle.SetSpread
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   InDistance                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   InSpread                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   InRadius                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPyWidget_CommonReticle::SetSpread(float InDistance, float InSpread, float InRadius)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyWidget_CommonReticle", "SetSpread");

	Params::PyWidget_CommonReticle_SetSpread Parms{};

	Parms.InDistance = InDistance;
	Parms.InSpread = InSpread;
	Parms.InRadius = InRadius;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyWidget_CommonReticle.PyWidget_CommonReticle.SetAccuType
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// ECommonReticleType                      InType                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPyWidget_CommonReticle::SetAccuType(ECommonReticleType InType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyWidget_CommonReticle", "SetAccuType");

	Params::PyWidget_CommonReticle_SetAccuType Parms{};

	Parms.InType = InType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyWidget_CommonReticle.PyWidget_CommonReticle.SetAccumulateType
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// ECommonReticleType                      InType                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPyWidget_CommonReticle::SetAccumulateType(ECommonReticleType InType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyWidget_CommonReticle", "SetAccumulateType");

	Params::PyWidget_CommonReticle_SetAccumulateType Parms{};

	Parms.InType = InType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyWidget_CommonReticle.PyWidget_CommonReticle.SetAccumulatingPercent
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsAccumulating                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   InCurPercent                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Speed                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsShrinkAccumulate                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPyWidget_CommonReticle::SetAccumulatingPercent(bool IsAccumulating, float InCurPercent, float Speed, bool IsShrinkAccumulate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyWidget_CommonReticle", "SetAccumulatingPercent");

	Params::PyWidget_CommonReticle_SetAccumulatingPercent Parms{};

	Parms.IsAccumulating = IsAccumulating;
	Parms.InCurPercent = InCurPercent;
	Parms.Speed = Speed;
	Parms.IsShrinkAccumulate = IsShrinkAccumulate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyWidget_CommonReticle.PyWidget_CommonReticle.OnCharJump
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void UPyWidget_CommonReticle::OnCharJump()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyWidget_CommonReticle", "OnCharJump");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyWidget_CommonReticle.PyWidget_CommonReticle.OnCharReloadBegin
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent)

void UPyWidget_CommonReticle::OnCharReloadBegin()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyWidget_CommonReticle", "OnCharReloadBegin");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyWidget_CommonReticle.PyWidget_CommonReticle.OnCharReloadEnd
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent)

void UPyWidget_CommonReticle::OnCharReloadEnd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyWidget_CommonReticle", "OnCharReloadEnd");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyWidget_CommonReticle.PyWidget_CommonReticle.OnHitTarget
// (Native, Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           InSourceAvatar                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class AActor*                           InTargetAvatar                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FAttributeModifierHandle         ParameterHandle                                        (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)

void UPyWidget_CommonReticle::OnHitTarget(class AActor* InSourceAvatar, class AActor* InTargetAvatar, const struct FAttributeModifierHandle& ParameterHandle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyWidget_CommonReticle", "OnHitTarget");

	Params::PyWidget_CommonReticle_OnHitTarget Parms{};

	Parms.InSourceAvatar = InSourceAvatar;
	Parms.InTargetAvatar = InTargetAvatar;
	Parms.ParameterHandle = std::move(ParameterHandle);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}

}

