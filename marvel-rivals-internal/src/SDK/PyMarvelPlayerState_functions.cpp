#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PyMarvelPlayerState

#include "Basic.hpp"

#include "PyMarvelPlayerState_classes.hpp"
#include "PyMarvelPlayerState_parameters.hpp"


namespace SDK
{

// PythonFunction PyMarvelPlayerState.PyMarvelPlayerState.ReceiveBeginPlay
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent)

void APyMarvelPlayerState::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyMarvelPlayerState", "ReceiveBeginPlay");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyMarvelPlayerState.PyMarvelPlayerState.ReceiveEndPlay
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// EEndPlayReason                          EndPlayReason                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APyMarvelPlayerState::ReceiveEndPlay(EEndPlayReason EndPlayReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyMarvelPlayerState", "ReceiveEndPlay");

	Params::PyMarvelPlayerState_ReceiveEndPlay Parms{};

	Parms.EndPlayReason = EndPlayReason;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyMarvelPlayerState.PyMarvelPlayerState.K2_UpdateHeroChoosable
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent)

void APyMarvelPlayerState::K2_UpdateHeroChoosable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyMarvelPlayerState", "K2_UpdateHeroChoosable");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyMarvelPlayerState.PyMarvelPlayerState.OnRep_IsInBirthbase
// (Native, Public, BlueprintCallable)

void APyMarvelPlayerState::OnRep_IsInBirthbase()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyMarvelPlayerState", "OnRep_IsInBirthbase");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyMarvelPlayerState.PyMarvelPlayerState.OnRep_RecordUID
// (Native, Public, BlueprintCallable)

void APyMarvelPlayerState::OnRep_RecordUID()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyMarvelPlayerState", "OnRep_RecordUID");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyMarvelPlayerState.PyMarvelPlayerState.OnRep_PreviewHeroID
// (Native, Public, BlueprintCallable)

void APyMarvelPlayerState::OnRep_PreviewHeroID()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyMarvelPlayerState", "OnRep_PreviewHeroID");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyMarvelPlayerState.PyMarvelPlayerState.OnRep_EquipSkinID
// (Native, Public, BlueprintCallable)

void APyMarvelPlayerState::OnRep_EquipSkinID()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyMarvelPlayerState", "OnRep_EquipSkinID");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyMarvelPlayerState.PyMarvelPlayerState.OnRep_ReticleSetting
// (Native, Public, BlueprintCallable)

void APyMarvelPlayerState::OnRep_ReticleSetting()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyMarvelPlayerState", "OnRep_ReticleSetting");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyMarvelPlayerState.PyMarvelPlayerState.ServerChangeReticleSetting
// (Net, NetReliable, Native, Public, NetServer, BlueprintCallable)
// Parameters:
// class FString                           config_str                                             (Parm, ZeroConstructor, HasGetValueTypeHash)

void APyMarvelPlayerState::ServerChangeReticleSetting(const class FString& config_str)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyMarvelPlayerState", "ServerChangeReticleSetting");

	Params::PyMarvelPlayerState_ServerChangeReticleSetting Parms{};

	Parms.config_str = std::move(config_str);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyMarvelPlayerState.PyMarvelPlayerState.ServerChangePreviewID
// (Net, NetReliable, Native, Public, NetServer, BlueprintCallable)
// Parameters:
// int32                                   hero_id                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APyMarvelPlayerState::ServerChangePreviewID(int32 hero_id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyMarvelPlayerState", "ServerChangePreviewID");

	Params::PyMarvelPlayerState_ServerChangePreviewID Parms{};

	Parms.hero_id = hero_id;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyMarvelPlayerState.PyMarvelPlayerState.ServerChangeEquipSkinID
// (Net, NetReliable, Native, Public, NetServer, BlueprintCallable)
// Parameters:
// int32                                   skin_id                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APyMarvelPlayerState::ServerChangeEquipSkinID(int32 skin_id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyMarvelPlayerState", "ServerChangeEquipSkinID");

	Params::PyMarvelPlayerState_ServerChangeEquipSkinID Parms{};

	Parms.skin_id = skin_id;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyMarvelPlayerState.PyMarvelPlayerState.ServerChangeBondSuggestionHeroIDList
// (Net, NetReliable, Native, Public, NetServer, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<int32>                           hero_id_list                                           (ConstParm, Parm, OutParm, ReferenceParm)

void APyMarvelPlayerState::ServerChangeBondSuggestionHeroIDList(const TArray<int32>& hero_id_list)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyMarvelPlayerState", "ServerChangeBondSuggestionHeroIDList");

	Params::PyMarvelPlayerState_ServerChangeBondSuggestionHeroIDList Parms{};

	Parms.hero_id_list = std::move(hero_id_list);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyMarvelPlayerState.PyMarvelPlayerState.NetMulitcast_BondSuggestionHeroIDList
// (Net, Native, NetMulticast, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<int32>                           hero_id_list                                           (ConstParm, Parm, OutParm, ReferenceParm)

void APyMarvelPlayerState::NetMulitcast_BondSuggestionHeroIDList(const TArray<int32>& hero_id_list)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyMarvelPlayerState", "NetMulitcast_BondSuggestionHeroIDList");

	Params::PyMarvelPlayerState_NetMulitcast_BondSuggestionHeroIDList Parms{};

	Parms.hero_id_list = std::move(hero_id_list);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyMarvelPlayerState.PyMarvelPlayerState.ReqUpvoteOther
// (Net, NetReliable, Native, Public, NetServer, BlueprintCallable)
// Parameters:
// int32                                   player_uid                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APyMarvelPlayerState::ReqUpvoteOther(int32 player_uid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyMarvelPlayerState", "ReqUpvoteOther");

	Params::PyMarvelPlayerState_ReqUpvoteOther Parms{};

	Parms.player_uid = player_uid;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyMarvelPlayerState.PyMarvelPlayerState.SetOnlineStatus
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// EOnlineStatus                           InStatus                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APyMarvelPlayerState::SetOnlineStatus(EOnlineStatus InStatus)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyMarvelPlayerState", "SetOnlineStatus");

	Params::PyMarvelPlayerState_SetOnlineStatus Parms{};

	Parms.InStatus = InStatus;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyMarvelPlayerState.PyMarvelPlayerState.SetRespawnTime
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   respawn_time                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APyMarvelPlayerState::SetRespawnTime(float respawn_time)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyMarvelPlayerState", "SetRespawnTime");

	Params::PyMarvelPlayerState_SetRespawnTime Parms{};

	Parms.respawn_time = respawn_time;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyMarvelPlayerState.PyMarvelPlayerState.InterruptLevelRespawn
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent)

void APyMarvelPlayerState::InterruptLevelRespawn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyMarvelPlayerState", "InterruptLevelRespawn");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyMarvelPlayerState.PyMarvelPlayerState.MulticastResetDelayRespawnEvent
// (Net, NetReliable, Native, NetMulticast, Public, BlueprintCallable)
// Parameters:
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APyMarvelPlayerState::MulticastResetDelayRespawnEvent(float Delay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyMarvelPlayerState", "MulticastResetDelayRespawnEvent");

	Params::PyMarvelPlayerState_MulticastResetDelayRespawnEvent Parms{};

	Parms.Delay = Delay;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyMarvelPlayerState.PyMarvelPlayerState.OnRespawnTimerUpdate
// (Native, Public, BlueprintCallable)

void APyMarvelPlayerState::OnRespawnTimerUpdate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyMarvelPlayerState", "OnRespawnTimerUpdate");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyMarvelPlayerState.PyMarvelPlayerState.DoRespawnSelf
// (Native, Public, BlueprintCallable)

void APyMarvelPlayerState::DoRespawnSelf()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyMarvelPlayerState", "DoRespawnSelf");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyMarvelPlayerState.PyMarvelPlayerState.OnRep_IsScoreBoard
// (Native, Public, BlueprintCallable)

void APyMarvelPlayerState::OnRep_IsScoreBoard()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyMarvelPlayerState", "OnRep_IsScoreBoard");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyMarvelPlayerState.PyMarvelPlayerState.SetControlState
// (Net, Native, Public, NetServer, BlueprintCallable)
// Parameters:
// int32                                   State_0                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APyMarvelPlayerState::SetControlState(int32 State_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyMarvelPlayerState", "SetControlState");

	Params::PyMarvelPlayerState_SetControlState Parms{};

	Parms.State_0 = State_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyMarvelPlayerState.PyMarvelPlayerState.OnRep_MultiKillCount
// (Native, Public, BlueprintCallable)

void APyMarvelPlayerState::OnRep_MultiKillCount()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyMarvelPlayerState", "OnRep_MultiKillCount");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyMarvelPlayerState.PyMarvelPlayerState.InActiveInRank
// (Net, NetReliable, Native, Public, NetServer, BlueprintCallable)

void APyMarvelPlayerState::InActiveInRank()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyMarvelPlayerState", "InActiveInRank");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyMarvelPlayerState.PyMarvelPlayerState.ServerSetHasInactive
// (Net, NetReliable, Native, Public, NetServer, BlueprintCallable)
// Parameters:
// bool                                    HasInactive_0                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APyMarvelPlayerState::ServerSetHasInactive(bool HasInactive_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyMarvelPlayerState", "ServerSetHasInactive");

	Params::PyMarvelPlayerState_ServerSetHasInactive Parms{};

	Parms.HasInactive_0 = HasInactive_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyMarvelPlayerState.PyMarvelPlayerState.RuncClientFunc
// (Net, NetReliable, Native, Public, HasOutParams, NetClient, BlueprintCallable)
// Parameters:
// class FString                           func_name                                              (Parm, ZeroConstructor, HasGetValueTypeHash)
// TArray<uint8>                           argsStr                                                (ConstParm, Parm, OutParm, ReferenceParm)

void APyMarvelPlayerState::RuncClientFunc(const class FString& func_name, const TArray<uint8>& argsStr)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyMarvelPlayerState", "RuncClientFunc");

	Params::PyMarvelPlayerState_RuncClientFunc Parms{};

	Parms.func_name = std::move(func_name);
	Parms.argsStr = std::move(argsStr);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyMarvelPlayerState.PyMarvelPlayerState.ServerReportClientInactive
// (Net, NetReliable, Native, Public, NetServer, BlueprintCallable)
// Parameters:
// bool                                    is_inactive                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   inactive_type                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APyMarvelPlayerState::ServerReportClientInactive(bool is_inactive, int32 inactive_type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyMarvelPlayerState", "ServerReportClientInactive");

	Params::PyMarvelPlayerState_ServerReportClientInactive Parms{};

	Parms.is_inactive = is_inactive;
	Parms.inactive_type = inactive_type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyMarvelPlayerState.PyMarvelPlayerState.NetMulitcast_ChangeKillingSpreeCount
// (Net, NetReliable, Native, NetMulticast, Public, BlueprintCallable)
// Parameters:
// int32                                   kill_count                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APyMarvelPlayerState::NetMulitcast_ChangeKillingSpreeCount(int32 kill_count)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyMarvelPlayerState", "NetMulitcast_ChangeKillingSpreeCount");

	Params::PyMarvelPlayerState_NetMulitcast_ChangeKillingSpreeCount Parms{};

	Parms.kill_count = kill_count;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyMarvelPlayerState.PyMarvelPlayerState.OnRep_SurvivalKillCount
// (Native, Public, BlueprintCallable)

void APyMarvelPlayerState::OnRep_SurvivalKillCount()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyMarvelPlayerState", "OnRep_SurvivalKillCount");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyMarvelPlayerState.PyMarvelPlayerState.ServerChangeBanPickHeroID
// (Net, NetReliable, Native, Public, NetServer, BlueprintCallable)
// Parameters:
// int32                                   hero_id                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APyMarvelPlayerState::ServerChangeBanPickHeroID(int32 hero_id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyMarvelPlayerState", "ServerChangeBanPickHeroID");

	Params::PyMarvelPlayerState_ServerChangeBanPickHeroID Parms{};

	Parms.hero_id = hero_id;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyMarvelPlayerState.PyMarvelPlayerState.OnRep_BanPickHeroID
// (Native, Public, BlueprintCallable)

void APyMarvelPlayerState::OnRep_BanPickHeroID()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyMarvelPlayerState", "OnRep_BanPickHeroID");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyMarvelPlayerState.PyMarvelPlayerState.ServerChangeBanPickSuggestionHeroID
// (Net, NetReliable, Native, Public, NetServer, BlueprintCallable)
// Parameters:
// int32                                   hero_id                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APyMarvelPlayerState::ServerChangeBanPickSuggestionHeroID(int32 hero_id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyMarvelPlayerState", "ServerChangeBanPickSuggestionHeroID");

	Params::PyMarvelPlayerState_ServerChangeBanPickSuggestionHeroID Parms{};

	Parms.hero_id = hero_id;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyMarvelPlayerState.PyMarvelPlayerState.OnRep_SuggestBanPickHeroID
// (Native, Public, BlueprintCallable)

void APyMarvelPlayerState::OnRep_SuggestBanPickHeroID()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyMarvelPlayerState", "OnRep_SuggestBanPickHeroID");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyMarvelPlayerState.PyMarvelPlayerState.ServerChangeSuggestionRole
// (Net, NetReliable, Native, Public, NetServer, BlueprintCallable)
// Parameters:
// EHeroRole                               HeroRole                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APyMarvelPlayerState::ServerChangeSuggestionRole(EHeroRole HeroRole)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyMarvelPlayerState", "ServerChangeSuggestionRole");

	Params::PyMarvelPlayerState_ServerChangeSuggestionRole Parms{};

	Parms.HeroRole = HeroRole;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyMarvelPlayerState.PyMarvelPlayerState.OnRep_SuggestHeroRole
// (Native, Public, BlueprintCallable)

void APyMarvelPlayerState::OnRep_SuggestHeroRole()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyMarvelPlayerState", "OnRep_SuggestHeroRole");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyMarvelPlayerState.PyMarvelPlayerState.OnRep_IsCaptain
// (Native, Public, BlueprintCallable)

void APyMarvelPlayerState::OnRep_IsCaptain()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyMarvelPlayerState", "OnRep_IsCaptain");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyMarvelPlayerState.PyMarvelPlayerState.OnRep_IsCoach
// (Native, Public, BlueprintCallable)

void APyMarvelPlayerState::OnRep_IsCoach()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyMarvelPlayerState", "OnRep_IsCoach");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyMarvelPlayerState.PyMarvelPlayerState.NotifyClientCloseSelectHero
// (Net, NetReliable, Native, Public, NetClient, BlueprintCallable)
// Parameters:
// int32                                   SelectedHeroID_0                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   RoundIndex                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APyMarvelPlayerState::NotifyClientCloseSelectHero(int32 SelectedHeroID_0, int32 RoundIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyMarvelPlayerState", "NotifyClientCloseSelectHero");

	Params::PyMarvelPlayerState_NotifyClientCloseSelectHero Parms{};

	Parms.SelectedHeroID_0 = SelectedHeroID_0;
	Parms.RoundIndex = RoundIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyMarvelPlayerState.PyMarvelPlayerState.RequestTaskDatabaseData
// (Net, NetReliable, Native, Public, NetServer, BlueprintCallable)
// Parameters:
// class FString                           task_json                                              (Parm, ZeroConstructor, HasGetValueTypeHash)

void APyMarvelPlayerState::RequestTaskDatabaseData(const class FString& task_json)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyMarvelPlayerState", "RequestTaskDatabaseData");

	Params::PyMarvelPlayerState_RequestTaskDatabaseData Parms{};

	Parms.task_json = std::move(task_json);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyMarvelPlayerState.PyMarvelPlayerState.ResponseTaskDatabaseData
// (Net, NetReliable, Native, Public, NetClient, BlueprintCallable)
// Parameters:
// class FString                           data_str                                               (Parm, ZeroConstructor, HasGetValueTypeHash)

void APyMarvelPlayerState::ResponseTaskDatabaseData(const class FString& data_str)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyMarvelPlayerState", "ResponseTaskDatabaseData");

	Params::PyMarvelPlayerState_ResponseTaskDatabaseData Parms{};

	Parms.data_str = std::move(data_str);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyMarvelPlayerState.PyMarvelPlayerState.RequestDatabaseData
// (Net, NetReliable, Native, Public, NetServer, BlueprintCallable)

void APyMarvelPlayerState::RequestDatabaseData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyMarvelPlayerState", "RequestDatabaseData");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyMarvelPlayerState.PyMarvelPlayerState.ResponseDatabaseData
// (Net, NetReliable, Native, Public, NetClient, BlueprintCallable)
// Parameters:
// class FString                           data_str                                               (Parm, ZeroConstructor, HasGetValueTypeHash)

void APyMarvelPlayerState::ResponseDatabaseData(const class FString& data_str)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyMarvelPlayerState", "ResponseDatabaseData");

	Params::PyMarvelPlayerState_ResponseDatabaseData Parms{};

	Parms.data_str = std::move(data_str);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyMarvelPlayerState.PyMarvelPlayerState.req_client_profile_data
// (Net, Native, Public, NetClient, BlueprintCallable)
// Parameters:
// int32                                   record_index                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APyMarvelPlayerState::req_client_profile_data(int32 record_index)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyMarvelPlayerState", "req_client_profile_data");

	Params::PyMarvelPlayerState_req_client_profile_data Parms{};

	Parms.record_index = record_index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyMarvelPlayerState.PyMarvelPlayerState.resp_client_profile_data
// (Net, Native, Public, NetServer, BlueprintCallable)
// Parameters:
// int32                                   fps                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Ping                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   record_index                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   out_lost                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   in_lost                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APyMarvelPlayerState::resp_client_profile_data(int32 fps, int32 Ping, int32 record_index, int32 out_lost, int32 in_lost)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyMarvelPlayerState", "resp_client_profile_data");

	Params::PyMarvelPlayerState_resp_client_profile_data Parms{};

	Parms.fps = fps;
	Parms.Ping = Ping;
	Parms.record_index = record_index;
	Parms.out_lost = out_lost;
	Parms.in_lost = in_lost;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyMarvelPlayerState.PyMarvelPlayerState.RespawnZoneTips
// (Net, NetReliable, Native, Public, NetClient, BlueprintCallable)

void APyMarvelPlayerState::RespawnZoneTips()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyMarvelPlayerState", "RespawnZoneTips");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}

}

