#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PyAbility_103551

#include "Basic.hpp"

#include "PyAbility_103551_classes.hpp"
#include "PyAbility_103551_parameters.hpp"


namespace SDK
{

// PythonFunction PyAbility_103551.PyCue_AbilityLoop_103551.ResetDefault
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent)

void APyCue_AbilityLoop_103551::ResetDefault()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyCue_AbilityLoop_103551", "ResetDefault");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyAbility_103551.PyCue_AbilityLoop_103551.WhileActive
// (Native, Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           MyTarget                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FGameplayCueParameters           Parameters                                             (ConstParm, Parm, OutParm, ReferenceParm)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool APyCue_AbilityLoop_103551::WhileActive(class AActor* MyTarget, const struct FGameplayCueParameters& Parameters)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyCue_AbilityLoop_103551", "WhileActive");

	Params::PyCue_AbilityLoop_103551_WhileActive Parms{};

	Parms.MyTarget = MyTarget;
	Parms.Parameters = std::move(Parameters);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// PythonFunction PyAbility_103551.PyCue_AbilityLoop_103551.OnRemove
// (Native, Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           MyTarget                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FGameplayCueParameters           Parameters                                             (ConstParm, Parm, OutParm, ReferenceParm)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool APyCue_AbilityLoop_103551::OnRemove(class AActor* MyTarget, const struct FGameplayCueParameters& Parameters)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyCue_AbilityLoop_103551", "OnRemove");

	Params::PyCue_AbilityLoop_103551_OnRemove Parms{};

	Parms.MyTarget = MyTarget;
	Parms.Parameters = std::move(Parameters);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// PythonFunction PyAbility_103551.PyCue_AbilityLoop_103551.K2_OnRecycle
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent)

void APyCue_AbilityLoop_103551::K2_OnRecycle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyCue_AbilityLoop_103551", "K2_OnRecycle");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyAbility_103551.PyCue_AbilityLoop_103551.OnProjectileSpawned
// (Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                           SpawnActor                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void APyCue_AbilityLoop_103551::OnProjectileSpawned(class AActor* SpawnActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyCue_AbilityLoop_103551", "OnProjectileSpawned");

	Params::PyCue_AbilityLoop_103551_OnProjectileSpawned Parms{};

	Parms.SpawnActor = SpawnActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyAbility_103551.PyCue_AbilityLoop_103551.OnProjectileHit
// (Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FHitResult                       InHitResult                                            (ConstParm, Parm, OutParm, ReferenceParm)

void APyCue_AbilityLoop_103551::OnProjectileHit(const struct FHitResult& InHitResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyCue_AbilityLoop_103551", "OnProjectileHit");

	Params::PyCue_AbilityLoop_103551_OnProjectileHit Parms{};

	Parms.InHitResult = std::move(InHitResult);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyAbility_103551.PyCue_AbilityLoop_103551.OnProjectileFlyOverMaxDistance
// (Native, Public, BlueprintCallable)

void APyCue_AbilityLoop_103551::OnProjectileFlyOverMaxDistance()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyCue_AbilityLoop_103551", "OnProjectileFlyOverMaxDistance");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyAbility_103551.PyCue_AbilityLoop_103551.OnAbilityState103641Changed
// (Native, Public, BlueprintCallable)
// Parameters:
// EAbilityState103641                     InAbilityState                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APyCue_AbilityLoop_103551::OnAbilityState103641Changed(EAbilityState103641 InAbilityState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyCue_AbilityLoop_103551", "OnAbilityState103641Changed");

	Params::PyCue_AbilityLoop_103551_OnAbilityState103641Changed Parms{};

	Parms.InAbilityState = InAbilityState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyAbility_103551.PyCue_AbilityLoop_103551.OSwingingnStart
// (Native, Public, BlueprintCallable)

void APyCue_AbilityLoop_103551::OSwingingnStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyCue_AbilityLoop_103551", "OSwingingnStart");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyAbility_103551.PyCue_AbilityLoop_103551.StartIntoSwingingLoopState
// (Native, Public, BlueprintCallable)

void APyCue_AbilityLoop_103551::StartIntoSwingingLoopState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyCue_AbilityLoop_103551", "StartIntoSwingingLoopState");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}

}

