#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WindowModeAndResolutionLogic

#include "Basic.hpp"

#include "Marvel_classes.hpp"


namespace SDK
{

// PythonClass WindowModeAndResolutionLogic.UISettingEntryMonitorSelectionOptionsGenerator
// 0x0000 (0x0030 - 0x0030)
class UUISettingEntryMonitorSelectionOptionsGenerator final : public UUISettingEntryOptionsGenerator
{
public:
	TMap<int32, class FText> BP_Gen(class UObject* Obj, const class FString& setting_key, const TMap<int32, class FText>& OPTIONS);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"UISettingEntryMonitorSelectionOptionsGenerator">();
	}
	static class UUISettingEntryMonitorSelectionOptionsGenerator* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUISettingEntryMonitorSelectionOptionsGenerator>();
	}
};

// PythonClass WindowModeAndResolutionLogic.UISettingEntryWindowModeOptionsGenerator
// 0x0000 (0x0030 - 0x0030)
class UUISettingEntryWindowModeOptionsGenerator final : public UUISettingEntryOptionsGenerator
{
public:
	TMap<int32, class FText> BP_Gen(class UObject* Obj, const class FString& setting_key, const TMap<int32, class FText>& OPTIONS);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"UISettingEntryWindowModeOptionsGenerator">();
	}
	static class UUISettingEntryWindowModeOptionsGenerator* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUISettingEntryWindowModeOptionsGenerator>();
	}
};

// PythonClass WindowModeAndResolutionLogic.UISettingEntryMonitorSelection
// 0x0000 (0x0030 - 0x0030)
class UUISettingEntryMonitorSelection final : public UUISettingEntrySettingHandler
{
public:
	void BP_OnApply(class UObject* Obj, const class FString& setting_key, const TMap<class FString, class FString>& P, const TMap<int32, class FText>& OPTIONS, float Value);
	float BP_GetCurrentValue(class UObject* Obj, const class FString& setting_key, const TMap<class FString, class FString>& P, const TMap<int32, class FText>& O);
	TMap<class FString, int32> BP_OnChanged(class UObject* Obj, const class FString& setting_key, const TMap<class FString, class FString>& Params_0, const TMap<int32, class FText>& OPTIONS, float Value, const TMap<class FString, int32>& Tags);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"UISettingEntryMonitorSelection">();
	}
	static class UUISettingEntryMonitorSelection* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUISettingEntryMonitorSelection>();
	}
};

// PythonClass WindowModeAndResolutionLogic.UISettingEntryWindowModeHandler
// 0x0000 (0x0030 - 0x0030)
class UUISettingEntryWindowModeHandler final : public UUISettingEntrySettingHandler
{
public:
	static void HardcodeSyncFullWindowMode();
	static TMap<class FString, int32> HardcodeSyncTargetMoniter();

	void BP_OnApply(class UObject* Obj, const class FString& setting_key, const TMap<class FString, class FString>& P, const TMap<int32, class FText>& OPTIONS, float Value);
	float BP_GetCurrentValue(class UObject* Obj, const class FString& setting_key, const TMap<class FString, class FString>& P, const TMap<int32, class FText>& O);
	TMap<class FString, int32> BP_OnChanged(class UObject* Obj, const class FString& setting_key, const TMap<class FString, class FString>& Params_0, const TMap<int32, class FText>& OPTIONS, float Value, const TMap<class FString, int32>& Tags);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"UISettingEntryWindowModeHandler">();
	}
	static class UUISettingEntryWindowModeHandler* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUISettingEntryWindowModeHandler>();
	}
};

// PythonClass WindowModeAndResolutionLogic.UISettingEntryResolutionAspectOptionsGenerator
// 0x0000 (0x0030 - 0x0030)
class UUISettingEntryResolutionAspectOptionsGenerator final : public UUISettingEntryOptionsGenerator
{
public:
	TMap<int32, class FText> BP_Gen(class UObject* Obj, const class FString& setting_key, const TMap<int32, class FText>& OPTIONS);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"UISettingEntryResolutionAspectOptionsGenerator">();
	}
	static class UUISettingEntryResolutionAspectOptionsGenerator* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUISettingEntryResolutionAspectOptionsGenerator>();
	}
};

// PythonClass WindowModeAndResolutionLogic.UISettingEntryResolutionAspectHandler
// 0x0000 (0x0030 - 0x0030)
class UUISettingEntryResolutionAspectHandler final : public UUISettingEntrySettingHandler
{
public:
	float BP_GetCurrentValue(class UObject* Obj, const class FString& setting_key, const TMap<class FString, class FString>& Params_0, const TMap<int32, class FText>& OPTIONS);
	TMap<class FString, int32> BP_OnChanged(class UObject* Obj, const class FString& setting_key, const TMap<class FString, class FString>& Params_0, const TMap<int32, class FText>& OPTIONS, float Value, const TMap<class FString, int32>& Tags);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"UISettingEntryResolutionAspectHandler">();
	}
	static class UUISettingEntryResolutionAspectHandler* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUISettingEntryResolutionAspectHandler>();
	}
};

// PythonClass WindowModeAndResolutionLogic.UISettingEntryResolutionHandler
// 0x0000 (0x0030 - 0x0030)
class UUISettingEntryResolutionHandler final : public UUISettingEntrySettingHandler
{
public:
	void BP_OnApply(class UObject* Obj, const class FString& setting_key, const TMap<class FString, class FString>& P, const TMap<int32, class FText>& OPTIONS, float Value);
	float BP_GetCurrentValue(class UObject* Obj, const class FString& setting_key, const TMap<class FString, class FString>& Params_0, const TMap<int32, class FText>& OPTIONS);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"UISettingEntryResolutionHandler">();
	}
	static class UUISettingEntryResolutionHandler* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUISettingEntryResolutionHandler>();
	}
};

// PythonClass WindowModeAndResolutionLogic.UISettingEntryResolutionOptionsGenerator
// 0x0000 (0x0030 - 0x0030)
class UUISettingEntryResolutionOptionsGenerator final : public UUISettingEntryOptionsGenerator
{
public:
	TMap<int32, class FText> BP_Gen(class UObject* Obj, const class FString& setting_key, const TMap<int32, class FText>& OPTIONS);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"UISettingEntryResolutionOptionsGenerator">();
	}
	static class UUISettingEntryResolutionOptionsGenerator* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUISettingEntryResolutionOptionsGenerator>();
	}
};

}

