#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PyAISelectTargetLogicBase

#include "Basic.hpp"

#include "PyAISelectTargetLogicBase_classes.hpp"
#include "PyAISelectTargetLogicBase_parameters.hpp"


namespace SDK
{

// PythonFunction PyAISelectTargetLogicBase.PyAISelectTargetLogicBase.SelectTargetOrLocation
// (Native, Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AMarvelAIController*              AIController                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FMarvelAITarget                  OutAITarget                                            (Parm, OutParm, ReferenceParm, NoDestructor)
// struct FAIAbilityUsage                  AbilityUsage                                           (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UPyAISelectTargetLogicBase::SelectTargetOrLocation(class AMarvelAIController* AIController, struct FMarvelAITarget& OutAITarget, const struct FAIAbilityUsage& AbilityUsage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyAISelectTargetLogicBase", "SelectTargetOrLocation");

	Params::PyAISelectTargetLogicBase_SelectTargetOrLocation Parms{};

	Parms.AIController = AIController;
	Parms.OutAITarget = std::move(OutAITarget);
	Parms.AbilityUsage = std::move(AbilityUsage);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	OutAITarget = std::move(Parms.OutAITarget);

	return Parms.ReturnValue;
}


// PythonFunction PyAISelectTargetLogicBase.PyAISelectTargetLogicBase.SelectTargetForAbilityCheck
// (Native, Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FRequiredAIDataForAutoAbility    AbilityContext                                         (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor)
// struct FMarvelAITarget                  OutAITarget                                            (Parm, OutParm, ReferenceParm, NoDestructor)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UPyAISelectTargetLogicBase::SelectTargetForAbilityCheck(const struct FRequiredAIDataForAutoAbility& AbilityContext, struct FMarvelAITarget& OutAITarget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyAISelectTargetLogicBase", "SelectTargetForAbilityCheck");

	Params::PyAISelectTargetLogicBase_SelectTargetForAbilityCheck Parms{};

	Parms.AbilityContext = std::move(AbilityContext);
	Parms.OutAITarget = std::move(OutAITarget);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	OutAITarget = std::move(Parms.OutAITarget);

	return Parms.ReturnValue;
}

}

