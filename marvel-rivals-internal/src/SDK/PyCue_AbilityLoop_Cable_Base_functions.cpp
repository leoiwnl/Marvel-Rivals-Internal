#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PyCue_AbilityLoop_Cable_Base

#include "Basic.hpp"

#include "PyCue_AbilityLoop_Cable_Base_classes.hpp"
#include "PyCue_AbilityLoop_Cable_Base_parameters.hpp"


namespace SDK
{

// PythonFunction PyCue_AbilityLoop_Cable_Base.PyCue_AbilityLoop_Cable_Base.ResetDefault
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent)

void APyCue_AbilityLoop_Cable_Base::ResetDefault()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyCue_AbilityLoop_Cable_Base", "ResetDefault");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyCue_AbilityLoop_Cable_Base.PyCue_AbilityLoop_Cable_Base.WhileActive
// (Native, Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           MyTarget                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FGameplayCueParameters           Parameters                                             (ConstParm, Parm, OutParm, ReferenceParm)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool APyCue_AbilityLoop_Cable_Base::WhileActive(class AActor* MyTarget, const struct FGameplayCueParameters& Parameters)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyCue_AbilityLoop_Cable_Base", "WhileActive");

	Params::PyCue_AbilityLoop_Cable_Base_WhileActive Parms{};

	Parms.MyTarget = MyTarget;
	Parms.Parameters = std::move(Parameters);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// PythonFunction PyCue_AbilityLoop_Cable_Base.PyCue_AbilityLoop_Cable_Base.OnRemove
// (Native, Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           MyTarget                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FGameplayCueParameters           Parameters                                             (ConstParm, Parm, OutParm, ReferenceParm)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool APyCue_AbilityLoop_Cable_Base::OnRemove(class AActor* MyTarget, const struct FGameplayCueParameters& Parameters)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyCue_AbilityLoop_Cable_Base", "OnRemove");

	Params::PyCue_AbilityLoop_Cable_Base_OnRemove Parms{};

	Parms.MyTarget = MyTarget;
	Parms.Parameters = std::move(Parameters);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// PythonFunction PyCue_AbilityLoop_Cable_Base.PyCue_AbilityLoop_Cable_Base.OnRemoveInternal_PY
// (Native, Public, BlueprintCallable)

void APyCue_AbilityLoop_Cable_Base::OnRemoveInternal_PY()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyCue_AbilityLoop_Cable_Base", "OnRemoveInternal_PY");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyCue_AbilityLoop_Cable_Base.PyCue_AbilityLoop_Cable_Base.OnTimeToReleaseHandWhenNoHit_PY
// (Native, Public, BlueprintCallable)

void APyCue_AbilityLoop_Cable_Base::OnTimeToReleaseHandWhenNoHit_PY()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyCue_AbilityLoop_Cable_Base", "OnTimeToReleaseHandWhenNoHit_PY");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyCue_AbilityLoop_Cable_Base.PyCue_AbilityLoop_Cable_Base.BeforeCableUpdate_PY
// (Native, Public, BlueprintCallable)
// Parameters:
// float                                   DeltaTime                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APyCue_AbilityLoop_Cable_Base::BeforeCableUpdate_PY(float DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyCue_AbilityLoop_Cable_Base", "BeforeCableUpdate_PY");

	Params::PyCue_AbilityLoop_Cable_Base_BeforeCableUpdate_PY Parms{};

	Parms.DeltaTime = DeltaTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyCue_AbilityLoop_Cable_Base.PyCue_AbilityLoop_Cable_Base.AfterCableUpdate_PY
// (Native, Public, BlueprintCallable)
// Parameters:
// float                                   DeltaTime                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APyCue_AbilityLoop_Cable_Base::AfterCableUpdate_PY(float DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyCue_AbilityLoop_Cable_Base", "AfterCableUpdate_PY");

	Params::PyCue_AbilityLoop_Cable_Base_AfterCableUpdate_PY Parms{};

	Parms.DeltaTime = DeltaTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyCue_AbilityLoop_Cable_Base.PyCue_AbilityLoop_Cable_Base.OnTimeToStartFadeOut
// (Native, Public, BlueprintCallable)

void APyCue_AbilityLoop_Cable_Base::OnTimeToStartFadeOut()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyCue_AbilityLoop_Cable_Base", "OnTimeToStartFadeOut");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}

}

