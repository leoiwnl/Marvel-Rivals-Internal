#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Hero_1043

#include "Basic.hpp"

#include "Hero_1043_classes.hpp"
#include "Hero_1043_parameters.hpp"


namespace SDK
{

// Function Hero_1043.Cue_Ability_Loop_10434101.OnTagChanged
// (Final, Native, Public, HasOutParams)
// Parameters:
// struct FGameplayTag                     TagUpdated                                             (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TagExists                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ACue_Ability_Loop_10434101::OnTagChanged(const struct FGameplayTag& TagUpdated, bool TagExists)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Cue_Ability_Loop_10434101", "OnTagChanged");

	Params::Cue_Ability_Loop_10434101_OnTagChanged Parms{};

	Parms.TagUpdated = std::move(TagUpdated);
	Parms.TagExists = TagExists;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1043.Cue_Ability_Loop_10434101.SetMaterialChangeTimer
// (Final, Native, Public, HasOutParams)
// Parameters:
// float                                   ChangeTime                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FName>                     MaterialSlotNameArray                                  (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    NewState                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ACue_Ability_Loop_10434101::SetMaterialChangeTimer(float ChangeTime, TArray<class FName>* MaterialSlotNameArray, bool NewState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Cue_Ability_Loop_10434101", "SetMaterialChangeTimer");

	Params::Cue_Ability_Loop_10434101_SetMaterialChangeTimer Parms{};

	Parms.ChangeTime = ChangeTime;
	Parms.NewState = NewState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (MaterialSlotNameArray != nullptr)
		*MaterialSlotNameArray = std::move(Parms.MaterialSlotNameArray);
}


// Function Hero_1043.Cue_Ability_Loop_10434101.SetMeshMaterials
// (Final, Native, Public, HasOutParams)
// Parameters:
// TArray<class FName>                     MaterialSlotNameArray                                  (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    NewState                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ACue_Ability_Loop_10434101::SetMeshMaterials(TArray<class FName>* MaterialSlotNameArray, bool NewState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Cue_Ability_Loop_10434101", "SetMeshMaterials");

	Params::Cue_Ability_Loop_10434101_SetMeshMaterials Parms{};

	Parms.NewState = NewState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (MaterialSlotNameArray != nullptr)
		*MaterialSlotNameArray = std::move(Parms.MaterialSlotNameArray);
}


// Function Hero_1043.Cue_AbilityLoop_10432101.CreateCustomMaterial
// (Final, Native, Public, HasOutParams)
// Parameters:
// class USkeletalMeshComponent*           MeshComponent                                          (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TMap<int32, class UMaterialInterface*>  CurrentMaterialDict                                    (Parm, OutParm, NativeAccessSpecifierPublic)

void ACue_AbilityLoop_10432101::CreateCustomMaterial(class USkeletalMeshComponent* MeshComponent, TMap<int32, class UMaterialInterface*>* CurrentMaterialDict)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Cue_AbilityLoop_10432101", "CreateCustomMaterial");

	Params::Cue_AbilityLoop_10432101_CreateCustomMaterial Parms{};

	Parms.MeshComponent = MeshComponent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (CurrentMaterialDict != nullptr)
		*CurrentMaterialDict = std::move(Parms.CurrentMaterialDict);
}


// Function Hero_1043.Cue_AbilityLoop_10432101.OnTagChanged
// (Final, Native, Public, HasOutParams)
// Parameters:
// struct FGameplayTag                     TagUpdated                                             (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TagExists                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ACue_AbilityLoop_10432101::OnTagChanged(const struct FGameplayTag& TagUpdated, bool TagExists)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Cue_AbilityLoop_10432101", "OnTagChanged");

	Params::Cue_AbilityLoop_10432101_OnTagChanged Parms{};

	Parms.TagUpdated = std::move(TagUpdated);
	Parms.TagExists = TagExists;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1043.Cue_AbilityLoop_10432101.SetMeshPara
// (Final, Native, Public)
// Parameters:
// class USkeletalMeshComponent*           MeshComponent                                          (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USkeletalMesh*                    SkeletalMesh                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ACue_AbilityLoop_10432101::SetMeshPara(class USkeletalMeshComponent* MeshComponent, class USkeletalMesh* SkeletalMesh)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Cue_AbilityLoop_10432101", "SetMeshPara");

	Params::Cue_AbilityLoop_10432101_SetMeshPara Parms{};

	Parms.MeshComponent = MeshComponent;
	Parms.SkeletalMesh = SkeletalMesh;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1043.Cue_AbilityLoop_10432101.ShowShadowMesh
// (Final, Native, Public)
// Parameters:
// struct FShadowMesh                      ShadowMeshComponent                                    (Parm, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
// int32                                   Index_0                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ACue_AbilityLoop_10432101::ShowShadowMesh(const struct FShadowMesh& ShadowMeshComponent, int32 Index_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Cue_AbilityLoop_10432101", "ShowShadowMesh");

	Params::Cue_AbilityLoop_10432101_ShowShadowMesh Parms{};

	Parms.ShadowMeshComponent = std::move(ShadowMeshComponent);
	Parms.Index_0 = Index_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1043.Ability_104321.OnUltimateDashFinish
// (Final, Native, Protected)
// Parameters:
// EDashStopReason                         Reason                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAbility_104321::OnUltimateDashFinish(EDashStopReason Reason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ability_104321", "OnUltimateDashFinish");

	Params::Ability_104321_OnUltimateDashFinish Parms{};

	Parms.Reason = Reason;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1043.Ability_104321.ServerSetCharacterInput
// (Net, NetReliable, Native, Event, Protected, NetServer, HasDefaults)
// Parameters:
// struct FVector                          CharInput                                              (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAbility_104321::ServerSetCharacterInput(const struct FVector& CharInput)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ability_104321", "ServerSetCharacterInput");

	Params::Ability_104321_ServerSetCharacterInput Parms{};

	Parms.CharInput = std::move(CharInput);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1043.Ability_104331.OnMoveBlock
// (Final, Native, Public, HasOutParams)
// Parameters:
// struct FHitResult                       Impact                                                 (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

void UAbility_104331::OnMoveBlock(const struct FHitResult& Impact)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ability_104331", "OnMoveBlock");

	Params::Ability_104331_OnMoveBlock Parms{};

	Parms.Impact = std::move(Impact);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1043.Ability_104342.GetTarget
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FSelectTaskResult                ReturnValue                                            (Parm, OutParm, ReturnParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

struct FSelectTaskResult UAbility_104342::GetTarget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ability_104342", "GetTarget");

	Params::Ability_104342_GetTarget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hero_1043.Ability_104342.OnKillOtherCall
// (Native, Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// class AActor*                           InSourceAvatar                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           InTargetAvatar                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FAttributeModifierHandle         ModifierParameterHandle                                (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAbility_104342::OnKillOtherCall(class AActor* InSourceAvatar, class AActor* InTargetAvatar, const struct FAttributeModifierHandle& ModifierParameterHandle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ability_104342", "OnKillOtherCall");

	Params::Ability_104342_OnKillOtherCall Parms{};

	Parms.InSourceAvatar = InSourceAvatar;
	Parms.InTargetAvatar = InTargetAvatar;
	Parms.ModifierParameterHandle = std::move(ModifierParameterHandle);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1043.Ability_Glide.ApplyCapsuleChange
// (Final, Native, Protected, BlueprintCallable)

void UAbility_Glide::ApplyCapsuleChange()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ability_Glide", "ApplyCapsuleChange");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1043.Ability_Glide.CreateAndApplyGlideTask
// (Final, Native, Protected, BlueprintCallable)

void UAbility_Glide::CreateAndApplyGlideTask()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ability_Glide", "CreateAndApplyGlideTask");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1043.Ability_Glide.CreateAndEnableCameraModifier
// (Final, Native, Protected, BlueprintCallable)

void UAbility_Glide::CreateAndEnableCameraModifier()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ability_Glide", "CreateAndEnableCameraModifier");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1043.Ability_Glide.EndGlideTask
// (Final, Native, Protected, BlueprintCallable)

void UAbility_Glide::EndGlideTask()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ability_Glide", "EndGlideTask");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1043.Ability_Glide.OnMoveBlock
// (Final, Native, Public, HasOutParams)
// Parameters:
// struct FHitResult                       Impact                                                 (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

void UAbility_Glide::OnMoveBlock(const struct FHitResult& Impact)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ability_Glide", "OnMoveBlock");

	Params::Ability_Glide_OnMoveBlock Parms{};

	Parms.Impact = std::move(Impact);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1043.Ability_Glide.OnMovementInputs
// (Final, Native, Protected)
// Parameters:
// uint8                                   InMovementInputs                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   DeltaTime                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAbility_Glide::OnMovementInputs(uint8 InMovementInputs, float DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ability_Glide", "OnMovementInputs");

	Params::Ability_Glide_OnMovementInputs Parms{};

	Parms.InMovementInputs = InMovementInputs;
	Parms.DeltaTime = DeltaTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1043.Ability_Glide.OnMoveRight
// (Final, Native, Public)
// Parameters:
// float                                   Val                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAbility_Glide::OnMoveRight(float Val)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ability_Glide", "OnMoveRight");

	Params::Ability_Glide_OnMoveRight Parms{};

	Parms.Val = Val;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1043.Ability_Glide.RecoverCapsuleChange
// (Final, Native, Protected, BlueprintCallable)

void UAbility_Glide::RecoverCapsuleChange()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ability_Glide", "RecoverCapsuleChange");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1043.Ability_Glide.RemoveCameraModifier
// (Final, Native, Protected, BlueprintCallable)

void UAbility_Glide::RemoveCameraModifier()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ability_Glide", "RemoveCameraModifier");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1043.Ability_Glide.GetAimLocation
// (Native, Event, Public, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector UAbility_Glide::GetAimLocation() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ability_Glide", "GetAimLocation");

	Params::Ability_Glide_GetAimLocation Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hero_1043.StarlordAnimInstance.GetStartVelocity
// (Final, Native, Public, HasDefaults)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector UStarlordAnimInstance::GetStartVelocity()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StarlordAnimInstance", "GetStartVelocity");

	Params::StarlordAnimInstance_GetStartVelocity Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hero_1043.StarlordAnimInstance.UpdateDoubleJumpingFlag
// (Final, Native, Protected)
// Parameters:
// bool                                    NewState                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UStarlordAnimInstance::UpdateDoubleJumpingFlag(bool NewState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StarlordAnimInstance", "UpdateDoubleJumpingFlag");

	Params::StarlordAnimInstance_UpdateDoubleJumpingFlag Parms{};

	Parms.NewState = NewState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1043.StarlordCharacter.AssignDeathCueTag
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FGameplayTag                     InDeathCue                                             (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AStarlordCharacter::AssignDeathCueTag(const struct FGameplayTag& InDeathCue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StarlordCharacter", "AssignDeathCueTag");

	Params::StarlordCharacter_AssignDeathCueTag Parms{};

	Parms.InDeathCue = std::move(InDeathCue);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1043.StarlordCharacter.GetCharacterInput
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector AStarlordCharacter::GetCharacterInput()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StarlordCharacter", "GetCharacterInput");

	Params::StarlordCharacter_GetCharacterInput Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hero_1043.StarlordCharacter.SetCharacterInput
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                          CharInput                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AStarlordCharacter::SetCharacterInput(const struct FVector& CharInput)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StarlordCharacter", "SetCharacterInput");

	Params::StarlordCharacter_SetCharacterInput Parms{};

	Parms.CharInput = std::move(CharInput);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1043.StarlordCharacter.SetDoubleJump
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bNewState                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bNeedBroadCast                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AStarlordCharacter::SetDoubleJump(bool bNewState, bool bNeedBroadCast)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StarlordCharacter", "SetDoubleJump");

	Params::StarlordCharacter_SetDoubleJump Parms{};

	Parms.bNewState = bNewState;
	Parms.bNeedBroadCast = bNeedBroadCast;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1043.StarlordCharacter.SetFly
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    NewState                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AStarlordCharacter::SetFly(bool NewState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StarlordCharacter", "SetFly");

	Params::StarlordCharacter_SetFly Parms{};

	Parms.NewState = NewState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1043.StarlordCharacter.SetStarFlyState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EStarFlyState                           NewState                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AStarlordCharacter::SetStarFlyState(EStarFlyState NewState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StarlordCharacter", "SetStarFlyState");

	Params::StarlordCharacter_SetStarFlyState Parms{};

	Parms.NewState = NewState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1043.StarlordCharacter.SetStartFly
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    NewState                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AStarlordCharacter::SetStartFly(bool NewState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StarlordCharacter", "SetStartFly");

	Params::StarlordCharacter_SetStartFly Parms{};

	Parms.NewState = NewState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}

}

